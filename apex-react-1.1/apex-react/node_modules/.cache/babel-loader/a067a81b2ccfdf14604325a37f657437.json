{"ast":null,"code":"import _classCallCheck from \"C:\\\\Users\\\\USER\\\\Desktop\\\\yourqr_admin\\\\apex-react-1.1\\\\apex-react\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\USER\\\\Desktop\\\\yourqr_admin\\\\apex-react-1.1\\\\apex-react\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\USER\\\\Desktop\\\\yourqr_admin\\\\apex-react-1.1\\\\apex-react\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\USER\\\\Desktop\\\\yourqr_admin\\\\apex-react-1.1\\\\apex-react\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Users\\\\USER\\\\Desktop\\\\yourqr_admin\\\\apex-react-1.1\\\\apex-react\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"C:\\\\Users\\\\USER\\\\Desktop\\\\yourqr_admin\\\\apex-react-1.1\\\\apex-react\\\\src\\\\views\\\\qr\\\\qrStatComp_1.js\";\nimport React, { Component, Fragment } from \"react\";\nimport { Row, Col } from \"reactstrap\";\nimport * as Icon from \"react-feather\";\nimport { StaticCardData } from \"../cards/staticCardData\";\nimport { AdvancedCardData } from \"../cards/advancedCardData\";\nimport MinimalStatisticsChart from \"../../components/cards/minimalStatisticsWithChartCard\";\nimport ProductsSalesChartCard from \"../../components/cards/productsSalesChartCard\";\nimport MonthlySalesStatisticsBarChartCard from \"../../components/cards/monthlySalesStatisticsBarChartCard\";\nimport ShoppingCartCard from \"../../components/cards/shoppingCartCard\";\nimport VisitSalesStatisticsCard from \"../../components/cards/visitSalesStatistics\";\nimport WeeklyStatisticsLineChartCard from \"../../components/cards/weeklyStatisticsLineChartCard\";\nimport HobbiesStatisticsBarChartCard from \"../../components/cards/hobbiesStatisticsBarChartCard\";\nimport UserListCard from \"../../components/cards/userListCard\";\nimport ProjectStatsDonutChartCard from \"../../components/cards/projectStatsDonutChartCard\";\nimport { Button, ButtonGroup, ButtonToolbar } from \"reactstrap\"; // Styling\n\nvar QRStatComp =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(QRStatComp, _Component);\n\n  function QRStatComp() {\n    _classCallCheck(this, QRStatComp);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(QRStatComp).apply(this, arguments));\n  }\n\n  _createClass(QRStatComp, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this = this;\n\n      fetch(\"https://myqr.thaicrowd.com/api/v1/qr.checkqr/1063\").then(function (res) {\n        return res.json();\n      }).then(function (result) {\n        _this.setState({\n          isLoaded: true,\n          items: result.items\n        });\n      }, // Note: it's important to handle errors here\n      // instead of a catch() block so that we don't swallow\n      // exceptions from actual bugs in components.\n      function (error) {\n        _this.setState({\n          isLoaded: true,\n          error: error\n        });\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      //       return (\n      //         <Fragment>\n      //                 <Row>\n      //                    <Col sm=\"12\">\n      //                       <ProductsSalesChartCard\n      //                          productsSalesData={AdvancedCardData.ProductsSalesData}\n      //                          cardTitle=\"Products Sales\"\n      //                          salesText=\"Sales\"\n      //                          visitText=\"Visits\"\n      //                       />\n      //                    </Col>\n      //                 </Row>\n      //\n      //\n      //\n      // </Fragment>\n      //       );\n      var _this$state = this.state,\n          error = _this$state.error,\n          isLoaded = _this$state.isLoaded,\n          items = _this$state.items;\n\n      if (error) {\n        return React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 73\n          },\n          __self: this\n        }, \"Error: \", error.message);\n      } else if (!isLoaded) {\n        return React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 75\n          },\n          __self: this\n        }, \"Loading...\");\n      } else {\n        return React.createElement(\"ul\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 78\n          },\n          __self: this\n        }, items.map(function (item) {\n          return React.createElement(\"li\", {\n            key: item.name,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 80\n            },\n            __self: this\n          }, item.name, \" \", item.price);\n        }));\n      }\n    }\n  }]);\n\n  return QRStatComp;\n}(Component);\n\nexport default QRStatComp;","map":{"version":3,"sources":["C:\\Users\\USER\\Desktop\\yourqr_admin\\apex-react-1.1\\apex-react\\src\\views\\qr\\qrStatComp_1.js"],"names":["React","Component","Fragment","Row","Col","Icon","StaticCardData","AdvancedCardData","MinimalStatisticsChart","ProductsSalesChartCard","MonthlySalesStatisticsBarChartCard","ShoppingCartCard","VisitSalesStatisticsCard","WeeklyStatisticsLineChartCard","HobbiesStatisticsBarChartCard","UserListCard","ProjectStatsDonutChartCard","Button","ButtonGroup","ButtonToolbar","QRStatComp","fetch","then","res","json","result","setState","isLoaded","items","error","state","message","map","item","name","price"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,GAAT,EAAcC,GAAd,QAAyB,YAAzB;AAEA,OAAO,KAAKC,IAAZ,MAAsB,eAAtB;AAEA,SAASC,cAAT,QAA+B,yBAA/B;AACA,SAASC,gBAAT,QAAiC,2BAAjC;AAEA,OAAOC,sBAAP,MAAmC,uDAAnC;AACA,OAAOC,sBAAP,MAAmC,+CAAnC;AAEA,OAAOC,kCAAP,MAA+C,2DAA/C;AACA,OAAOC,gBAAP,MAA6B,yCAA7B;AAEA,OAAOC,wBAAP,MAAqC,6CAArC;AACA,OAAOC,6BAAP,MAA0C,sDAA1C;AAEA,OAAOC,6BAAP,MAA0C,sDAA1C;AACA,OAAOC,YAAP,MAAyB,qCAAzB;AACA,OAAOC,0BAAP,MAAuC,mDAAvC;AAGA,SAASC,MAAT,EAAiBC,WAAjB,EAA8BC,aAA9B,QAAmD,YAAnD,C,CAEA;;IAEMC,U;;;;;;;;;;;;;wCAEgB;AAAA;;AAChBC,MAAAA,KAAK,CAAC,mDAAD,CAAL,CACGC,IADH,CACQ,UAAAC,GAAG;AAAA,eAAIA,GAAG,CAACC,IAAJ,EAAJ;AAAA,OADX,EAEGF,IAFH,CAGI,UAACG,MAAD,EAAY;AACV,QAAA,KAAI,CAACC,QAAL,CAAc;AACZC,UAAAA,QAAQ,EAAE,IADE;AAEZC,UAAAA,KAAK,EAAEH,MAAM,CAACG;AAFF,SAAd;AAID,OARL,EASI;AACA;AACA;AACA,gBAACC,KAAD,EAAW;AACT,QAAA,KAAI,CAACH,QAAL,CAAc;AACZC,UAAAA,QAAQ,EAAE,IADE;AAEZE,UAAAA,KAAK,EAALA;AAFY,SAAd;AAID,OAjBL;AAmBD;;;6BAIO;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAjBY,wBAkBuB,KAAKC,KAlB5B;AAAA,UAkBJD,KAlBI,eAkBJA,KAlBI;AAAA,UAkBGF,QAlBH,eAkBGA,QAlBH;AAAA,UAkBaC,KAlBb,eAkBaA,KAlBb;;AAmBT,UAAIC,KAAJ,EAAW;AACT,eAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAAaA,KAAK,CAACE,OAAnB,CAAP;AACD,OAFD,MAEO,IAAI,CAACJ,QAAL,EAAe;AACpB,eAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAAP;AACD,OAFM,MAEA;AACL,eACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACGC,KAAK,CAACI,GAAN,CAAU,UAAAC,IAAI;AAAA,iBACb;AAAI,YAAA,GAAG,EAAEA,IAAI,CAACC,IAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aACGD,IAAI,CAACC,IADR,OACeD,IAAI,CAACE,KADpB,CADa;AAAA,SAAd,CADH,CADF;AASD;AACA;;;;EA5DqBlC,S;;AA+DzB,eAAemB,UAAf","sourcesContent":["import React, { Component, Fragment } from \"react\";\r\nimport { Row, Col } from \"reactstrap\";\r\n\r\nimport * as Icon from \"react-feather\";\r\n\r\nimport { StaticCardData } from \"../cards/staticCardData\";\r\nimport { AdvancedCardData } from \"../cards/advancedCardData\";\r\n\r\nimport MinimalStatisticsChart from \"../../components/cards/minimalStatisticsWithChartCard\";\r\nimport ProductsSalesChartCard from \"../../components/cards/productsSalesChartCard\";\r\n\r\nimport MonthlySalesStatisticsBarChartCard from \"../../components/cards/monthlySalesStatisticsBarChartCard\";\r\nimport ShoppingCartCard from \"../../components/cards/shoppingCartCard\";\r\n\r\nimport VisitSalesStatisticsCard from \"../../components/cards/visitSalesStatistics\";\r\nimport WeeklyStatisticsLineChartCard from \"../../components/cards/weeklyStatisticsLineChartCard\";\r\n\r\nimport HobbiesStatisticsBarChartCard from \"../../components/cards/hobbiesStatisticsBarChartCard\";\r\nimport UserListCard from \"../../components/cards/userListCard\";\r\nimport ProjectStatsDonutChartCard from \"../../components/cards/projectStatsDonutChartCard\";\r\n\r\n\r\nimport { Button, ButtonGroup, ButtonToolbar } from \"reactstrap\";\r\n\r\n// Styling\r\n\r\nclass QRStatComp extends Component {\r\n\r\n  componentDidMount() {\r\n      fetch(\"https://myqr.thaicrowd.com/api/v1/qr.checkqr/1063\")\r\n        .then(res => res.json())\r\n        .then(\r\n          (result) => {\r\n            this.setState({\r\n              isLoaded: true,\r\n              items: result.items\r\n            });\r\n          },\r\n          // Note: it's important to handle errors here\r\n          // instead of a catch() block so that we don't swallow\r\n          // exceptions from actual bugs in components.\r\n          (error) => {\r\n            this.setState({\r\n              isLoaded: true,\r\n              error\r\n            });\r\n          }\r\n        )\r\n    }\r\n\r\n\r\n\r\n   render() {\r\n//       return (\r\n//         <Fragment>\r\n//                 <Row>\r\n//                    <Col sm=\"12\">\r\n//                       <ProductsSalesChartCard\r\n//                          productsSalesData={AdvancedCardData.ProductsSalesData}\r\n//                          cardTitle=\"Products Sales\"\r\n//                          salesText=\"Sales\"\r\n//                          visitText=\"Visits\"\r\n//                       />\r\n//                    </Col>\r\n//                 </Row>\r\n//\r\n//\r\n//\r\n// </Fragment>\r\n//       );\r\nconst { error, isLoaded, items } = this.state;\r\n   if (error) {\r\n     return <div>Error: {error.message}</div>;\r\n   } else if (!isLoaded) {\r\n     return <div>Loading...</div>;\r\n   } else {\r\n     return (\r\n       <ul>\r\n         {items.map(item => (\r\n           <li key={item.name}>\r\n             {item.name} {item.price}\r\n           </li>\r\n         ))}\r\n       </ul>\r\n     );\r\n   }\r\n   }\r\n}\r\n\r\nexport default QRStatComp;\r\n"]},"metadata":{},"sourceType":"module"}