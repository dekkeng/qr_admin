{"version":3,"sources":["../node_modules/react-transition-group/TransitionGroup.js","../node_modules/react-transition-group/Transition.js","../node_modules/react-transition-group/utils/PropTypes.js","../node_modules/react-transition-group/utils/ChildMapping.js"],"names":["exports","__esModule","default","_propTypes","_interopRequireDefault","__webpack_require__","_react","_reactLifecyclesCompat","_ChildMapping","obj","_extends","Object","assign","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","apply","this","_assertThisInitialized","self","ReferenceError","values","keys","map","k","TransitionGroup","_React$Component","subClass","superClass","props","context","_this","handleExited","bind","state","firstRender","create","constructor","__proto__","_proto","getChildContext","transitionGroup","isMounting","appeared","componentDidMount","mounted","componentWillUnmount","getDerivedStateFromProps","nextProps","_ref","prevChildMapping","children","getInitialChildMapping","getNextChildMapping","child","node","currentChildMapping","getChildMapping","onExited","setState","render","_this$props","Component","component","childFactory","excluded","sourceKeys","indexOf","_objectWithoutPropertiesLoose","appear","enter","exit","createElement","childContextTypes","object","isRequired","propTypes","defaultProps","_default","polyfill","module","EXITING","ENTERED","ENTERING","EXITED","UNMOUNTED","PropTypes","newObj","desc","defineProperty","getOwnPropertyDescriptor","get","set","_interopRequireWildcard","_reactDom","Transition","initialStatus","parentGroup","appearStatus","in","unmountOnExit","mountOnEnter","status","nextCallback","prevState","updateStatus","componentDidUpdate","prevProps","nextStatus","cancelNextCallback","getTimeouts","timeout","mounting","findDOMNode","performEnter","performExit","_this2","appearing","timeouts","onEnter","safeSetState","onEntering","onTransitionEnd","onEntered","_this3","onExit","onExiting","cancel","nextState","callback","setNextCallback","_this4","active","event","handler","addEndListener","setTimeout","childProps","Children","only","cloneElement","noop","contextTypes","transitionTimeout","transitionType","timeoutPropName","enabledPropName","Error","classNamesShape","timeoutsShape","oneOfType","number","shape","string","enterDone","enterActive","exitDone","exitActive","mergeChildMappings","getProp","nextChildMapping","forEach","isValidElement","hasPrev","hasNext","prevChild","isLeaving","mapFn","result","c","mapper","prev","next","getValueForKey","nextKeysPending","pendingKeys","prevKey","push","childMapping","nextKey","pendingNextKey","prop"],"mappings":"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","file":"static/js/7.bd225da2.chunk.js","sourcesContent":["\"use strict\";\n\nexports.__esModule = true;\nexports.default = void 0;\n\nvar _propTypes = _interopRequireDefault(require(\"prop-types\"));\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _reactLifecyclesCompat = require(\"react-lifecycles-compat\");\n\nvar _ChildMapping = require(\"./utils/ChildMapping\");\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}\n\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nfunction _inheritsLoose(subClass, superClass) {\n  subClass.prototype = Object.create(superClass.prototype);\n  subClass.prototype.constructor = subClass;\n  subClass.__proto__ = superClass;\n}\n\nfunction _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return self;\n}\n\nvar values = Object.values || function (obj) {\n  return Object.keys(obj).map(function (k) {\n    return obj[k];\n  });\n};\n\nvar propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /**\n   * `<TransitionGroup>` renders a `<div>` by default. You can change this\n   * behavior by providing a `component` prop.\n   * If you use React v16+ and would like to avoid a wrapping `<div>` element\n   * you can pass in `component={null}`. This is useful if the wrapping div\n   * borks your css styles.\n   */\n  component: _propTypes.default.any,\n\n  /**\n   * A set of `<Transition>` components, that are toggled `in` and out as they\n   * leave. the `<TransitionGroup>` will inject specific transition props, so\n   * remember to spread them through if you are wrapping the `<Transition>` as\n   * with our `<Fade>` example.\n   */\n  children: _propTypes.default.node,\n\n  /**\n   * A convenience prop that enables or disables appear animations\n   * for all children. Note that specifying this will override any defaults set\n   * on individual children Transitions.\n   */\n  appear: _propTypes.default.bool,\n\n  /**\n   * A convenience prop that enables or disables enter animations\n   * for all children. Note that specifying this will override any defaults set\n   * on individual children Transitions.\n   */\n  enter: _propTypes.default.bool,\n\n  /**\n   * A convenience prop that enables or disables exit animations\n   * for all children. Note that specifying this will override any defaults set\n   * on individual children Transitions.\n   */\n  exit: _propTypes.default.bool,\n\n  /**\n   * You may need to apply reactive updates to a child as it is exiting.\n   * This is generally done by using `cloneElement` however in the case of an exiting\n   * child the element has already been removed and not accessible to the consumer.\n   *\n   * If you do need to update a child as it leaves you can provide a `childFactory`\n   * to wrap every child, even the ones that are leaving.\n   *\n   * @type Function(child: ReactElement) -> ReactElement\n   */\n  childFactory: _propTypes.default.func\n} : {};\n;\nvar defaultProps = {\n  component: 'div',\n  childFactory: function childFactory(child) {\n    return child;\n  }\n  /**\n   * The `<TransitionGroup>` component manages a set of transition components\n   * (`<Transition>` and `<CSSTransition>`) in a list. Like with the transition\n   * components, `<TransitionGroup>` is a state machine for managing the mounting\n   * and unmounting of components over time.\n   *\n   * Consider the example below. As items are removed or added to the TodoList the\n   * `in` prop is toggled automatically by the `<TransitionGroup>`.\n   *\n   * Note that `<TransitionGroup>`  does not define any animation behavior!\n   * Exactly _how_ a list item animates is up to the individual transition\n   * component. This means you can mix and match animations across different list\n   * items.\n   */\n\n};\n\nvar TransitionGroup =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inheritsLoose(TransitionGroup, _React$Component);\n\n  function TransitionGroup(props, context) {\n    var _this;\n\n    _this = _React$Component.call(this, props, context) || this;\n\n    var handleExited = _this.handleExited.bind(_assertThisInitialized(_assertThisInitialized(_this))); // Initial children should all be entering, dependent on appear\n\n\n    _this.state = {\n      handleExited: handleExited,\n      firstRender: true\n    };\n    return _this;\n  }\n\n  var _proto = TransitionGroup.prototype;\n\n  _proto.getChildContext = function getChildContext() {\n    return {\n      transitionGroup: {\n        isMounting: !this.appeared\n      }\n    };\n  };\n\n  _proto.componentDidMount = function componentDidMount() {\n    this.appeared = true;\n    this.mounted = true;\n  };\n\n  _proto.componentWillUnmount = function componentWillUnmount() {\n    this.mounted = false;\n  };\n\n  TransitionGroup.getDerivedStateFromProps = function getDerivedStateFromProps(nextProps, _ref) {\n    var prevChildMapping = _ref.children,\n        handleExited = _ref.handleExited,\n        firstRender = _ref.firstRender;\n    return {\n      children: firstRender ? (0, _ChildMapping.getInitialChildMapping)(nextProps, handleExited) : (0, _ChildMapping.getNextChildMapping)(nextProps, prevChildMapping, handleExited),\n      firstRender: false\n    };\n  };\n\n  _proto.handleExited = function handleExited(child, node) {\n    var currentChildMapping = (0, _ChildMapping.getChildMapping)(this.props.children);\n    if (child.key in currentChildMapping) return;\n\n    if (child.props.onExited) {\n      child.props.onExited(node);\n    }\n\n    if (this.mounted) {\n      this.setState(function (state) {\n        var children = _extends({}, state.children);\n\n        delete children[child.key];\n        return {\n          children: children\n        };\n      });\n    }\n  };\n\n  _proto.render = function render() {\n    var _this$props = this.props,\n        Component = _this$props.component,\n        childFactory = _this$props.childFactory,\n        props = _objectWithoutPropertiesLoose(_this$props, [\"component\", \"childFactory\"]);\n\n    var children = values(this.state.children).map(childFactory);\n    delete props.appear;\n    delete props.enter;\n    delete props.exit;\n\n    if (Component === null) {\n      return children;\n    }\n\n    return _react.default.createElement(Component, props, children);\n  };\n\n  return TransitionGroup;\n}(_react.default.Component);\n\nTransitionGroup.childContextTypes = {\n  transitionGroup: _propTypes.default.object.isRequired\n};\nTransitionGroup.propTypes = process.env.NODE_ENV !== \"production\" ? propTypes : {};\nTransitionGroup.defaultProps = defaultProps;\n\nvar _default = (0, _reactLifecyclesCompat.polyfill)(TransitionGroup);\n\nexports.default = _default;\nmodule.exports = exports[\"default\"];","\"use strict\";\n\nexports.__esModule = true;\nexports.default = exports.EXITING = exports.ENTERED = exports.ENTERING = exports.EXITED = exports.UNMOUNTED = void 0;\n\nvar PropTypes = _interopRequireWildcard(require(\"prop-types\"));\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _reactDom = _interopRequireDefault(require(\"react-dom\"));\n\nvar _reactLifecyclesCompat = require(\"react-lifecycles-compat\");\n\nvar _PropTypes = require(\"./utils/PropTypes\");\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction _interopRequireWildcard(obj) {\n  if (obj && obj.__esModule) {\n    return obj;\n  } else {\n    var newObj = {};\n\n    if (obj != null) {\n      for (var key in obj) {\n        if (Object.prototype.hasOwnProperty.call(obj, key)) {\n          var desc = Object.defineProperty && Object.getOwnPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : {};\n\n          if (desc.get || desc.set) {\n            Object.defineProperty(newObj, key, desc);\n          } else {\n            newObj[key] = obj[key];\n          }\n        }\n      }\n    }\n\n    newObj.default = obj;\n    return newObj;\n  }\n}\n\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}\n\nfunction _inheritsLoose(subClass, superClass) {\n  subClass.prototype = Object.create(superClass.prototype);\n  subClass.prototype.constructor = subClass;\n  subClass.__proto__ = superClass;\n}\n\nvar UNMOUNTED = 'unmounted';\nexports.UNMOUNTED = UNMOUNTED;\nvar EXITED = 'exited';\nexports.EXITED = EXITED;\nvar ENTERING = 'entering';\nexports.ENTERING = ENTERING;\nvar ENTERED = 'entered';\nexports.ENTERED = ENTERED;\nvar EXITING = 'exiting';\n/**\n * The Transition component lets you describe a transition from one component\n * state to another _over time_ with a simple declarative API. Most commonly\n * it's used to animate the mounting and unmounting of a component, but can also\n * be used to describe in-place transition states as well.\n *\n * By default the `Transition` component does not alter the behavior of the\n * component it renders, it only tracks \"enter\" and \"exit\" states for the components.\n * It's up to you to give meaning and effect to those states. For example we can\n * add styles to a component when it enters or exits:\n *\n * ```jsx\n * import Transition from 'react-transition-group/Transition';\n *\n * const duration = 300;\n *\n * const defaultStyle = {\n *   transition: `opacity ${duration}ms ease-in-out`,\n *   opacity: 0,\n * }\n *\n * const transitionStyles = {\n *   entering: { opacity: 0 },\n *   entered:  { opacity: 1 },\n * };\n *\n * const Fade = ({ in: inProp }) => (\n *   <Transition in={inProp} timeout={duration}>\n *     {(state) => (\n *       <div style={{\n *         ...defaultStyle,\n *         ...transitionStyles[state]\n *       }}>\n *         I'm a fade Transition!\n *       </div>\n *     )}\n *   </Transition>\n * );\n * ```\n *\n * As noted the `Transition` component doesn't _do_ anything by itself to its child component.\n * What it does do is track transition states over time so you can update the\n * component (such as by adding styles or classes) when it changes states.\n *\n * There are 4 main states a Transition can be in:\n *  - `'entering'`\n *  - `'entered'`\n *  - `'exiting'`\n *  - `'exited'`\n *\n * Transition state is toggled via the `in` prop. When `true` the component begins the\n * \"Enter\" stage. During this stage, the component will shift from its current transition state,\n * to `'entering'` for the duration of the transition and then to the `'entered'` stage once\n * it's complete. Let's take the following example:\n *\n * ```jsx\n * state = { in: false };\n *\n * toggleEnterState = () => {\n *   this.setState({ in: true });\n * }\n *\n * render() {\n *   return (\n *     <div>\n *       <Transition in={this.state.in} timeout={500} />\n *       <button onClick={this.toggleEnterState}>Click to Enter</button>\n *     </div>\n *   );\n * }\n * ```\n *\n * When the button is clicked the component will shift to the `'entering'` state and\n * stay there for 500ms (the value of `timeout`) before it finally switches to `'entered'`.\n *\n * When `in` is `false` the same thing happens except the state moves from `'exiting'` to `'exited'`.\n *\n * ## Timing\n *\n * Timing is often the trickiest part of animation, mistakes can result in slight delays\n * that are hard to pin down. A common example is when you want to add an exit transition,\n * you should set the desired final styles when the state is `'exiting'`. That's when the\n * transition to those styles will start and, if you matched the `timeout` prop with the\n * CSS Transition duration, it will end exactly when the state changes to `'exited'`.\n *\n * > **Note**: For simpler transitions the `Transition` component might be enough, but\n * > take into account that it's platform-agnostic, while the `CSSTransition` component\n * > [forces reflows](https://github.com/reactjs/react-transition-group/blob/5007303e729a74be66a21c3e2205e4916821524b/src/CSSTransition.js#L208-L215)\n * > in order to make more complex transitions more predictable. For example, even though\n * > classes `example-enter` and `example-enter-active` are applied immediately one after\n * > another, you can still transition from one to the other because of the forced reflow\n * > (read [this issue](https://github.com/reactjs/react-transition-group/issues/159#issuecomment-322761171)\n * > for more info). Take this into account when choosing between `Transition` and\n * > `CSSTransition`.\n */\n\nexports.EXITING = EXITING;\n\nvar Transition =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inheritsLoose(Transition, _React$Component);\n\n  function Transition(props, context) {\n    var _this;\n\n    _this = _React$Component.call(this, props, context) || this;\n    var parentGroup = context.transitionGroup; // In the context of a TransitionGroup all enters are really appears\n\n    var appear = parentGroup && !parentGroup.isMounting ? props.enter : props.appear;\n    var initialStatus;\n    _this.appearStatus = null;\n\n    if (props.in) {\n      if (appear) {\n        initialStatus = EXITED;\n        _this.appearStatus = ENTERING;\n      } else {\n        initialStatus = ENTERED;\n      }\n    } else {\n      if (props.unmountOnExit || props.mountOnEnter) {\n        initialStatus = UNMOUNTED;\n      } else {\n        initialStatus = EXITED;\n      }\n    }\n\n    _this.state = {\n      status: initialStatus\n    };\n    _this.nextCallback = null;\n    return _this;\n  }\n\n  var _proto = Transition.prototype;\n\n  _proto.getChildContext = function getChildContext() {\n    return {\n      transitionGroup: null // allows for nested Transitions\n\n    };\n  };\n\n  Transition.getDerivedStateFromProps = function getDerivedStateFromProps(_ref, prevState) {\n    var nextIn = _ref.in;\n\n    if (nextIn && prevState.status === UNMOUNTED) {\n      return {\n        status: EXITED\n      };\n    }\n\n    return null;\n  }; // getSnapshotBeforeUpdate(prevProps) {\n  //   let nextStatus = null\n  //   if (prevProps !== this.props) {\n  //     const { status } = this.state\n  //     if (this.props.in) {\n  //       if (status !== ENTERING && status !== ENTERED) {\n  //         nextStatus = ENTERING\n  //       }\n  //     } else {\n  //       if (status === ENTERING || status === ENTERED) {\n  //         nextStatus = EXITING\n  //       }\n  //     }\n  //   }\n  //   return { nextStatus }\n  // }\n\n\n  _proto.componentDidMount = function componentDidMount() {\n    this.updateStatus(true, this.appearStatus);\n  };\n\n  _proto.componentDidUpdate = function componentDidUpdate(prevProps) {\n    var nextStatus = null;\n\n    if (prevProps !== this.props) {\n      var status = this.state.status;\n\n      if (this.props.in) {\n        if (status !== ENTERING && status !== ENTERED) {\n          nextStatus = ENTERING;\n        }\n      } else {\n        if (status === ENTERING || status === ENTERED) {\n          nextStatus = EXITING;\n        }\n      }\n    }\n\n    this.updateStatus(false, nextStatus);\n  };\n\n  _proto.componentWillUnmount = function componentWillUnmount() {\n    this.cancelNextCallback();\n  };\n\n  _proto.getTimeouts = function getTimeouts() {\n    var timeout = this.props.timeout;\n    var exit, enter, appear;\n    exit = enter = appear = timeout;\n\n    if (timeout != null && typeof timeout !== 'number') {\n      exit = timeout.exit;\n      enter = timeout.enter;\n      appear = timeout.appear;\n    }\n\n    return {\n      exit: exit,\n      enter: enter,\n      appear: appear\n    };\n  };\n\n  _proto.updateStatus = function updateStatus(mounting, nextStatus) {\n    if (mounting === void 0) {\n      mounting = false;\n    }\n\n    if (nextStatus !== null) {\n      // nextStatus will always be ENTERING or EXITING.\n      this.cancelNextCallback();\n\n      var node = _reactDom.default.findDOMNode(this);\n\n      if (nextStatus === ENTERING) {\n        this.performEnter(node, mounting);\n      } else {\n        this.performExit(node);\n      }\n    } else if (this.props.unmountOnExit && this.state.status === EXITED) {\n      this.setState({\n        status: UNMOUNTED\n      });\n    }\n  };\n\n  _proto.performEnter = function performEnter(node, mounting) {\n    var _this2 = this;\n\n    var enter = this.props.enter;\n    var appearing = this.context.transitionGroup ? this.context.transitionGroup.isMounting : mounting;\n    var timeouts = this.getTimeouts(); // no enter animation skip right to ENTERED\n    // if we are mounting and running this it means appear _must_ be set\n\n    if (!mounting && !enter) {\n      this.safeSetState({\n        status: ENTERED\n      }, function () {\n        _this2.props.onEntered(node);\n      });\n      return;\n    }\n\n    this.props.onEnter(node, appearing);\n    this.safeSetState({\n      status: ENTERING\n    }, function () {\n      _this2.props.onEntering(node, appearing); // FIXME: appear timeout?\n\n\n      _this2.onTransitionEnd(node, timeouts.enter, function () {\n        _this2.safeSetState({\n          status: ENTERED\n        }, function () {\n          _this2.props.onEntered(node, appearing);\n        });\n      });\n    });\n  };\n\n  _proto.performExit = function performExit(node) {\n    var _this3 = this;\n\n    var exit = this.props.exit;\n    var timeouts = this.getTimeouts(); // no exit animation skip right to EXITED\n\n    if (!exit) {\n      this.safeSetState({\n        status: EXITED\n      }, function () {\n        _this3.props.onExited(node);\n      });\n      return;\n    }\n\n    this.props.onExit(node);\n    this.safeSetState({\n      status: EXITING\n    }, function () {\n      _this3.props.onExiting(node);\n\n      _this3.onTransitionEnd(node, timeouts.exit, function () {\n        _this3.safeSetState({\n          status: EXITED\n        }, function () {\n          _this3.props.onExited(node);\n        });\n      });\n    });\n  };\n\n  _proto.cancelNextCallback = function cancelNextCallback() {\n    if (this.nextCallback !== null) {\n      this.nextCallback.cancel();\n      this.nextCallback = null;\n    }\n  };\n\n  _proto.safeSetState = function safeSetState(nextState, callback) {\n    // This shouldn't be necessary, but there are weird race conditions with\n    // setState callbacks and unmounting in testing, so always make sure that\n    // we can cancel any pending setState callbacks after we unmount.\n    callback = this.setNextCallback(callback);\n    this.setState(nextState, callback);\n  };\n\n  _proto.setNextCallback = function setNextCallback(callback) {\n    var _this4 = this;\n\n    var active = true;\n\n    this.nextCallback = function (event) {\n      if (active) {\n        active = false;\n        _this4.nextCallback = null;\n        callback(event);\n      }\n    };\n\n    this.nextCallback.cancel = function () {\n      active = false;\n    };\n\n    return this.nextCallback;\n  };\n\n  _proto.onTransitionEnd = function onTransitionEnd(node, timeout, handler) {\n    this.setNextCallback(handler);\n\n    if (node) {\n      if (this.props.addEndListener) {\n        this.props.addEndListener(node, this.nextCallback);\n      }\n\n      if (timeout != null) {\n        setTimeout(this.nextCallback, timeout);\n      }\n    } else {\n      setTimeout(this.nextCallback, 0);\n    }\n  };\n\n  _proto.render = function render() {\n    var status = this.state.status;\n\n    if (status === UNMOUNTED) {\n      return null;\n    }\n\n    var _this$props = this.props,\n        children = _this$props.children,\n        childProps = _objectWithoutPropertiesLoose(_this$props, [\"children\"]); // filter props for Transtition\n\n\n    delete childProps.in;\n    delete childProps.mountOnEnter;\n    delete childProps.unmountOnExit;\n    delete childProps.appear;\n    delete childProps.enter;\n    delete childProps.exit;\n    delete childProps.timeout;\n    delete childProps.addEndListener;\n    delete childProps.onEnter;\n    delete childProps.onEntering;\n    delete childProps.onEntered;\n    delete childProps.onExit;\n    delete childProps.onExiting;\n    delete childProps.onExited;\n\n    if (typeof children === 'function') {\n      return children(status, childProps);\n    }\n\n    var child = _react.default.Children.only(children);\n\n    return _react.default.cloneElement(child, childProps);\n  };\n\n  return Transition;\n}(_react.default.Component);\n\nTransition.contextTypes = {\n  transitionGroup: PropTypes.object\n};\nTransition.childContextTypes = {\n  transitionGroup: function transitionGroup() {}\n};\nTransition.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /**\n   * A `function` child can be used instead of a React element.\n   * This function is called with the current transition status\n   * ('entering', 'entered', 'exiting', 'exited', 'unmounted'), which can be used\n   * to apply context specific props to a component.\n   *\n   * ```jsx\n   * <Transition timeout={150}>\n   *   {(status) => (\n   *     <MyComponent className={`fade fade-${status}`} />\n   *   )}\n   * </Transition>\n   * ```\n   */\n  children: PropTypes.oneOfType([PropTypes.func.isRequired, PropTypes.element.isRequired]).isRequired,\n\n  /**\n   * Show the component; triggers the enter or exit states\n   */\n  in: PropTypes.bool,\n\n  /**\n   * By default the child component is mounted immediately along with\n   * the parent `Transition` component. If you want to \"lazy mount\" the component on the\n   * first `in={true}` you can set `mountOnEnter`. After the first enter transition the component will stay\n   * mounted, even on \"exited\", unless you also specify `unmountOnExit`.\n   */\n  mountOnEnter: PropTypes.bool,\n\n  /**\n   * By default the child component stays mounted after it reaches the `'exited'` state.\n   * Set `unmountOnExit` if you'd prefer to unmount the component after it finishes exiting.\n   */\n  unmountOnExit: PropTypes.bool,\n\n  /**\n   * Normally a component is not transitioned if it is shown when the `<Transition>` component mounts.\n   * If you want to transition on the first mount set `appear` to `true`, and the\n   * component will transition in as soon as the `<Transition>` mounts.\n   *\n   * > Note: there are no specific \"appear\" states. `appear` only adds an additional `enter` transition.\n   */\n  appear: PropTypes.bool,\n\n  /**\n   * Enable or disable enter transitions.\n   */\n  enter: PropTypes.bool,\n\n  /**\n   * Enable or disable exit transitions.\n   */\n  exit: PropTypes.bool,\n\n  /**\n   * The duration of the transition, in milliseconds.\n   * Required unless `addEndListener` is provided\n   *\n   * You may specify a single timeout for all transitions like: `timeout={500}`,\n   * or individually like:\n   *\n   * ```jsx\n   * timeout={{\n   *  enter: 300,\n   *  exit: 500,\n   * }}\n   * ```\n   *\n   * @type {number | { enter?: number, exit?: number }}\n   */\n  timeout: function timeout(props) {\n    var pt = process.env.NODE_ENV !== \"production\" ? _PropTypes.timeoutsShape : {};\n    ;\n    if (!props.addEndListener) pt = pt.isRequired;\n\n    for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n      args[_key - 1] = arguments[_key];\n    }\n\n    return pt.apply(void 0, [props].concat(args));\n  },\n\n  /**\n   * Add a custom transition end trigger. Called with the transitioning\n   * DOM node and a `done` callback. Allows for more fine grained transition end\n   * logic. **Note:** Timeouts are still used as a fallback if provided.\n   *\n   * ```jsx\n   * addEndListener={(node, done) => {\n   *   // use the css transitionend event to mark the finish of a transition\n   *   node.addEventListener('transitionend', done, false);\n   * }}\n   * ```\n   */\n  addEndListener: PropTypes.func,\n\n  /**\n   * Callback fired before the \"entering\" status is applied. An extra parameter\n   * `isAppearing` is supplied to indicate if the enter stage is occurring on the initial mount\n   *\n   * @type Function(node: HtmlElement, isAppearing: bool) -> void\n   */\n  onEnter: PropTypes.func,\n\n  /**\n   * Callback fired after the \"entering\" status is applied. An extra parameter\n   * `isAppearing` is supplied to indicate if the enter stage is occurring on the initial mount\n   *\n   * @type Function(node: HtmlElement, isAppearing: bool)\n   */\n  onEntering: PropTypes.func,\n\n  /**\n   * Callback fired after the \"entered\" status is applied. An extra parameter\n   * `isAppearing` is supplied to indicate if the enter stage is occurring on the initial mount\n   *\n   * @type Function(node: HtmlElement, isAppearing: bool) -> void\n   */\n  onEntered: PropTypes.func,\n\n  /**\n   * Callback fired before the \"exiting\" status is applied.\n   *\n   * @type Function(node: HtmlElement) -> void\n   */\n  onExit: PropTypes.func,\n\n  /**\n   * Callback fired after the \"exiting\" status is applied.\n   *\n   * @type Function(node: HtmlElement) -> void\n   */\n  onExiting: PropTypes.func,\n\n  /**\n   * Callback fired after the \"exited\" status is applied.\n   *\n   * @type Function(node: HtmlElement) -> void\n   */\n  onExited: PropTypes.func // Name the function so it is clearer in the documentation\n\n} : {};\n\nfunction noop() {}\n\nTransition.defaultProps = {\n  in: false,\n  mountOnEnter: false,\n  unmountOnExit: false,\n  appear: false,\n  enter: true,\n  exit: true,\n  onEnter: noop,\n  onEntering: noop,\n  onEntered: noop,\n  onExit: noop,\n  onExiting: noop,\n  onExited: noop\n};\nTransition.UNMOUNTED = 0;\nTransition.EXITED = 1;\nTransition.ENTERING = 2;\nTransition.ENTERED = 3;\nTransition.EXITING = 4;\n\nvar _default = (0, _reactLifecyclesCompat.polyfill)(Transition);\n\nexports.default = _default;","\"use strict\";\n\nexports.__esModule = true;\nexports.transitionTimeout = transitionTimeout;\nexports.classNamesShape = exports.timeoutsShape = void 0;\n\nvar _propTypes = _interopRequireDefault(require(\"prop-types\"));\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction transitionTimeout(transitionType) {\n  var timeoutPropName = 'transition' + transitionType + 'Timeout';\n  var enabledPropName = 'transition' + transitionType;\n  return function (props) {\n    // If the transition is enabled\n    if (props[enabledPropName]) {\n      // If no timeout duration is provided\n      if (props[timeoutPropName] == null) {\n        return new Error(timeoutPropName + ' wasn\\'t supplied to CSSTransitionGroup: ' + 'this can cause unreliable animations and won\\'t be supported in ' + 'a future version of React. See ' + 'https://fb.me/react-animation-transition-group-timeout for more ' + 'information.'); // If the duration isn't a number\n      } else if (typeof props[timeoutPropName] !== 'number') {\n        return new Error(timeoutPropName + ' must be a number (in milliseconds)');\n      }\n    }\n\n    return null;\n  };\n}\n\nvar timeoutsShape = _propTypes.default.oneOfType([_propTypes.default.number, _propTypes.default.shape({\n  enter: _propTypes.default.number,\n  exit: _propTypes.default.number\n}).isRequired]);\n\nexports.timeoutsShape = timeoutsShape;\n\nvar classNamesShape = _propTypes.default.oneOfType([_propTypes.default.string, _propTypes.default.shape({\n  enter: _propTypes.default.string,\n  exit: _propTypes.default.string,\n  active: _propTypes.default.string\n}), _propTypes.default.shape({\n  enter: _propTypes.default.string,\n  enterDone: _propTypes.default.string,\n  enterActive: _propTypes.default.string,\n  exit: _propTypes.default.string,\n  exitDone: _propTypes.default.string,\n  exitActive: _propTypes.default.string\n})]);\n\nexports.classNamesShape = classNamesShape;","\"use strict\";\n\nexports.__esModule = true;\nexports.getChildMapping = getChildMapping;\nexports.mergeChildMappings = mergeChildMappings;\nexports.getInitialChildMapping = getInitialChildMapping;\nexports.getNextChildMapping = getNextChildMapping;\n\nvar _react = require(\"react\");\n/**\n * Given `this.props.children`, return an object mapping key to child.\n *\n * @param {*} children `this.props.children`\n * @return {object} Mapping of key to child\n */\n\n\nfunction getChildMapping(children, mapFn) {\n  var mapper = function mapper(child) {\n    return mapFn && (0, _react.isValidElement)(child) ? mapFn(child) : child;\n  };\n\n  var result = Object.create(null);\n  if (children) _react.Children.map(children, function (c) {\n    return c;\n  }).forEach(function (child) {\n    // run the map function here instead so that the key is the computed one\n    result[child.key] = mapper(child);\n  });\n  return result;\n}\n/**\n * When you're adding or removing children some may be added or removed in the\n * same render pass. We want to show *both* since we want to simultaneously\n * animate elements in and out. This function takes a previous set of keys\n * and a new set of keys and merges them with its best guess of the correct\n * ordering. In the future we may expose some of the utilities in\n * ReactMultiChild to make this easy, but for now React itself does not\n * directly have this concept of the union of prevChildren and nextChildren\n * so we implement it here.\n *\n * @param {object} prev prev children as returned from\n * `ReactTransitionChildMapping.getChildMapping()`.\n * @param {object} next next children as returned from\n * `ReactTransitionChildMapping.getChildMapping()`.\n * @return {object} a key set that contains all keys in `prev` and all keys\n * in `next` in a reasonable order.\n */\n\n\nfunction mergeChildMappings(prev, next) {\n  prev = prev || {};\n  next = next || {};\n\n  function getValueForKey(key) {\n    return key in next ? next[key] : prev[key];\n  } // For each key of `next`, the list of keys to insert before that key in\n  // the combined list\n\n\n  var nextKeysPending = Object.create(null);\n  var pendingKeys = [];\n\n  for (var prevKey in prev) {\n    if (prevKey in next) {\n      if (pendingKeys.length) {\n        nextKeysPending[prevKey] = pendingKeys;\n        pendingKeys = [];\n      }\n    } else {\n      pendingKeys.push(prevKey);\n    }\n  }\n\n  var i;\n  var childMapping = {};\n\n  for (var nextKey in next) {\n    if (nextKeysPending[nextKey]) {\n      for (i = 0; i < nextKeysPending[nextKey].length; i++) {\n        var pendingNextKey = nextKeysPending[nextKey][i];\n        childMapping[nextKeysPending[nextKey][i]] = getValueForKey(pendingNextKey);\n      }\n    }\n\n    childMapping[nextKey] = getValueForKey(nextKey);\n  } // Finally, add the keys which didn't appear before any key in `next`\n\n\n  for (i = 0; i < pendingKeys.length; i++) {\n    childMapping[pendingKeys[i]] = getValueForKey(pendingKeys[i]);\n  }\n\n  return childMapping;\n}\n\nfunction getProp(child, prop, props) {\n  return props[prop] != null ? props[prop] : child.props[prop];\n}\n\nfunction getInitialChildMapping(props, onExited) {\n  return getChildMapping(props.children, function (child) {\n    return (0, _react.cloneElement)(child, {\n      onExited: onExited.bind(null, child),\n      in: true,\n      appear: getProp(child, 'appear', props),\n      enter: getProp(child, 'enter', props),\n      exit: getProp(child, 'exit', props)\n    });\n  });\n}\n\nfunction getNextChildMapping(nextProps, prevChildMapping, onExited) {\n  var nextChildMapping = getChildMapping(nextProps.children);\n  var children = mergeChildMappings(prevChildMapping, nextChildMapping);\n  Object.keys(children).forEach(function (key) {\n    var child = children[key];\n    if (!(0, _react.isValidElement)(child)) return;\n    var hasPrev = key in prevChildMapping;\n    var hasNext = key in nextChildMapping;\n    var prevChild = prevChildMapping[key];\n    var isLeaving = (0, _react.isValidElement)(prevChild) && !prevChild.props.in; // item is new (entering)\n\n    if (hasNext && (!hasPrev || isLeaving)) {\n      // console.log('entering', key)\n      children[key] = (0, _react.cloneElement)(child, {\n        onExited: onExited.bind(null, child),\n        in: true,\n        exit: getProp(child, 'exit', nextProps),\n        enter: getProp(child, 'enter', nextProps)\n      });\n    } else if (!hasNext && hasPrev && !isLeaving) {\n      // item is old (exiting)\n      // console.log('leaving', key)\n      children[key] = (0, _react.cloneElement)(child, {\n        in: false\n      });\n    } else if (hasNext && hasPrev && (0, _react.isValidElement)(prevChild)) {\n      // item hasn't changed transition states\n      // copy over the last transition props;\n      // console.log('unchanged', key)\n      children[key] = (0, _react.cloneElement)(child, {\n        onExited: onExited.bind(null, child),\n        in: prevChild.props.in,\n        exit: getProp(child, 'exit', nextProps),\n        enter: getProp(child, 'enter', nextProps)\n      });\n    }\n  });\n  return children;\n}"],"sourceRoot":""}