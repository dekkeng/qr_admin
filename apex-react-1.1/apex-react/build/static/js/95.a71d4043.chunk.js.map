{"version":3,"sources":["../node_modules/chart.js/src/core/core.defaults.js","../node_modules/chart.js/src/core/core.element.js","../node_modules/react-chartjs-2/es/index.js","../node_modules/chart.js/src/core/core.js","../node_modules/chart.js/src/helpers/helpers.easing.js","../node_modules/chart.js/src/helpers/helpers.canvas.js","../node_modules/chart.js/src/helpers/helpers.options.js","../node_modules/chart.js/src/core/core.helpers.js","../node_modules/color-convert/index.js","../node_modules/color-convert/conversions.js","../node_modules/chartjs-color-string/color-string.js","../node_modules/chart.js/src/elements/element.arc.js","../node_modules/chart.js/src/elements/element.line.js","../node_modules/chart.js/src/elements/element.point.js","../node_modules/chart.js/src/elements/element.rectangle.js","../node_modules/chart.js/src/platforms/platform.basic.js","../node_modules/chart.js/src/platforms/platform.dom.js","../node_modules/chart.js/src/core/core.controller.js","../node_modules/chart.js/src/core/core.datasetController.js","../node_modules/chart.js/src/scales/scale.linearbase.js","../node_modules/chart.js/src/scales/scale.category.js","../node_modules/chart.js/src/scales/scale.linear.js","../node_modules/chart.js/src/scales/scale.logarithmic.js","../node_modules/chart.js/src/scales/scale.radialLinear.js","../node_modules/chart.js/src/scales/scale.time.js","../node_modules/chart.js/src/controllers/controller.bar.js","../node_modules/chart.js/src/controllers/controller.bubble.js","../node_modules/chart.js/src/controllers/controller.doughnut.js","../node_modules/chart.js/src/controllers/controller.line.js","../node_modules/chart.js/src/controllers/controller.polarArea.js","../node_modules/chart.js/src/controllers/controller.radar.js","../node_modules/chart.js/src/controllers/controller.scatter.js","../node_modules/chart.js/src/charts/Chart.Bar.js","../node_modules/chart.js/src/charts/Chart.Bubble.js","../node_modules/chart.js/src/charts/Chart.Doughnut.js","../node_modules/chart.js/src/charts/Chart.Line.js","../node_modules/chart.js/src/charts/Chart.PolarArea.js","../node_modules/chart.js/src/charts/Chart.Radar.js","../node_modules/chart.js/src/charts/Chart.Scatter.js","../node_modules/chart.js/src/plugins/index.js","../node_modules/chart.js/src/plugins/plugin.filler.js","../node_modules/chart.js/src/plugins/plugin.legend.js","../node_modules/chart.js/src/plugins/plugin.title.js","../node_modules/lodash/isEqual.js","../node_modules/lodash/find.js","../node_modules/lodash/_createFind.js","../node_modules/lodash/keyBy.js","../node_modules/lodash/_createAggregator.js","../node_modules/lodash/_arrayAggregator.js","../node_modules/lodash/_baseAggregator.js","../node_modules/process/browser.js","../node_modules/chart.js/src/core/core.scaleService.js","../node_modules/chart.js/src/elements/index.js","../node_modules/chart.js/src/core/core.layouts.js","../node_modules/chart.js/src/core/core.scale.js","../node_modules/chart.js/src/core/core.ticks.js","../node_modules/lodash/toInteger.js","../node_modules/lodash/toFinite.js","../node_modules/chart.js/src/helpers/helpers.core.js","../node_modules/lodash/toNumber.js","../node_modules/lodash/findIndex.js","../node_modules/lodash/_baseFindIndex.js","../node_modules/lodash/_baseEach.js","../node_modules/lodash/_createBaseEach.js","../node_modules/color-name/index.js","../node_modules/chart.js/src/chart.js","../node_modules/chartjs-color/index.js","../node_modules/chart.js/src/core/core.animation.js","../node_modules/chart.js/src/core/core.animations.js","../node_modules/chart.js/src/core/core.interaction.js","../node_modules/chart.js/src/platforms/platform.js","../node_modules/chart.js/src/core/core.plugins.js","../node_modules/chart.js/src/core/core.tooltip.js","../node_modules/chart.js/src/helpers/index.js"],"names":["helpers","__webpack_require__","module","exports","_set","scope","values","merge","this","color","Element","configuration","extend","initialize","apply","arguments","prototype","hidden","pivot","me","_view","clone","_model","_start","transition","ease","model","start","view","i","ilen","key","actual","origin","target","type","c0","c1","keys","Object","length","hasOwnProperty","valid","mix","rgbString","isFinite","interpolate","tooltipPosition","x","y","hasValue","isNumber","inherits","process","d","__webpack_exports__","Doughnut","Pie","Line","Bar","Radar","Polar","Scatter","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","prop_types__WEBPACK_IMPORTED_MODULE_1__","prop_types__WEBPACK_IMPORTED_MODULE_1___default","chart_js__WEBPACK_IMPORTED_MODULE_2__","chart_js__WEBPACK_IMPORTED_MODULE_2___default","lodash_isEqual__WEBPACK_IMPORTED_MODULE_3__","lodash_isEqual__WEBPACK_IMPORTED_MODULE_3___default","lodash_keyBy__WEBPACK_IMPORTED_MODULE_5__","lodash_keyBy__WEBPACK_IMPORTED_MODULE_5___default","_extends","assign","source","call","_objectWithoutProperties","obj","indexOf","_classCallCheck","instance","Constructor","TypeError","_possibleConstructorReturn","self","ReferenceError","_inherits","subClass","superClass","create","constructor","value","enumerable","writable","configurable","setPrototypeOf","__proto__","NODE_ENV","PUBLIC_URL","ChartComponent","_React$Component","_temp","_this","_len","args","Array","_key","concat","handleOnClick","event","chartInstance","_this$props","props","getDatasetAtEvent","getElementAtEvent","getElementsAtEvent","onElementsClick","ref","element","componentWillMount","undefined","componentDidMount","renderChart","componentDidUpdate","redraw","destroy","updateChart","shouldComponentUpdate","nextProps","_props","options","plugins","legend","height","width","nextData","transformDataProp","shadowDataProp","componentWillUnmount","data","memoizeDataProps","datasets","map","set","checkDatasets","isDev","usingCustomKeyProvider","datasetKeyProvider","getLabelAsKey","multipleDatasets","shouldWarn","forEach","dataset","label","console","error","_this2","a","configMerge","currentDatasets","config","nextDatasets","currentDatasetsIndexed","next","current","splice","point","pid","otherProps","rest","update","_props2","node","defaultProps","render","_props3","id","createElement","onClick","Component","propTypes","oneOfType","object","func","isRequired","number","arrayOf","bool","propName","componentName","controllers","Error","display","position","_React$Component2","_this4","_ref","_React$Component3","_this6","_ref2","_React$Component4","_this8","_ref3","_React$Component5","_this10","_ref4","_React$Component6","HorizontalBar","_this12","_ref5","_React$Component7","_this14","_ref6","_React$Component8","_this16","_ref7","_React$Component9","Bubble","_this18","_ref8","_React$Component10","_this20","_ref9","defaults","responsive","responsiveAnimationDuration","maintainAspectRatio","events","hover","onHover","mode","intersect","animationDuration","defaultColor","defaultFontColor","defaultFontFamily","defaultFontSize","defaultFontStyle","showLines","elements","layout","padding","top","right","bottom","left","Chart","item","construct","effects","linear","t","easeInQuad","easeOutQuad","easeInOutQuad","easeInCubic","easeOutCubic","easeInOutCubic","easeInQuart","easeOutQuart","easeInOutQuart","easeInQuint","easeOutQuint","easeInOutQuint","easeInSine","Math","cos","PI","easeOutSine","sin","easeInOutSine","easeInExpo","pow","easeOutExpo","easeInOutExpo","easeInCirc","sqrt","easeOutCirc","easeInOutCirc","easeInElastic","s","p","asin","easeOutElastic","easeInOutElastic","easeInBack","easeOutBack","easeInOutBack","easeInBounce","easeOutBounce","easeInOutBounce","easingEffects","clear","chart","ctx","clearRect","roundedRect","radius","r","min","moveTo","lineTo","arcTo","closePath","rect","drawPoint","style","rotation","edgeLength","xOffset","yOffset","size","toString","isNaN","save","translate","rotate","beginPath","arc","SQRT2","offset","leftX","topY","sideSize","fill","stroke","restore","drawImage","clipArea","area","clip","unclipArea","previous","flip","steppedLine","tension","bezierCurveTo","controlPointPreviousX","controlPointNextX","controlPointPreviousY","controlPointNextY","drawRoundedRectangle","toLineHeight","matches","match","toPadding","b","l","isObject","resolve","inputs","context","index","isArray","scaleService","parseMaxStyle","styleValue","parentProperty","valueInPixels","parseInt","parentNode","isConstrainedValue","getConstraintDimension","domNode","maxStyle","percentageProperty","document","defaultView","_getParentNode","constrainedNode","getComputedStyle","constrainedContainer","hasCNode","hasCContainer","infinity","Number","POSITIVE_INFINITY","slice","merger","tval","sval","scaleMerge","getScaleDefaults","_merger","scale","slen","valueOrDefault","push","where","collection","filterCallback","filter","filtered","each","findIndex","array","callback","findNextWhere","arrayToSearch","startIndex","isNullOrUndef","currentItem","findPreviousWhere","parseFloat","almostEquals","epsilon","abs","almostWhole","rounded","round","max","reduce","NEGATIVE_INFINITY","sign","log10","exponent","log","LOG10E","powerOf10","toRadians","degrees","toDegrees","radians","getAngleFromPoint","centrePoint","anglePoint","distanceFromXCenter","distanceFromYCenter","radialDistanceFromCenter","angle","atan2","distance","distanceBetweenPoints","pt1","pt2","aliasPixel","pixelWidth","splineCurve","firstPoint","middlePoint","afterPoint","skip","d01","d12","s01","s12","fa","fb","EPSILON","splineCurveMonotone","points","pointBefore","pointCurrent","pointAfter","alphaK","betaK","tauK","squaredMagnitude","deltaX","pointsWithTangents","deltaK","mK","pointsLen","slopeDeltaX","nextItem","loop","previousItem","niceNum","range","floor","fraction","requestAnimFrame","window","requestAnimationFrame","webkitRequestAnimationFrame","mozRequestAnimationFrame","oRequestAnimationFrame","msRequestAnimationFrame","setTimeout","getRelativePosition","evt","mouseX","mouseY","e","originalEvent","canvas","srcElement","boundingRect","getBoundingClientRect","touches","clientX","clientY","paddingLeft","getStyle","paddingTop","paddingRight","paddingBottom","currentDevicePixelRatio","getConstraintWidth","getConstraintHeight","_calculatePadding","container","parentDimension","parent","host","getMaximumWidth","clientWidth","w","cw","getMaximumHeight","clientHeight","h","ch","el","property","currentStyle","getPropertyValue","retinaScale","forceRatio","pixelRatio","devicePixelRatio","fontString","pixelSize","fontStyle","fontFamily","longestText","font","arrayOfThings","cache","gc","garbageCollect","longest","thing","measureText","nestedThing","gcLen","string","textWidth","numberOfLabelLines","numberOfLines","CanvasGradient","global","getHoverColor","colorValue","CanvasPattern","saturate","darken","conversions","convert","Converter","arg","pair","exec","from","to","val","convs","routeSpace","space","getValues","setValues","vals","fspace","rgb2hsl","rgb","g","delta","rgb2hsv","rgb2hwb","rgb2cmyk","k","rgb2keyword","reverseKeywords","JSON","stringify","rgb2xyz","rgb2lab","xyz","z","hsl2rgb","hsl","t1","t2","t3","hsv2rgb","hsv","v","hi","f","q","hwb2rgb","hwb","wh","bl","ratio","cmyk2rgb","cmyk","c","m","xyz2rgb","xyz2lab","lab2xyz","lab","y2","lab2lch","lab2rgb","lch2lab","lch","hr","keyword2rgb","keyword","cssKeywords","rgb2lch","hsl2hsv","hsl2hwb","hsl2cmyk","hsl2keyword","hsv2hsl","sl","hsv2hwb","hsv2cmyk","hsv2keyword","hwb2hsl","hwb2hsv","hwb2cmyk","hwb2keyword","cmyk2hsl","cmyk2hsv","cmyk2hwb","cmyk2keyword","keyword2hsl","keyword2hsv","keyword2hwb","keyword2cmyk","keyword2lab","keyword2xyz","xyz2lch","lch2xyz","lch2rgb","aliceblue","antiquewhite","aqua","aquamarine","azure","beige","bisque","black","blanchedalmond","blue","blueviolet","brown","burlywood","cadetblue","chartreuse","chocolate","coral","cornflowerblue","cornsilk","crimson","cyan","darkblue","darkcyan","darkgoldenrod","darkgray","darkgreen","darkgrey","darkkhaki","darkmagenta","darkolivegreen","darkorange","darkorchid","darkred","darksalmon","darkseagreen","darkslateblue","darkslategray","darkslategrey","darkturquoise","darkviolet","deeppink","deepskyblue","dimgray","dimgrey","dodgerblue","firebrick","floralwhite","forestgreen","fuchsia","gainsboro","ghostwhite","gold","goldenrod","gray","green","greenyellow","grey","honeydew","hotpink","indianred","indigo","ivory","khaki","lavender","lavenderblush","lawngreen","lemonchiffon","lightblue","lightcoral","lightcyan","lightgoldenrodyellow","lightgray","lightgreen","lightgrey","lightpink","lightsalmon","lightseagreen","lightskyblue","lightslategray","lightslategrey","lightsteelblue","lightyellow","lime","limegreen","linen","magenta","maroon","mediumaquamarine","mediumblue","mediumorchid","mediumpurple","mediumseagreen","mediumslateblue","mediumspringgreen","mediumturquoise","mediumvioletred","midnightblue","mintcream","mistyrose","moccasin","navajowhite","navy","oldlace","olive","olivedrab","orange","orangered","orchid","palegoldenrod","palegreen","paleturquoise","palevioletred","papayawhip","peachpuff","peru","pink","plum","powderblue","purple","rebeccapurple","red","rosybrown","royalblue","saddlebrown","salmon","sandybrown","seagreen","seashell","sienna","silver","skyblue","slateblue","slategray","slategrey","snow","springgreen","steelblue","tan","teal","thistle","tomato","turquoise","violet","wheat","white","whitesmoke","yellow","yellowgreen","colorNames","getRgba","getHsla","alpha","getHwb","rgbaString","rgba","percentaString","hslaString","hsla","num","hexDouble","str","toUpperCase","getRgb","getHsl","getAlpha","hexString","percentString","hslString","hwbString","reverseNames","name","backgroundColor","borderColor","borderWidth","inLabelRange","vm","hoverRadius","inRange","chartX","chartY","pointRelativePosition","startAngle","endAngle","betweenAngles","withinRadius","innerRadius","outerRadius","getCenterPoint","halfAngle","halfRadius","getArea","centreAngle","rangeFromCentre","draw","_chart","sA","eA","strokeStyle","lineWidth","fillStyle","lineJoin","globalDefaults","line","borderCapStyle","borderDash","borderDashOffset","borderJoinStyle","capBezierPoints","currentVM","spanGaps","_children","globalOptionLineElements","lastDrawnIndex","_loop","lineCap","setLineDash","lineDashOffset","xRange","hitRadius","pointStyle","hoverBorderWidth","inXRange","inYRange","chartArea","isVertical","bar","getBarBounds","x1","x2","y1","halfWidth","base","halfHeight","rectangle","borderSkipped","signX","signY","horizontal","barSize","halfStroke","borderLeft","borderRight","borderTop","borderBottom","corners","startCorner","cornerAt","corner","bounds","acquireContext","getContext","EXPANDO_KEY","CSS_PREFIX","CSS_RENDER_MONITOR","CSS_RENDER_ANIMATION","ANIMATION_START_EVENTS","EVENT_TYPES","touchstart","touchmove","touchend","pointerenter","pointerdown","pointermove","pointerup","pointerleave","pointerout","readUsedSize","eventListenerOptions","supports","defineProperty","get","addEventListener","passive","_addEventListener","listener","_removeEventListener","removeEventListener","createEvent","nativeEvent","native","addResizeListener","expando","resizer","handler","cls","cssText","className","innerHTML","expand","childNodes","shrink","_reset","scrollLeft","scrollTop","onScroll","bind","createResizer","fn","thisArg","ticking","throttled","proxy","renderProxy","animationName","reflow","offsetParent","classList","add","watchForRender","insertBefore","firstChild","removeResizeListener","remove","unwatchForRender","removeChild","_enabled","keyframes","platform","css","_style","setAttribute","getElementsByTagName","appendChild","createTextNode","injectCSS","getElementById","renderHeight","getAttribute","renderWidth","initial","displayWidth","aspectRatio","displayHeight","initCanvas","releaseContext","prop","removeAttribute","proxies","pos","fromNativeEvent","addEvent","removeEvent","Animation","animations","Interaction","layouts","Tooltip","positionIsHorizontal","types","instances","labels","initConfig","uid","_bufferedRender","controller","notify","bindEvents","resize","ensureScalesHaveIDs","buildOrUpdateScales","initToolTip","stop","cancelAnimation","silent","newWidth","newHeight","newSize","onResize","duration","scalesOptions","scales","scaleOptions","xAxes","xAxisOptions","yAxes","yAxisOptions","items","updated","dtype","dposition","isDefault","scaleType","scaleClass","getScaleConstructor","mergeTicksOptions","hasUpdated","addScalesToLayout","buildOrUpdateControllers","newControllers","datasetIndex","meta","getDatasetMeta","destroyDatasetMeta","updateIndex","linkScales","ControllerClass","resetElements","reset","tooltip","lazy","newOptions","removeBox","_options","tooltips","updateConfig","_invalidate","_data","buildOrUpdateElements","updateLayout","animation","updateDatasets","lastActive","_bufferedRequest","easing","updateDataset","animationOptions","onComplete","numSteps","animationObject","easingFunction","currentStep","stepDecimal","onAnimationProgress","onProgress","onAnimationComplete","addAnimation","easingValue","boxes","box","drawDatasets","_drawTooltip","isDatasetVisible","drawDataset","modes","single","getElementsAtXAxis","getElementsAtEventForMode","method","_meta","xAxisID","yAxisID","getVisibleDatasetCount","count","generateLegend","legendCallback","unbindEvents","toBase64Image","toDataURL","_chartInstance","listeners","_listeners","eventHandler","updateHoverStyle","enabled","_datasetIndex","changed","handleEvent","bufferedRequest","animating","hoverOptions","active","arrayEquals","Controller","arrayEvents","unlistenArrayEvents","stub","_chartjs","DatasetController","datasetElementType","dataElementType","addElements","getMeta","getDataset","getScaleForId","scaleID","createMetaDataset","createMetaData","_index","metaData","addElementAndReset","updateElement","charAt","res","resyncElements","noop","removeHoverStyle","$previousStyle","setHoverStyle","custom","valueAtIndexOrDefault","hoverBackgroundColor","hoverBorderColor","numMeta","numData","insertElements","onDataPush","onDataPop","pop","onDataShift","shift","onDataSplice","onDataUnshift","Scale","LinearScaleBase","getRightValue","handleTickRangeOptions","tickOpts","ticks","beginAtZero","minSign","maxSign","setMin","suggestedMin","setMax","suggestedMax","getTickLimit","handleDirectionalChanges","buildTicks","maxTicks","numericGeneratorOptions","precision","stepSize","fixedStepSize","generationOptions","dataRange","factor","spacing","niceRange","ceil","niceMin","niceMax","numSpaces","j","generateTicks","reverse","end","convertTicksToLabels","ticksAsNumbers","zeroLineIndex","DatasetScale","getLabels","isHorizontal","xLabels","yLabels","determineDataLimits","minIndex","maxIndex","getLabelForIndex","getPixelForValue","valueCategory","offsetAmt","idx","valueWidth","widthOffset","valueHeight","heightOffset","getPixelForTick","getValueForPixel","pixel","_ticks","horz","valueDimension","getBasePixel","registerScaleType","Ticks","defaultConfig","formatters","LinearScale","opts","IDMatches","hasStacks","stacked","stack","valuesPerStack","join","positiveValues","negativeValues","rawValue","relativePoints","valuesForType","minVal","maxVal","maxTicksLimit","tickFontSize","fontSize","rightValue","innerDimension","logarithmic","LogarithmicScale","minNotZero","exp","significand","tickVal","endExp","endSignificand","lastTick","tickValues","_getFirstTickValue","firstTickValue","getValueOrDefault","animate","angleLines","gridLines","circular","showLabelBackdrop","backdropColor","backdropPaddingY","backdropPaddingX","pointLabels","getValueCount","getPointLabelFontOptions","pointLabelOptions","family","determineLimits","getTextAlignForAngle","fillText","text","adjustPointPositionForLabelHeight","textSize","numberOrZero","param","LinearRadialScale","setDimensions","maxWidth","maxHeight","xCenter","yCenter","minSize","drawingArea","fit","pointPosition","plFont","largestPossibleRadius","furthestLimits","furthestAngles","_pointLabelSizes","valueCount","getPointPosition","angleRadians","getIndexAngle","hLimits","vLimits","setReductions","fitWithPointLabels","setCenterPoint","_fit","radiusReductionLeft","radiusReductionRight","radiusReductionTop","radiusReductionBottom","leftMovement","rightMovement","topMovement","bottomMovement","maxRight","maxLeft","maxTop","maxBottom","getDistanceFromCenterForValue","scalingFactor","distanceFromCenter","thisAngle","getPointPositionForValue","getBasePosition","gridLineOpts","tickFontStyle","tickFontFamily","tickLabelFont","yCenterOffset","drawRadiusLine","tickFontColor","fontColor","labelWidth","fillRect","textAlign","textBaseline","angleLineOpts","pointLabelOpts","outerDistance","outerPosition","pointLabelPosition","pointLabelFontColor","drawPointLabels","moment","MIN_INTEGER","MIN_SAFE_INTEGER","MAX_INTEGER","MAX_SAFE_INTEGER","INTERVALS","millisecond","common","steps","second","minute","hour","day","week","month","quarter","year","UNITS","sorter","arrayUnique","hash","out","table","skey","tkey","mid","i0","i1","lo","lookup","prev","span","momentify","parser","format","isValid","parse","input","time","startOf","valueOf","determineMajorUnit","unit","generate","capacity","timeOpts","minor","minUnit","interval","determineUnitForAutoTicks","major","unitStepSize","weekday","isoWeekday","majorTicksEnabled","first","last","milliseconds","determineStepSize","TimeScale","warn","jlen","timestamp","timestamps","sort","endOf","_horizontal","_table","_timestamps","getLabelCapacity","_unit","diff","as","determineUnitForFormatting","_majorUnit","distribution","curr","buildLookupTable","_offsets","upper","lower","computeOffsets","_labelFormat","momentDate","hasTime","determineLabelFormat","majorUnit","ticksFromTimestamps","tooltipFormat","tickFormatFunction","tick","formatOverride","formats","displayFormats","minorFormat","majorFormat","majorTime","majorTickOpts","formatter","userCallback","getPixelForOffset","getTicks","getLabelWidth","ticksOpts","tickLabelWidth","maxRotation","cosRotation","sinRotation","exampleTime","exampleLabel","innerWidth","displayFormat","autoSkip","categoryPercentage","barPercentage","offsetGridLines","axis","callbacks","title","yLabel","xLabel","Rectangle","rects","_ruler","getRuler","rectangleOptions","_xScale","_yScale","datasetLabel","updateElementGeometry","vscale","getValueScale","ruler","vpixels","calculateBarValuePixels","ipixels","calculateBarIndexPixels","head","center","getValueScaleId","getIndexScaleId","getIndexScale","_getStacks","stacks","getStackCount","getStackIndex","stackCount","pixels","barThickness","computeMinSampleSize","imeta","ivalue","percent","chunk","computeFlexCategoryTraits","thickness","computeFitCategoryTraits","stackIndex","maxBarThickness","Infinity","horizontalBar","dataPoint","bubble","Point","xScale","yScale","_resolveElementOptions","dsIndex","getPixelForDecimal","NaN","dataIndex","animateRotate","animateScale","generateLabels","ds","arcOpts","legendItem","cutoutPercentage","circumference","tooltipItem","dataLabel","doughnut","pie","Arc","getRingIndex","ringIndex","availableWidth","availableHeight","contains0","contains90","contains180","contains270","cutout","getMaxBorderWidth","radiusLength","offsetX","offsetY","total","calculateTotal","animationOpts","centerX","centerY","calculateCircumference","elementOpts","arcs","hoverWidth","lineEnabled","showLine","lineElementOptions","lineTension","_scale","stepped","cubicInterpolationMode","updateBezierControlPoints","getPointBackgroundColor","pointBackgroundColor","getPointBorderColor","pointBorderColor","getPointBorderWidth","pointBorderWidth","getPointRotation","pointRotation","pointOptions","pointRadius","pointHitRadius","calculatePointY","dsMeta","sumPos","sumNeg","stackedRightValue","controlPoints","capControlPoint","pt","halfBorderWidth","pointHoverBackgroundColor","pointHoverBorderColor","pointHoverBorderWidth","pointHoverRadius","polarArea","starts","_starts","angles","_angles","_updateRadius","countVisibleElements","_computeAngle","datasetStartAngle","resetRadius","radar","pointElementOptions","scatter","PolarArea","filler","propagate","mappers","boundary","decodeFill","computeBoundary","scaleBottom","scaleTop","scaleZero","resolveTarget","sources","visited","visible","createMapper","isDrawable","drawArea","curve0","curve1","len0","len1","afterDatasetsUpdate","$filler","mapper","beforeDatasetDraw","p0","p1","d0","d1","doFill","getBoxWidth","labelOpts","usePointStyle","boxWidth","fullWidth","weight","ci","lineDash","Legend","legendHitBoxes","doughnutMode","beforeUpdate","margins","beforeSetDimensions","afterSetDimensions","beforeBuildLabels","buildLabels","afterBuildLabels","beforeFit","afterFit","afterUpdate","legendItems","globalDefault","labelFont","hitboxes","lineWidths","totalHeight","vPadding","columnWidths","totalWidth","currentColWidth","currentColHeight","itemHeight","itemWidth","lineDefault","legendWidth","cursor","isLineWidthZero","offSet","strokeRect","drawLegendBox","halfFontSize","xLeft","yMiddle","lh","hitBox","createNewLegendAndAttach","legendOpts","configure","addBox","_element","beforeInit","mergeIf","afterEvent","lineHeight","Title","lineCount","titleX","titleY","titleFont","createNewTitleBlockAndAttach","titleOpts","titleBlock","baseIsEqual","other","find","createFind","baseIteratee","isArrayLike","findIndexFunc","predicate","fromIndex","iterable","iteratee","baseAssignValue","keyBy","createAggregator","result","arrayAggregator","baseAggregator","setter","initializer","accumulator","baseEach","cachedSetTimeout","cachedClearTimeout","defaultSetTimout","defaultClearTimeout","runTimeout","fun","clearTimeout","currentQueue","queue","draining","queueIndex","cleanUpNextTick","drainQueue","timeout","len","run","marker","runClearTimeout","Item","nextTick","browser","env","argv","version","versions","on","addListener","once","off","removeListener","removeAllListeners","emit","prependListener","prependOnceListener","binding","cwd","chdir","dir","umask","constructors","scaleConstructor","scaleDefaults","updateScaleDefaults","additions","filterByPosition","sortByWeight","_tmpIndex_","v0","v1","layoutItem","layoutOptions","leftPadding","rightPadding","topPadding","bottomPadding","leftBoxes","rightBoxes","topBoxes","bottomBoxes","chartAreaBoxes","chartWidth","chartHeight","chartAreaHeight","verticalBoxWidth","horizontalBoxHeight","maxChartAreaWidth","maxChartAreaHeight","minBoxSizes","maxHorizontalLeftPadding","maxHorizontalRightPadding","maxVerticalTopPadding","maxVerticalBottomPadding","horizontalBox","getPadding","boxPadding","verticalBox","totalLeftBoxesWidth","totalRightBoxesWidth","totalTopBoxesHeight","totalBottomBoxesHeight","fitBox","minBoxSize","scaleMargin","leftPaddingAddition","topPaddingAddition","newMaxChartAreaHeight","newMaxChartAreaWidth","placeBox","minBox","labelsFromTicks","getLineValue","lineValue","computeTextSize","parseFontOptions","parseLineHeight","drawBorder","drawOnChartArea","drawTicks","tickMarkLength","zeroLineWidth","zeroLineColor","zeroLineBorderDash","zeroLineBorderDashOffset","scaleLabel","labelString","minRotation","mirror","autoSkipPadding","labelOffset","longestTextCache","beforeDataLimits","afterDataLimits","beforeBuildTicks","afterBuildTicks","beforeTickToLabelConversion","afterTickToLabelConversion","beforeCalculateTickRotation","calculateTickRotation","afterCalculateTickRotation","tickFont","labelRotation","originalLabelWidth","tickWidth","scaleLabelOpts","isFullWidth","deltaHeight","largestTextWidth","tallestLabelHeightInLines","lineSpace","tickPadding","longestLabelWidth","labelHeight","firstLabelWidth","lastLabelWidth","handleMargins","finalVal","innerHeight","decimal","valueOffset","getBaseValue","_autoSkip","skipRatio","optionTicks","tickCount","labelRotationRadians","longestRotatedLabel","optionMajorTicks","isRotated","majorTickFontColor","majorTickFont","tl","scaleLabelFontColor","scaleLabelFont","scaleLabelPadding","itemsToDraw","axisWidth","xTickStart","xTickEnd","yTickStart","yTickEnd","lineColor","tx1","ty1","tx2","ty2","labelX","labelY","labelYOffset","xLineValue","labelXOffset","isLeft","yLineValue","glWidth","glColor","glBorderDash","glBorderDashOffset","itemToDraw","scaleLabelX","scaleLabelY","halfLineHeight","tickValue","logDelta","tickString","logTick","toExponential","numDecimal","toFixed","remain","toFinite","remainder","toNumber","INFINITY","defaultValue","loopable","a0","a1","klen","_mergerIf","setFn","extensions","ChartElement","Surrogate","__super__","callCallback","getValueAtIndexOrDefault","isSymbol","NAN","reTrim","reIsBadHex","reIsBinary","reIsOctal","freeParseInt","replace","isBinary","test","baseFindIndex","toInteger","nativeMax","fromRight","baseForOwn","createBaseEach","eachFunc","animationService","register","pluginService","PluginBase","canvasHelpers","layoutService","Color","lightness","whiteness","setSpace","rgbArray","hslArray","hsvArray","hwbArray","cmykArray","rgbaArray","hslaArray","setChannel","hue","saturation","saturationv","blackness","rgbNumber","luminosity","lum","chan","contrast","color2","lum1","lum2","level","contrastRatio","dark","light","negate","lighten","desaturate","whiten","blacken","greyscale","clearer","opaquer","mixinColor","w1","w2","toJSON","spaces","maxes","capped","chans","sname","svalues","frameDuration","dropFrames","request","startDigest","startTime","Date","now","framesToDrop","advance","endTime","parseVisibleItems","getIntersectItems","getNearestItems","distanceMetric","minDistance","nearestItems","getDistanceMetricForAxis","useX","useY","deltaY","indexMode","x-axis","nearest","ret","intersectsItem","basic","dom","implementation","_plugins","_cacheId","plugin","unregister","getAll","hook","descriptor","params","descriptors","$plugins","titleFontStyle","titleSpacing","titleMarginBottom","titleFontColor","titleAlign","bodySpacing","bodyFontColor","bodyAlign","footerFontStyle","footerSpacing","footerMarginTop","footerFontColor","footerAlign","yPadding","xPadding","caretPadding","caretSize","cornerRadius","multiKeyBackground","displayColors","beforeTitle","tooltipItems","labelCount","afterTitle","beforeBody","beforeLabel","labelColor","labelTextColor","afterLabel","afterBody","beforeFooter","footer","afterFooter","positioners","average","eventPosition","nearestElement","tp","mergeOpacity","colorString","opacity","pushOrConcat","toPush","splitNewlines","String","split","createTooltipItem","getBaseModel","tooltipOpts","xAlign","yAlign","_bodyFontFamily","bodyFontFamily","_bodyFontStyle","bodyFontStyle","_bodyAlign","bodyFontSize","_titleFontFamily","titleFontFamily","_titleFontStyle","titleFontSize","_titleAlign","_footerFontFamily","footerFontFamily","_footerFontStyle","footerFontSize","_footerAlign","legendColorBackground","getBeforeAfterBodyLines","_lastActive","getTitle","lines","getBeforeBody","getBody","bodyItems","bodyItem","before","after","getAfterBody","getFooter","existingModel","_active","alignment","backgroundPoint","tooltipSize","caretX","caretY","labelColors","labelTextColors","_eventPosition","itemSort","body","dataPoints","combinedBodyLength","titleLineCount","footerLineCount","widthPadding","maxLineWidth","getTooltipSize","paddingAndSize","radiusAndPadding","getBackgroundPoint","lf","rf","olf","orf","yf","midX","midY","determineAlignment","drawCaret","tooltipPoint","caretPosition","getCaretPosition","x3","y3","ptX","ptY","tmp","drawTitle","drawBody","xLinePadding","fillLineOfText","drawColorBoxes","textColor","drawFooter","drawBackground","quadraticCurveTo","hasTooltipContent"],"mappings":"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","file":"static/js/95.a71d4043.chunk.js","sourcesContent":["'use strict';\n\nvar helpers = require('../helpers/index');\n\nmodule.exports = {\n  /**\n   * @private\n   */\n  _set: function _set(scope, values) {\n    return helpers.merge(this[scope] || (this[scope] = {}), values);\n  }\n};","'use strict';\n\nvar color = require('chartjs-color');\n\nvar helpers = require('../helpers/index');\n\nfunction interpolate(start, view, model, ease) {\n  var keys = Object.keys(model);\n  var i, ilen, key, actual, origin, target, type, c0, c1;\n\n  for (i = 0, ilen = keys.length; i < ilen; ++i) {\n    key = keys[i];\n    target = model[key]; // if a value is added to the model after pivot() has been called, the view\n    // doesn't contain it, so let's initialize the view to the target value.\n\n    if (!view.hasOwnProperty(key)) {\n      view[key] = target;\n    }\n\n    actual = view[key];\n\n    if (actual === target || key[0] === '_') {\n      continue;\n    }\n\n    if (!start.hasOwnProperty(key)) {\n      start[key] = actual;\n    }\n\n    origin = start[key];\n    type = typeof target;\n\n    if (type === typeof origin) {\n      if (type === 'string') {\n        c0 = color(origin);\n\n        if (c0.valid) {\n          c1 = color(target);\n\n          if (c1.valid) {\n            view[key] = c1.mix(c0, ease).rgbString();\n            continue;\n          }\n        }\n      } else if (type === 'number' && isFinite(origin) && isFinite(target)) {\n        view[key] = origin + (target - origin) * ease;\n        continue;\n      }\n    }\n\n    view[key] = target;\n  }\n}\n\nvar Element = function Element(configuration) {\n  helpers.extend(this, configuration);\n  this.initialize.apply(this, arguments);\n};\n\nhelpers.extend(Element.prototype, {\n  initialize: function initialize() {\n    this.hidden = false;\n  },\n  pivot: function pivot() {\n    var me = this;\n\n    if (!me._view) {\n      me._view = helpers.clone(me._model);\n    }\n\n    me._start = {};\n    return me;\n  },\n  transition: function transition(ease) {\n    var me = this;\n    var model = me._model;\n    var start = me._start;\n    var view = me._view; // No animation -> No Transition\n\n    if (!model || ease === 1) {\n      me._view = model;\n      me._start = null;\n      return me;\n    }\n\n    if (!view) {\n      view = me._view = {};\n    }\n\n    if (!start) {\n      start = me._start = {};\n    }\n\n    interpolate(start, view, model, ease);\n    return me;\n  },\n  tooltipPosition: function tooltipPosition() {\n    return {\n      x: this._model.x,\n      y: this._model.y\n    };\n  },\n  hasValue: function hasValue() {\n    return helpers.isNumber(this._model.x) && helpers.isNumber(this._model.y);\n  }\n});\nElement.extend = helpers.inherits;\nmodule.exports = Element;","var _extends = Object.assign || function (target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i];\n\n    for (var key in source) {\n      if (Object.prototype.hasOwnProperty.call(source, key)) {\n        target[key] = source[key];\n      }\n    }\n  }\n\n  return target;\n};\n\nfunction _objectWithoutProperties(obj, keys) {\n  var target = {};\n\n  for (var i in obj) {\n    if (keys.indexOf(i) >= 0) continue;\n    if (!Object.prototype.hasOwnProperty.call(obj, i)) continue;\n    target[i] = obj[i];\n  }\n\n  return target;\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (!self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport Chart from 'chart.js';\nimport isEqual from 'lodash/isEqual';\nimport find from 'lodash/find';\nimport keyBy from 'lodash/keyBy';\nvar NODE_ENV = typeof process !== 'undefined' && process.env && process.env.NODE_ENV;\n\nvar ChartComponent = function (_React$Component) {\n  _inherits(ChartComponent, _React$Component);\n\n  function ChartComponent() {\n    var _temp, _this, _ret;\n\n    _classCallCheck(this, ChartComponent);\n\n    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    return _ret = (_temp = (_this = _possibleConstructorReturn(this, _React$Component.call.apply(_React$Component, [this].concat(args))), _this), _this.handleOnClick = function (event) {\n      var instance = _this.chartInstance;\n      var _this$props = _this.props,\n          getDatasetAtEvent = _this$props.getDatasetAtEvent,\n          getElementAtEvent = _this$props.getElementAtEvent,\n          getElementsAtEvent = _this$props.getElementsAtEvent,\n          onElementsClick = _this$props.onElementsClick;\n      getDatasetAtEvent && getDatasetAtEvent(instance.getDatasetAtEvent(event), event);\n      getElementAtEvent && getElementAtEvent(instance.getElementAtEvent(event), event);\n      getElementsAtEvent && getElementsAtEvent(instance.getElementsAtEvent(event), event);\n      onElementsClick && onElementsClick(instance.getElementsAtEvent(event), event); // Backward compatibility\n    }, _this.ref = function (element) {\n      _this.element = element;\n    }, _temp), _possibleConstructorReturn(_this, _ret);\n  }\n\n  ChartComponent.prototype.componentWillMount = function componentWillMount() {\n    this.chartInstance = undefined;\n  };\n\n  ChartComponent.prototype.componentDidMount = function componentDidMount() {\n    this.renderChart();\n  };\n\n  ChartComponent.prototype.componentDidUpdate = function componentDidUpdate() {\n    if (this.props.redraw) {\n      this.chartInstance.destroy();\n      this.renderChart();\n      return;\n    }\n\n    this.updateChart();\n  };\n\n  ChartComponent.prototype.shouldComponentUpdate = function shouldComponentUpdate(nextProps) {\n    var _props = this.props,\n        redraw = _props.redraw,\n        type = _props.type,\n        options = _props.options,\n        plugins = _props.plugins,\n        legend = _props.legend,\n        height = _props.height,\n        width = _props.width;\n\n    if (nextProps.redraw === true) {\n      return true;\n    }\n\n    if (height !== nextProps.height || width !== nextProps.width) {\n      return true;\n    }\n\n    if (type !== nextProps.type) {\n      return true;\n    }\n\n    if (!isEqual(legend, nextProps.legend)) {\n      return true;\n    }\n\n    if (!isEqual(options, nextProps.options)) {\n      return true;\n    }\n\n    var nextData = this.transformDataProp(nextProps);\n\n    if (!isEqual(this.shadowDataProp, nextData)) {\n      return true;\n    }\n\n    return !isEqual(plugins, nextProps.plugins);\n  };\n\n  ChartComponent.prototype.componentWillUnmount = function componentWillUnmount() {\n    this.chartInstance.destroy();\n  };\n\n  ChartComponent.prototype.transformDataProp = function transformDataProp(props) {\n    var data = props.data;\n\n    if (typeof data == 'function') {\n      var node = this.element;\n      return data(node);\n    } else {\n      return data;\n    }\n  }; // Chart.js directly mutates the data.dataset objects by adding _meta proprerty\n  // this makes impossible to compare the current and next data changes\n  // therefore we memoize the data prop while sending a fake to Chart.js for mutation.\n  // see https://github.com/chartjs/Chart.js/blob/master/src/core/core.controller.js#L615-L617\n\n\n  ChartComponent.prototype.memoizeDataProps = function memoizeDataProps() {\n    if (!this.props.data) {\n      return;\n    }\n\n    var data = this.transformDataProp(this.props);\n    this.shadowDataProp = _extends({}, data, {\n      datasets: data.datasets && data.datasets.map(function (set) {\n        return _extends({}, set);\n      })\n    });\n    return data;\n  };\n\n  ChartComponent.prototype.checkDatasets = function checkDatasets(datasets) {\n    var isDev = NODE_ENV !== 'production' && NODE_ENV !== 'prod';\n    var usingCustomKeyProvider = this.props.datasetKeyProvider !== ChartComponent.getLabelAsKey;\n    var multipleDatasets = datasets.length > 1;\n\n    if (isDev && multipleDatasets && !usingCustomKeyProvider) {\n      var shouldWarn = false;\n      datasets.forEach(function (dataset) {\n        if (!dataset.label) {\n          shouldWarn = true;\n        }\n      });\n\n      if (shouldWarn) {\n        console.error('[react-chartjs-2] Warning: Each dataset needs a unique key. By default, the \"label\" property on each dataset is used. Alternatively, you may provide a \"datasetKeyProvider\" as a prop that returns a unique key.');\n      }\n    }\n  };\n\n  ChartComponent.prototype.updateChart = function updateChart() {\n    var _this2 = this;\n\n    var options = this.props.options;\n    var data = this.memoizeDataProps(this.props);\n    if (!this.chartInstance) return;\n\n    if (options) {\n      this.chartInstance.options = Chart.helpers.configMerge(this.chartInstance.options, options);\n    } // Pipe datasets to chart instance datasets enabling\n    // seamless transitions\n\n\n    var currentDatasets = this.chartInstance.config.data && this.chartInstance.config.data.datasets || [];\n    var nextDatasets = data.datasets || [];\n    this.checkDatasets(currentDatasets);\n    var currentDatasetsIndexed = keyBy(currentDatasets, this.props.datasetKeyProvider); // We can safely replace the dataset array, as long as we retain the _meta property\n    // on each dataset.\n\n    this.chartInstance.config.data.datasets = nextDatasets.map(function (next) {\n      var current = currentDatasetsIndexed[_this2.props.datasetKeyProvider(next)];\n\n      if (current && current.type === next.type) {\n        // The data array must be edited in place. As chart.js adds listeners to it.\n        current.data.splice(next.data.length);\n        next.data.forEach(function (point, pid) {\n          current.data[pid] = next.data[pid];\n        });\n\n        var _data = next.data,\n            otherProps = _objectWithoutProperties(next, ['data']); // Merge properties. Notice a weakness here. If a property is removed\n        // from next, it will be retained by current and never disappears.\n        // Workaround is to set value to null or undefined in next.\n\n\n        return _extends({}, current, otherProps);\n      } else {\n        return next;\n      }\n    });\n\n    var datasets = data.datasets,\n        rest = _objectWithoutProperties(data, ['datasets']);\n\n    this.chartInstance.config.data = _extends({}, this.chartInstance.config.data, rest);\n    this.chartInstance.update();\n  };\n\n  ChartComponent.prototype.renderChart = function renderChart() {\n    var _props2 = this.props,\n        options = _props2.options,\n        legend = _props2.legend,\n        type = _props2.type,\n        redraw = _props2.redraw,\n        plugins = _props2.plugins;\n    var node = this.element;\n    var data = this.memoizeDataProps();\n\n    if (typeof legend !== 'undefined' && !isEqual(ChartComponent.defaultProps.legend, legend)) {\n      options.legend = legend;\n    }\n\n    this.chartInstance = new Chart(node, {\n      type: type,\n      data: data,\n      options: options,\n      plugins: plugins\n    });\n  };\n\n  ChartComponent.prototype.render = function render() {\n    var _props3 = this.props,\n        height = _props3.height,\n        width = _props3.width,\n        onElementsClick = _props3.onElementsClick,\n        id = _props3.id;\n    return React.createElement('canvas', {\n      ref: this.ref,\n      height: height,\n      width: width,\n      id: id,\n      onClick: this.handleOnClick\n    });\n  };\n\n  return ChartComponent;\n}(React.Component);\n\nChartComponent.getLabelAsKey = function (d) {\n  return d.label;\n};\n\nChartComponent.propTypes = {\n  data: PropTypes.oneOfType([PropTypes.object, PropTypes.func]).isRequired,\n  getDatasetAtEvent: PropTypes.func,\n  getElementAtEvent: PropTypes.func,\n  getElementsAtEvent: PropTypes.func,\n  height: PropTypes.number,\n  legend: PropTypes.object,\n  onElementsClick: PropTypes.func,\n  options: PropTypes.object,\n  plugins: PropTypes.arrayOf(PropTypes.object),\n  redraw: PropTypes.bool,\n  type: function type(props, propName, componentName) {\n    if (!Chart.controllers[props[propName]]) {\n      return new Error('Invalid chart type `' + props[propName] + '` supplied to' + ' `' + componentName + '`.');\n    }\n  },\n  width: PropTypes.number,\n  datasetKeyProvider: PropTypes.func\n};\nChartComponent.defaultProps = {\n  legend: {\n    display: true,\n    position: 'bottom'\n  },\n  type: 'doughnut',\n  height: 150,\n  width: 300,\n  redraw: false,\n  options: {},\n  datasetKeyProvider: ChartComponent.getLabelAsKey\n};\nexport default ChartComponent;\nexport var Doughnut = function (_React$Component2) {\n  _inherits(Doughnut, _React$Component2);\n\n  function Doughnut() {\n    _classCallCheck(this, Doughnut);\n\n    return _possibleConstructorReturn(this, _React$Component2.apply(this, arguments));\n  }\n\n  Doughnut.prototype.render = function render() {\n    var _this4 = this;\n\n    return React.createElement(ChartComponent, _extends({}, this.props, {\n      ref: function ref(_ref) {\n        return _this4.chartInstance = _ref && _ref.chartInstance;\n      },\n      type: 'doughnut'\n    }));\n  };\n\n  return Doughnut;\n}(React.Component);\nexport var Pie = function (_React$Component3) {\n  _inherits(Pie, _React$Component3);\n\n  function Pie() {\n    _classCallCheck(this, Pie);\n\n    return _possibleConstructorReturn(this, _React$Component3.apply(this, arguments));\n  }\n\n  Pie.prototype.render = function render() {\n    var _this6 = this;\n\n    return React.createElement(ChartComponent, _extends({}, this.props, {\n      ref: function ref(_ref2) {\n        return _this6.chartInstance = _ref2 && _ref2.chartInstance;\n      },\n      type: 'pie'\n    }));\n  };\n\n  return Pie;\n}(React.Component);\nexport var Line = function (_React$Component4) {\n  _inherits(Line, _React$Component4);\n\n  function Line() {\n    _classCallCheck(this, Line);\n\n    return _possibleConstructorReturn(this, _React$Component4.apply(this, arguments));\n  }\n\n  Line.prototype.render = function render() {\n    var _this8 = this;\n\n    return React.createElement(ChartComponent, _extends({}, this.props, {\n      ref: function ref(_ref3) {\n        return _this8.chartInstance = _ref3 && _ref3.chartInstance;\n      },\n      type: 'line'\n    }));\n  };\n\n  return Line;\n}(React.Component);\nexport var Bar = function (_React$Component5) {\n  _inherits(Bar, _React$Component5);\n\n  function Bar() {\n    _classCallCheck(this, Bar);\n\n    return _possibleConstructorReturn(this, _React$Component5.apply(this, arguments));\n  }\n\n  Bar.prototype.render = function render() {\n    var _this10 = this;\n\n    return React.createElement(ChartComponent, _extends({}, this.props, {\n      ref: function ref(_ref4) {\n        return _this10.chartInstance = _ref4 && _ref4.chartInstance;\n      },\n      type: 'bar'\n    }));\n  };\n\n  return Bar;\n}(React.Component);\nexport var HorizontalBar = function (_React$Component6) {\n  _inherits(HorizontalBar, _React$Component6);\n\n  function HorizontalBar() {\n    _classCallCheck(this, HorizontalBar);\n\n    return _possibleConstructorReturn(this, _React$Component6.apply(this, arguments));\n  }\n\n  HorizontalBar.prototype.render = function render() {\n    var _this12 = this;\n\n    return React.createElement(ChartComponent, _extends({}, this.props, {\n      ref: function ref(_ref5) {\n        return _this12.chartInstance = _ref5 && _ref5.chartInstance;\n      },\n      type: 'horizontalBar'\n    }));\n  };\n\n  return HorizontalBar;\n}(React.Component);\nexport var Radar = function (_React$Component7) {\n  _inherits(Radar, _React$Component7);\n\n  function Radar() {\n    _classCallCheck(this, Radar);\n\n    return _possibleConstructorReturn(this, _React$Component7.apply(this, arguments));\n  }\n\n  Radar.prototype.render = function render() {\n    var _this14 = this;\n\n    return React.createElement(ChartComponent, _extends({}, this.props, {\n      ref: function ref(_ref6) {\n        return _this14.chartInstance = _ref6 && _ref6.chartInstance;\n      },\n      type: 'radar'\n    }));\n  };\n\n  return Radar;\n}(React.Component);\nexport var Polar = function (_React$Component8) {\n  _inherits(Polar, _React$Component8);\n\n  function Polar() {\n    _classCallCheck(this, Polar);\n\n    return _possibleConstructorReturn(this, _React$Component8.apply(this, arguments));\n  }\n\n  Polar.prototype.render = function render() {\n    var _this16 = this;\n\n    return React.createElement(ChartComponent, _extends({}, this.props, {\n      ref: function ref(_ref7) {\n        return _this16.chartInstance = _ref7 && _ref7.chartInstance;\n      },\n      type: 'polarArea'\n    }));\n  };\n\n  return Polar;\n}(React.Component);\nexport var Bubble = function (_React$Component9) {\n  _inherits(Bubble, _React$Component9);\n\n  function Bubble() {\n    _classCallCheck(this, Bubble);\n\n    return _possibleConstructorReturn(this, _React$Component9.apply(this, arguments));\n  }\n\n  Bubble.prototype.render = function render() {\n    var _this18 = this;\n\n    return React.createElement(ChartComponent, _extends({}, this.props, {\n      ref: function ref(_ref8) {\n        return _this18.chartInstance = _ref8 && _ref8.chartInstance;\n      },\n      type: 'bubble'\n    }));\n  };\n\n  return Bubble;\n}(React.Component);\nexport var Scatter = function (_React$Component10) {\n  _inherits(Scatter, _React$Component10);\n\n  function Scatter() {\n    _classCallCheck(this, Scatter);\n\n    return _possibleConstructorReturn(this, _React$Component10.apply(this, arguments));\n  }\n\n  Scatter.prototype.render = function render() {\n    var _this20 = this;\n\n    return React.createElement(ChartComponent, _extends({}, this.props, {\n      ref: function ref(_ref9) {\n        return _this20.chartInstance = _ref9 && _ref9.chartInstance;\n      },\n      type: 'scatter'\n    }));\n  };\n\n  return Scatter;\n}(React.Component);\nexport var defaults = Chart.defaults;\nexport { Chart };","'use strict';\n\nvar defaults = require('./core.defaults');\n\ndefaults._set('global', {\n  responsive: true,\n  responsiveAnimationDuration: 0,\n  maintainAspectRatio: true,\n  events: ['mousemove', 'mouseout', 'click', 'touchstart', 'touchmove'],\n  hover: {\n    onHover: null,\n    mode: 'nearest',\n    intersect: true,\n    animationDuration: 400\n  },\n  onClick: null,\n  defaultColor: 'rgba(0,0,0,0.1)',\n  defaultFontColor: '#666',\n  defaultFontFamily: \"'Helvetica Neue', 'Helvetica', 'Arial', sans-serif\",\n  defaultFontSize: 12,\n  defaultFontStyle: 'normal',\n  showLines: true,\n  // Element defaults defined in element extensions\n  elements: {},\n  // Layout options such as padding\n  layout: {\n    padding: {\n      top: 0,\n      right: 0,\n      bottom: 0,\n      left: 0\n    }\n  }\n});\n\nmodule.exports = function () {\n  // Occupy the global variable of Chart, and create a simple base class\n  var Chart = function Chart(item, config) {\n    this.construct(item, config);\n    return this;\n  };\n\n  Chart.Chart = Chart;\n  return Chart;\n};","'use strict';\n\nvar helpers = require('./helpers.core');\n/**\n * Easing functions adapted from Robert Penner's easing equations.\n * @namespace Chart.helpers.easingEffects\n * @see http://www.robertpenner.com/easing/\n */\n\n\nvar effects = {\n  linear: function linear(t) {\n    return t;\n  },\n  easeInQuad: function easeInQuad(t) {\n    return t * t;\n  },\n  easeOutQuad: function easeOutQuad(t) {\n    return -t * (t - 2);\n  },\n  easeInOutQuad: function easeInOutQuad(t) {\n    if ((t /= 0.5) < 1) {\n      return 0.5 * t * t;\n    }\n\n    return -0.5 * (--t * (t - 2) - 1);\n  },\n  easeInCubic: function easeInCubic(t) {\n    return t * t * t;\n  },\n  easeOutCubic: function easeOutCubic(t) {\n    return (t = t - 1) * t * t + 1;\n  },\n  easeInOutCubic: function easeInOutCubic(t) {\n    if ((t /= 0.5) < 1) {\n      return 0.5 * t * t * t;\n    }\n\n    return 0.5 * ((t -= 2) * t * t + 2);\n  },\n  easeInQuart: function easeInQuart(t) {\n    return t * t * t * t;\n  },\n  easeOutQuart: function easeOutQuart(t) {\n    return -((t = t - 1) * t * t * t - 1);\n  },\n  easeInOutQuart: function easeInOutQuart(t) {\n    if ((t /= 0.5) < 1) {\n      return 0.5 * t * t * t * t;\n    }\n\n    return -0.5 * ((t -= 2) * t * t * t - 2);\n  },\n  easeInQuint: function easeInQuint(t) {\n    return t * t * t * t * t;\n  },\n  easeOutQuint: function easeOutQuint(t) {\n    return (t = t - 1) * t * t * t * t + 1;\n  },\n  easeInOutQuint: function easeInOutQuint(t) {\n    if ((t /= 0.5) < 1) {\n      return 0.5 * t * t * t * t * t;\n    }\n\n    return 0.5 * ((t -= 2) * t * t * t * t + 2);\n  },\n  easeInSine: function easeInSine(t) {\n    return -Math.cos(t * (Math.PI / 2)) + 1;\n  },\n  easeOutSine: function easeOutSine(t) {\n    return Math.sin(t * (Math.PI / 2));\n  },\n  easeInOutSine: function easeInOutSine(t) {\n    return -0.5 * (Math.cos(Math.PI * t) - 1);\n  },\n  easeInExpo: function easeInExpo(t) {\n    return t === 0 ? 0 : Math.pow(2, 10 * (t - 1));\n  },\n  easeOutExpo: function easeOutExpo(t) {\n    return t === 1 ? 1 : -Math.pow(2, -10 * t) + 1;\n  },\n  easeInOutExpo: function easeInOutExpo(t) {\n    if (t === 0) {\n      return 0;\n    }\n\n    if (t === 1) {\n      return 1;\n    }\n\n    if ((t /= 0.5) < 1) {\n      return 0.5 * Math.pow(2, 10 * (t - 1));\n    }\n\n    return 0.5 * (-Math.pow(2, -10 * --t) + 2);\n  },\n  easeInCirc: function easeInCirc(t) {\n    if (t >= 1) {\n      return t;\n    }\n\n    return -(Math.sqrt(1 - t * t) - 1);\n  },\n  easeOutCirc: function easeOutCirc(t) {\n    return Math.sqrt(1 - (t = t - 1) * t);\n  },\n  easeInOutCirc: function easeInOutCirc(t) {\n    if ((t /= 0.5) < 1) {\n      return -0.5 * (Math.sqrt(1 - t * t) - 1);\n    }\n\n    return 0.5 * (Math.sqrt(1 - (t -= 2) * t) + 1);\n  },\n  easeInElastic: function easeInElastic(t) {\n    var s = 1.70158;\n    var p = 0;\n    var a = 1;\n\n    if (t === 0) {\n      return 0;\n    }\n\n    if (t === 1) {\n      return 1;\n    }\n\n    if (!p) {\n      p = 0.3;\n    }\n\n    if (a < 1) {\n      a = 1;\n      s = p / 4;\n    } else {\n      s = p / (2 * Math.PI) * Math.asin(1 / a);\n    }\n\n    return -(a * Math.pow(2, 10 * (t -= 1)) * Math.sin((t - s) * (2 * Math.PI) / p));\n  },\n  easeOutElastic: function easeOutElastic(t) {\n    var s = 1.70158;\n    var p = 0;\n    var a = 1;\n\n    if (t === 0) {\n      return 0;\n    }\n\n    if (t === 1) {\n      return 1;\n    }\n\n    if (!p) {\n      p = 0.3;\n    }\n\n    if (a < 1) {\n      a = 1;\n      s = p / 4;\n    } else {\n      s = p / (2 * Math.PI) * Math.asin(1 / a);\n    }\n\n    return a * Math.pow(2, -10 * t) * Math.sin((t - s) * (2 * Math.PI) / p) + 1;\n  },\n  easeInOutElastic: function easeInOutElastic(t) {\n    var s = 1.70158;\n    var p = 0;\n    var a = 1;\n\n    if (t === 0) {\n      return 0;\n    }\n\n    if ((t /= 0.5) === 2) {\n      return 1;\n    }\n\n    if (!p) {\n      p = 0.45;\n    }\n\n    if (a < 1) {\n      a = 1;\n      s = p / 4;\n    } else {\n      s = p / (2 * Math.PI) * Math.asin(1 / a);\n    }\n\n    if (t < 1) {\n      return -0.5 * (a * Math.pow(2, 10 * (t -= 1)) * Math.sin((t - s) * (2 * Math.PI) / p));\n    }\n\n    return a * Math.pow(2, -10 * (t -= 1)) * Math.sin((t - s) * (2 * Math.PI) / p) * 0.5 + 1;\n  },\n  easeInBack: function easeInBack(t) {\n    var s = 1.70158;\n    return t * t * ((s + 1) * t - s);\n  },\n  easeOutBack: function easeOutBack(t) {\n    var s = 1.70158;\n    return (t = t - 1) * t * ((s + 1) * t + s) + 1;\n  },\n  easeInOutBack: function easeInOutBack(t) {\n    var s = 1.70158;\n\n    if ((t /= 0.5) < 1) {\n      return 0.5 * (t * t * (((s *= 1.525) + 1) * t - s));\n    }\n\n    return 0.5 * ((t -= 2) * t * (((s *= 1.525) + 1) * t + s) + 2);\n  },\n  easeInBounce: function easeInBounce(t) {\n    return 1 - effects.easeOutBounce(1 - t);\n  },\n  easeOutBounce: function easeOutBounce(t) {\n    if (t < 1 / 2.75) {\n      return 7.5625 * t * t;\n    }\n\n    if (t < 2 / 2.75) {\n      return 7.5625 * (t -= 1.5 / 2.75) * t + 0.75;\n    }\n\n    if (t < 2.5 / 2.75) {\n      return 7.5625 * (t -= 2.25 / 2.75) * t + 0.9375;\n    }\n\n    return 7.5625 * (t -= 2.625 / 2.75) * t + 0.984375;\n  },\n  easeInOutBounce: function easeInOutBounce(t) {\n    if (t < 0.5) {\n      return effects.easeInBounce(t * 2) * 0.5;\n    }\n\n    return effects.easeOutBounce(t * 2 - 1) * 0.5 + 0.5;\n  }\n};\nmodule.exports = {\n  effects: effects\n}; // DEPRECATIONS\n\n/**\n * Provided for backward compatibility, use Chart.helpers.easing.effects instead.\n * @function Chart.helpers.easingEffects\n * @deprecated since version 2.7.0\n * @todo remove at version 3\n * @private\n */\n\nhelpers.easingEffects = effects;","'use strict';\n\nvar helpers = require('./helpers.core');\n/**\n * @namespace Chart.helpers.canvas\n */\n\n\nvar exports = module.exports = {\n  /**\n   * Clears the entire canvas associated to the given `chart`.\n   * @param {Chart} chart - The chart for which to clear the canvas.\n   */\n  clear: function clear(chart) {\n    chart.ctx.clearRect(0, 0, chart.width, chart.height);\n  },\n\n  /**\n   * Creates a \"path\" for a rectangle with rounded corners at position (x, y) with a\n   * given size (width, height) and the same `radius` for all corners.\n   * @param {CanvasRenderingContext2D} ctx - The canvas 2D Context.\n   * @param {Number} x - The x axis of the coordinate for the rectangle starting point.\n   * @param {Number} y - The y axis of the coordinate for the rectangle starting point.\n   * @param {Number} width - The rectangle's width.\n   * @param {Number} height - The rectangle's height.\n   * @param {Number} radius - The rounded amount (in pixels) for the four corners.\n   * @todo handle `radius` as top-left, top-right, bottom-right, bottom-left array/object?\n   */\n  roundedRect: function roundedRect(ctx, x, y, width, height, radius) {\n    if (radius) {\n      // NOTE(SB) `epsilon` helps to prevent minor artifacts appearing\n      // on Chrome when `r` is exactly half the height or the width.\n      var epsilon = 0.0000001;\n      var r = Math.min(radius, height / 2 - epsilon, width / 2 - epsilon);\n      ctx.moveTo(x + r, y);\n      ctx.lineTo(x + width - r, y);\n      ctx.arcTo(x + width, y, x + width, y + r, r);\n      ctx.lineTo(x + width, y + height - r);\n      ctx.arcTo(x + width, y + height, x + width - r, y + height, r);\n      ctx.lineTo(x + r, y + height);\n      ctx.arcTo(x, y + height, x, y + height - r, r);\n      ctx.lineTo(x, y + r);\n      ctx.arcTo(x, y, x + r, y, r);\n      ctx.closePath();\n      ctx.moveTo(x, y);\n    } else {\n      ctx.rect(x, y, width, height);\n    }\n  },\n  drawPoint: function drawPoint(ctx, style, radius, x, y, rotation) {\n    var type, edgeLength, xOffset, yOffset, height, size;\n    rotation = rotation || 0;\n\n    if (style && typeof style === 'object') {\n      type = style.toString();\n\n      if (type === '[object HTMLImageElement]' || type === '[object HTMLCanvasElement]') {\n        ctx.drawImage(style, x - style.width / 2, y - style.height / 2, style.width, style.height);\n        return;\n      }\n    }\n\n    if (isNaN(radius) || radius <= 0) {\n      return;\n    }\n\n    ctx.save();\n    ctx.translate(x, y);\n    ctx.rotate(rotation * Math.PI / 180);\n    ctx.beginPath();\n\n    switch (style) {\n      // Default includes circle\n      default:\n        ctx.arc(0, 0, radius, 0, Math.PI * 2);\n        ctx.closePath();\n        break;\n\n      case 'triangle':\n        edgeLength = 3 * radius / Math.sqrt(3);\n        height = edgeLength * Math.sqrt(3) / 2;\n        ctx.moveTo(-edgeLength / 2, height / 3);\n        ctx.lineTo(edgeLength / 2, height / 3);\n        ctx.lineTo(0, -2 * height / 3);\n        ctx.closePath();\n        break;\n\n      case 'rect':\n        size = 1 / Math.SQRT2 * radius;\n        ctx.rect(-size, -size, 2 * size, 2 * size);\n        break;\n\n      case 'rectRounded':\n        var offset = radius / Math.SQRT2;\n        var leftX = -offset;\n        var topY = -offset;\n        var sideSize = Math.SQRT2 * radius; // NOTE(SB) the rounded rect implementation changed to use `arcTo`\n        // instead of `quadraticCurveTo` since it generates better results\n        // when rect is almost a circle. 0.425 (instead of 0.5) produces\n        // results visually closer to the previous impl.\n\n        this.roundedRect(ctx, leftX, topY, sideSize, sideSize, radius * 0.425);\n        break;\n\n      case 'rectRot':\n        size = 1 / Math.SQRT2 * radius;\n        ctx.moveTo(-size, 0);\n        ctx.lineTo(0, size);\n        ctx.lineTo(size, 0);\n        ctx.lineTo(0, -size);\n        ctx.closePath();\n        break;\n\n      case 'cross':\n        ctx.moveTo(0, radius);\n        ctx.lineTo(0, -radius);\n        ctx.moveTo(-radius, 0);\n        ctx.lineTo(radius, 0);\n        break;\n\n      case 'crossRot':\n        xOffset = Math.cos(Math.PI / 4) * radius;\n        yOffset = Math.sin(Math.PI / 4) * radius;\n        ctx.moveTo(-xOffset, -yOffset);\n        ctx.lineTo(xOffset, yOffset);\n        ctx.moveTo(-xOffset, yOffset);\n        ctx.lineTo(xOffset, -yOffset);\n        break;\n\n      case 'star':\n        ctx.moveTo(0, radius);\n        ctx.lineTo(0, -radius);\n        ctx.moveTo(-radius, 0);\n        ctx.lineTo(radius, 0);\n        xOffset = Math.cos(Math.PI / 4) * radius;\n        yOffset = Math.sin(Math.PI / 4) * radius;\n        ctx.moveTo(-xOffset, -yOffset);\n        ctx.lineTo(xOffset, yOffset);\n        ctx.moveTo(-xOffset, yOffset);\n        ctx.lineTo(xOffset, -yOffset);\n        break;\n\n      case 'line':\n        ctx.moveTo(-radius, 0);\n        ctx.lineTo(radius, 0);\n        break;\n\n      case 'dash':\n        ctx.moveTo(0, 0);\n        ctx.lineTo(radius, 0);\n        break;\n    }\n\n    ctx.fill();\n    ctx.stroke();\n    ctx.restore();\n  },\n  clipArea: function clipArea(ctx, area) {\n    ctx.save();\n    ctx.beginPath();\n    ctx.rect(area.left, area.top, area.right - area.left, area.bottom - area.top);\n    ctx.clip();\n  },\n  unclipArea: function unclipArea(ctx) {\n    ctx.restore();\n  },\n  lineTo: function lineTo(ctx, previous, target, flip) {\n    if (target.steppedLine) {\n      if (target.steppedLine === 'after' && !flip || target.steppedLine !== 'after' && flip) {\n        ctx.lineTo(previous.x, target.y);\n      } else {\n        ctx.lineTo(target.x, previous.y);\n      }\n\n      ctx.lineTo(target.x, target.y);\n      return;\n    }\n\n    if (!target.tension) {\n      ctx.lineTo(target.x, target.y);\n      return;\n    }\n\n    ctx.bezierCurveTo(flip ? previous.controlPointPreviousX : previous.controlPointNextX, flip ? previous.controlPointPreviousY : previous.controlPointNextY, flip ? target.controlPointNextX : target.controlPointPreviousX, flip ? target.controlPointNextY : target.controlPointPreviousY, target.x, target.y);\n  }\n}; // DEPRECATIONS\n\n/**\n * Provided for backward compatibility, use Chart.helpers.canvas.clear instead.\n * @namespace Chart.helpers.clear\n * @deprecated since version 2.7.0\n * @todo remove at version 3\n * @private\n */\n\nhelpers.clear = exports.clear;\n/**\n * Provided for backward compatibility, use Chart.helpers.canvas.roundedRect instead.\n * @namespace Chart.helpers.drawRoundedRectangle\n * @deprecated since version 2.7.0\n * @todo remove at version 3\n * @private\n */\n\nhelpers.drawRoundedRectangle = function (ctx) {\n  ctx.beginPath();\n  exports.roundedRect.apply(exports, arguments);\n};","'use strict';\n\nvar helpers = require('./helpers.core');\n/**\n * @alias Chart.helpers.options\n * @namespace\n */\n\n\nmodule.exports = {\n  /**\n   * Converts the given line height `value` in pixels for a specific font `size`.\n   * @param {Number|String} value - The lineHeight to parse (eg. 1.6, '14px', '75%', '1.6em').\n   * @param {Number} size - The font size (in pixels) used to resolve relative `value`.\n   * @returns {Number} The effective line height in pixels (size * 1.2 if value is invalid).\n   * @see https://developer.mozilla.org/en-US/docs/Web/CSS/line-height\n   * @since 2.7.0\n   */\n  toLineHeight: function toLineHeight(value, size) {\n    var matches = ('' + value).match(/^(normal|(\\d+(?:\\.\\d+)?)(px|em|%)?)$/);\n\n    if (!matches || matches[1] === 'normal') {\n      return size * 1.2;\n    }\n\n    value = +matches[2];\n\n    switch (matches[3]) {\n      case 'px':\n        return value;\n\n      case '%':\n        value /= 100;\n        break;\n\n      default:\n        break;\n    }\n\n    return size * value;\n  },\n\n  /**\n   * Converts the given value into a padding object with pre-computed width/height.\n   * @param {Number|Object} value - If a number, set the value to all TRBL component,\n   *  else, if and object, use defined properties and sets undefined ones to 0.\n   * @returns {Object} The padding values (top, right, bottom, left, width, height)\n   * @since 2.7.0\n   */\n  toPadding: function toPadding(value) {\n    var t, r, b, l;\n\n    if (helpers.isObject(value)) {\n      t = +value.top || 0;\n      r = +value.right || 0;\n      b = +value.bottom || 0;\n      l = +value.left || 0;\n    } else {\n      t = r = b = l = +value || 0;\n    }\n\n    return {\n      top: t,\n      right: r,\n      bottom: b,\n      left: l,\n      height: t + b,\n      width: l + r\n    };\n  },\n\n  /**\n   * Evaluates the given `inputs` sequentially and returns the first defined value.\n   * @param {Array[]} inputs - An array of values, falling back to the last value.\n   * @param {Object} [context] - If defined and the current value is a function, the value\n   * is called with `context` as first argument and the result becomes the new input.\n   * @param {Number} [index] - If defined and the current value is an array, the value\n   * at `index` become the new input.\n   * @since 2.7.0\n   */\n  resolve: function resolve(inputs, context, index) {\n    var i, ilen, value;\n\n    for (i = 0, ilen = inputs.length; i < ilen; ++i) {\n      value = inputs[i];\n\n      if (value === undefined) {\n        continue;\n      }\n\n      if (context !== undefined && typeof value === 'function') {\n        value = value(context);\n      }\n\n      if (index !== undefined && helpers.isArray(value)) {\n        value = value[index];\n      }\n\n      if (value !== undefined) {\n        return value;\n      }\n    }\n  }\n};","/* global window: false */\n\n/* global document: false */\n'use strict';\n\nvar color = require('chartjs-color');\n\nvar defaults = require('./core.defaults');\n\nvar helpers = require('../helpers/index');\n\nvar scaleService = require('../core/core.scaleService');\n\nmodule.exports = function () {\n  // -- Basic js utility methods\n  helpers.configMerge = function ()\n  /* objects ... */\n  {\n    return helpers.merge(helpers.clone(arguments[0]), [].slice.call(arguments, 1), {\n      merger: function merger(key, target, source, options) {\n        var tval = target[key] || {};\n        var sval = source[key];\n\n        if (key === 'scales') {\n          // scale config merging is complex. Add our own function here for that\n          target[key] = helpers.scaleMerge(tval, sval);\n        } else if (key === 'scale') {\n          // used in polar area & radar charts since there is only one scale\n          target[key] = helpers.merge(tval, [scaleService.getScaleDefaults(sval.type), sval]);\n        } else {\n          helpers._merger(key, target, source, options);\n        }\n      }\n    });\n  };\n\n  helpers.scaleMerge = function ()\n  /* objects ... */\n  {\n    return helpers.merge(helpers.clone(arguments[0]), [].slice.call(arguments, 1), {\n      merger: function merger(key, target, source, options) {\n        if (key === 'xAxes' || key === 'yAxes') {\n          var slen = source[key].length;\n          var i, type, scale;\n\n          if (!target[key]) {\n            target[key] = [];\n          }\n\n          for (i = 0; i < slen; ++i) {\n            scale = source[key][i];\n            type = helpers.valueOrDefault(scale.type, key === 'xAxes' ? 'category' : 'linear');\n\n            if (i >= target[key].length) {\n              target[key].push({});\n            }\n\n            if (!target[key][i].type || scale.type && scale.type !== target[key][i].type) {\n              // new/untyped scale or type changed: let's apply the new defaults\n              // then merge source scale to correctly overwrite the defaults.\n              helpers.merge(target[key][i], [scaleService.getScaleDefaults(type), scale]);\n            } else {\n              // scales type are the same\n              helpers.merge(target[key][i], scale);\n            }\n          }\n        } else {\n          helpers._merger(key, target, source, options);\n        }\n      }\n    });\n  };\n\n  helpers.where = function (collection, filterCallback) {\n    if (helpers.isArray(collection) && Array.prototype.filter) {\n      return collection.filter(filterCallback);\n    }\n\n    var filtered = [];\n    helpers.each(collection, function (item) {\n      if (filterCallback(item)) {\n        filtered.push(item);\n      }\n    });\n    return filtered;\n  };\n\n  helpers.findIndex = Array.prototype.findIndex ? function (array, callback, scope) {\n    return array.findIndex(callback, scope);\n  } : function (array, callback, scope) {\n    scope = scope === undefined ? array : scope;\n\n    for (var i = 0, ilen = array.length; i < ilen; ++i) {\n      if (callback.call(scope, array[i], i, array)) {\n        return i;\n      }\n    }\n\n    return -1;\n  };\n\n  helpers.findNextWhere = function (arrayToSearch, filterCallback, startIndex) {\n    // Default to start of the array\n    if (helpers.isNullOrUndef(startIndex)) {\n      startIndex = -1;\n    }\n\n    for (var i = startIndex + 1; i < arrayToSearch.length; i++) {\n      var currentItem = arrayToSearch[i];\n\n      if (filterCallback(currentItem)) {\n        return currentItem;\n      }\n    }\n  };\n\n  helpers.findPreviousWhere = function (arrayToSearch, filterCallback, startIndex) {\n    // Default to end of the array\n    if (helpers.isNullOrUndef(startIndex)) {\n      startIndex = arrayToSearch.length;\n    }\n\n    for (var i = startIndex - 1; i >= 0; i--) {\n      var currentItem = arrayToSearch[i];\n\n      if (filterCallback(currentItem)) {\n        return currentItem;\n      }\n    }\n  }; // -- Math methods\n\n\n  helpers.isNumber = function (n) {\n    return !isNaN(parseFloat(n)) && isFinite(n);\n  };\n\n  helpers.almostEquals = function (x, y, epsilon) {\n    return Math.abs(x - y) < epsilon;\n  };\n\n  helpers.almostWhole = function (x, epsilon) {\n    var rounded = Math.round(x);\n    return rounded - epsilon < x && rounded + epsilon > x;\n  };\n\n  helpers.max = function (array) {\n    return array.reduce(function (max, value) {\n      if (!isNaN(value)) {\n        return Math.max(max, value);\n      }\n\n      return max;\n    }, Number.NEGATIVE_INFINITY);\n  };\n\n  helpers.min = function (array) {\n    return array.reduce(function (min, value) {\n      if (!isNaN(value)) {\n        return Math.min(min, value);\n      }\n\n      return min;\n    }, Number.POSITIVE_INFINITY);\n  };\n\n  helpers.sign = Math.sign ? function (x) {\n    return Math.sign(x);\n  } : function (x) {\n    x = +x; // convert to a number\n\n    if (x === 0 || isNaN(x)) {\n      return x;\n    }\n\n    return x > 0 ? 1 : -1;\n  };\n  helpers.log10 = Math.log10 ? function (x) {\n    return Math.log10(x);\n  } : function (x) {\n    var exponent = Math.log(x) * Math.LOG10E; // Math.LOG10E = 1 / Math.LN10.\n    // Check for whole powers of 10,\n    // which due to floating point rounding error should be corrected.\n\n    var powerOf10 = Math.round(exponent);\n    var isPowerOf10 = x === Math.pow(10, powerOf10);\n    return isPowerOf10 ? powerOf10 : exponent;\n  };\n\n  helpers.toRadians = function (degrees) {\n    return degrees * (Math.PI / 180);\n  };\n\n  helpers.toDegrees = function (radians) {\n    return radians * (180 / Math.PI);\n  }; // Gets the angle from vertical upright to the point about a centre.\n\n\n  helpers.getAngleFromPoint = function (centrePoint, anglePoint) {\n    var distanceFromXCenter = anglePoint.x - centrePoint.x;\n    var distanceFromYCenter = anglePoint.y - centrePoint.y;\n    var radialDistanceFromCenter = Math.sqrt(distanceFromXCenter * distanceFromXCenter + distanceFromYCenter * distanceFromYCenter);\n    var angle = Math.atan2(distanceFromYCenter, distanceFromXCenter);\n\n    if (angle < -0.5 * Math.PI) {\n      angle += 2.0 * Math.PI; // make sure the returned angle is in the range of (-PI/2, 3PI/2]\n    }\n\n    return {\n      angle: angle,\n      distance: radialDistanceFromCenter\n    };\n  };\n\n  helpers.distanceBetweenPoints = function (pt1, pt2) {\n    return Math.sqrt(Math.pow(pt2.x - pt1.x, 2) + Math.pow(pt2.y - pt1.y, 2));\n  };\n\n  helpers.aliasPixel = function (pixelWidth) {\n    return pixelWidth % 2 === 0 ? 0 : 0.5;\n  };\n\n  helpers.splineCurve = function (firstPoint, middlePoint, afterPoint, t) {\n    // Props to Rob Spencer at scaled innovation for his post on splining between points\n    // http://scaledinnovation.com/analytics/splines/aboutSplines.html\n    // This function must also respect \"skipped\" points\n    var previous = firstPoint.skip ? middlePoint : firstPoint;\n    var current = middlePoint;\n    var next = afterPoint.skip ? middlePoint : afterPoint;\n    var d01 = Math.sqrt(Math.pow(current.x - previous.x, 2) + Math.pow(current.y - previous.y, 2));\n    var d12 = Math.sqrt(Math.pow(next.x - current.x, 2) + Math.pow(next.y - current.y, 2));\n    var s01 = d01 / (d01 + d12);\n    var s12 = d12 / (d01 + d12); // If all points are the same, s01 & s02 will be inf\n\n    s01 = isNaN(s01) ? 0 : s01;\n    s12 = isNaN(s12) ? 0 : s12;\n    var fa = t * s01; // scaling factor for triangle Ta\n\n    var fb = t * s12;\n    return {\n      previous: {\n        x: current.x - fa * (next.x - previous.x),\n        y: current.y - fa * (next.y - previous.y)\n      },\n      next: {\n        x: current.x + fb * (next.x - previous.x),\n        y: current.y + fb * (next.y - previous.y)\n      }\n    };\n  };\n\n  helpers.EPSILON = Number.EPSILON || 1e-14;\n\n  helpers.splineCurveMonotone = function (points) {\n    // This function calculates Bézier control points in a similar way than |splineCurve|,\n    // but preserves monotonicity of the provided data and ensures no local extremums are added\n    // between the dataset discrete points due to the interpolation.\n    // See : https://en.wikipedia.org/wiki/Monotone_cubic_interpolation\n    var pointsWithTangents = (points || []).map(function (point) {\n      return {\n        model: point._model,\n        deltaK: 0,\n        mK: 0\n      };\n    }); // Calculate slopes (deltaK) and initialize tangents (mK)\n\n    var pointsLen = pointsWithTangents.length;\n    var i, pointBefore, pointCurrent, pointAfter;\n\n    for (i = 0; i < pointsLen; ++i) {\n      pointCurrent = pointsWithTangents[i];\n\n      if (pointCurrent.model.skip) {\n        continue;\n      }\n\n      pointBefore = i > 0 ? pointsWithTangents[i - 1] : null;\n      pointAfter = i < pointsLen - 1 ? pointsWithTangents[i + 1] : null;\n\n      if (pointAfter && !pointAfter.model.skip) {\n        var slopeDeltaX = pointAfter.model.x - pointCurrent.model.x; // In the case of two points that appear at the same x pixel, slopeDeltaX is 0\n\n        pointCurrent.deltaK = slopeDeltaX !== 0 ? (pointAfter.model.y - pointCurrent.model.y) / slopeDeltaX : 0;\n      }\n\n      if (!pointBefore || pointBefore.model.skip) {\n        pointCurrent.mK = pointCurrent.deltaK;\n      } else if (!pointAfter || pointAfter.model.skip) {\n        pointCurrent.mK = pointBefore.deltaK;\n      } else if (this.sign(pointBefore.deltaK) !== this.sign(pointCurrent.deltaK)) {\n        pointCurrent.mK = 0;\n      } else {\n        pointCurrent.mK = (pointBefore.deltaK + pointCurrent.deltaK) / 2;\n      }\n    } // Adjust tangents to ensure monotonic properties\n\n\n    var alphaK, betaK, tauK, squaredMagnitude;\n\n    for (i = 0; i < pointsLen - 1; ++i) {\n      pointCurrent = pointsWithTangents[i];\n      pointAfter = pointsWithTangents[i + 1];\n\n      if (pointCurrent.model.skip || pointAfter.model.skip) {\n        continue;\n      }\n\n      if (helpers.almostEquals(pointCurrent.deltaK, 0, this.EPSILON)) {\n        pointCurrent.mK = pointAfter.mK = 0;\n        continue;\n      }\n\n      alphaK = pointCurrent.mK / pointCurrent.deltaK;\n      betaK = pointAfter.mK / pointCurrent.deltaK;\n      squaredMagnitude = Math.pow(alphaK, 2) + Math.pow(betaK, 2);\n\n      if (squaredMagnitude <= 9) {\n        continue;\n      }\n\n      tauK = 3 / Math.sqrt(squaredMagnitude);\n      pointCurrent.mK = alphaK * tauK * pointCurrent.deltaK;\n      pointAfter.mK = betaK * tauK * pointCurrent.deltaK;\n    } // Compute control points\n\n\n    var deltaX;\n\n    for (i = 0; i < pointsLen; ++i) {\n      pointCurrent = pointsWithTangents[i];\n\n      if (pointCurrent.model.skip) {\n        continue;\n      }\n\n      pointBefore = i > 0 ? pointsWithTangents[i - 1] : null;\n      pointAfter = i < pointsLen - 1 ? pointsWithTangents[i + 1] : null;\n\n      if (pointBefore && !pointBefore.model.skip) {\n        deltaX = (pointCurrent.model.x - pointBefore.model.x) / 3;\n        pointCurrent.model.controlPointPreviousX = pointCurrent.model.x - deltaX;\n        pointCurrent.model.controlPointPreviousY = pointCurrent.model.y - deltaX * pointCurrent.mK;\n      }\n\n      if (pointAfter && !pointAfter.model.skip) {\n        deltaX = (pointAfter.model.x - pointCurrent.model.x) / 3;\n        pointCurrent.model.controlPointNextX = pointCurrent.model.x + deltaX;\n        pointCurrent.model.controlPointNextY = pointCurrent.model.y + deltaX * pointCurrent.mK;\n      }\n    }\n  };\n\n  helpers.nextItem = function (collection, index, loop) {\n    if (loop) {\n      return index >= collection.length - 1 ? collection[0] : collection[index + 1];\n    }\n\n    return index >= collection.length - 1 ? collection[collection.length - 1] : collection[index + 1];\n  };\n\n  helpers.previousItem = function (collection, index, loop) {\n    if (loop) {\n      return index <= 0 ? collection[collection.length - 1] : collection[index - 1];\n    }\n\n    return index <= 0 ? collection[0] : collection[index - 1];\n  }; // Implementation of the nice number algorithm used in determining where axis labels will go\n\n\n  helpers.niceNum = function (range, round) {\n    var exponent = Math.floor(helpers.log10(range));\n    var fraction = range / Math.pow(10, exponent);\n    var niceFraction;\n\n    if (round) {\n      if (fraction < 1.5) {\n        niceFraction = 1;\n      } else if (fraction < 3) {\n        niceFraction = 2;\n      } else if (fraction < 7) {\n        niceFraction = 5;\n      } else {\n        niceFraction = 10;\n      }\n    } else if (fraction <= 1.0) {\n      niceFraction = 1;\n    } else if (fraction <= 2) {\n      niceFraction = 2;\n    } else if (fraction <= 5) {\n      niceFraction = 5;\n    } else {\n      niceFraction = 10;\n    }\n\n    return niceFraction * Math.pow(10, exponent);\n  }; // Request animation polyfill - http://www.paulirish.com/2011/requestanimationframe-for-smart-animating/\n\n\n  helpers.requestAnimFrame = function () {\n    if (typeof window === 'undefined') {\n      return function (callback) {\n        callback();\n      };\n    }\n\n    return window.requestAnimationFrame || window.webkitRequestAnimationFrame || window.mozRequestAnimationFrame || window.oRequestAnimationFrame || window.msRequestAnimationFrame || function (callback) {\n      return window.setTimeout(callback, 1000 / 60);\n    };\n  }(); // -- DOM methods\n\n\n  helpers.getRelativePosition = function (evt, chart) {\n    var mouseX, mouseY;\n    var e = evt.originalEvent || evt;\n    var canvas = evt.target || evt.srcElement;\n    var boundingRect = canvas.getBoundingClientRect();\n    var touches = e.touches;\n\n    if (touches && touches.length > 0) {\n      mouseX = touches[0].clientX;\n      mouseY = touches[0].clientY;\n    } else {\n      mouseX = e.clientX;\n      mouseY = e.clientY;\n    } // Scale mouse coordinates into canvas coordinates\n    // by following the pattern laid out by 'jerryj' in the comments of\n    // http://www.html5canvastutorials.com/advanced/html5-canvas-mouse-coordinates/\n\n\n    var paddingLeft = parseFloat(helpers.getStyle(canvas, 'padding-left'));\n    var paddingTop = parseFloat(helpers.getStyle(canvas, 'padding-top'));\n    var paddingRight = parseFloat(helpers.getStyle(canvas, 'padding-right'));\n    var paddingBottom = parseFloat(helpers.getStyle(canvas, 'padding-bottom'));\n    var width = boundingRect.right - boundingRect.left - paddingLeft - paddingRight;\n    var height = boundingRect.bottom - boundingRect.top - paddingTop - paddingBottom; // We divide by the current device pixel ratio, because the canvas is scaled up by that amount in each direction. However\n    // the backend model is in unscaled coordinates. Since we are going to deal with our model coordinates, we go back here\n\n    mouseX = Math.round((mouseX - boundingRect.left - paddingLeft) / width * canvas.width / chart.currentDevicePixelRatio);\n    mouseY = Math.round((mouseY - boundingRect.top - paddingTop) / height * canvas.height / chart.currentDevicePixelRatio);\n    return {\n      x: mouseX,\n      y: mouseY\n    };\n  }; // Private helper function to convert max-width/max-height values that may be percentages into a number\n\n\n  function parseMaxStyle(styleValue, node, parentProperty) {\n    var valueInPixels;\n\n    if (typeof styleValue === 'string') {\n      valueInPixels = parseInt(styleValue, 10);\n\n      if (styleValue.indexOf('%') !== -1) {\n        // percentage * size in dimension\n        valueInPixels = valueInPixels / 100 * node.parentNode[parentProperty];\n      }\n    } else {\n      valueInPixels = styleValue;\n    }\n\n    return valueInPixels;\n  }\n  /**\n   * Returns if the given value contains an effective constraint.\n   * @private\n   */\n\n\n  function isConstrainedValue(value) {\n    return value !== undefined && value !== null && value !== 'none';\n  } // Private helper to get a constraint dimension\n  // @param domNode : the node to check the constraint on\n  // @param maxStyle : the style that defines the maximum for the direction we are using (maxWidth / maxHeight)\n  // @param percentageProperty : property of parent to use when calculating width as a percentage\n  // @see http://www.nathanaeljones.com/blog/2013/reading-max-width-cross-browser\n\n\n  function getConstraintDimension(domNode, maxStyle, percentageProperty) {\n    var view = document.defaultView;\n\n    var parentNode = helpers._getParentNode(domNode);\n\n    var constrainedNode = view.getComputedStyle(domNode)[maxStyle];\n    var constrainedContainer = view.getComputedStyle(parentNode)[maxStyle];\n    var hasCNode = isConstrainedValue(constrainedNode);\n    var hasCContainer = isConstrainedValue(constrainedContainer);\n    var infinity = Number.POSITIVE_INFINITY;\n\n    if (hasCNode || hasCContainer) {\n      return Math.min(hasCNode ? parseMaxStyle(constrainedNode, domNode, percentageProperty) : infinity, hasCContainer ? parseMaxStyle(constrainedContainer, parentNode, percentageProperty) : infinity);\n    }\n\n    return 'none';\n  } // returns Number or undefined if no constraint\n\n\n  helpers.getConstraintWidth = function (domNode) {\n    return getConstraintDimension(domNode, 'max-width', 'clientWidth');\n  }; // returns Number or undefined if no constraint\n\n\n  helpers.getConstraintHeight = function (domNode) {\n    return getConstraintDimension(domNode, 'max-height', 'clientHeight');\n  };\n  /**\n   * @private\n  \t */\n\n\n  helpers._calculatePadding = function (container, padding, parentDimension) {\n    padding = helpers.getStyle(container, padding);\n    return padding.indexOf('%') > -1 ? parentDimension / parseInt(padding, 10) : parseInt(padding, 10);\n  };\n  /**\n   * @private\n   */\n\n\n  helpers._getParentNode = function (domNode) {\n    var parent = domNode.parentNode;\n\n    if (parent && parent.host) {\n      parent = parent.host;\n    }\n\n    return parent;\n  };\n\n  helpers.getMaximumWidth = function (domNode) {\n    var container = helpers._getParentNode(domNode);\n\n    if (!container) {\n      return domNode.clientWidth;\n    }\n\n    var clientWidth = container.clientWidth;\n\n    var paddingLeft = helpers._calculatePadding(container, 'padding-left', clientWidth);\n\n    var paddingRight = helpers._calculatePadding(container, 'padding-right', clientWidth);\n\n    var w = clientWidth - paddingLeft - paddingRight;\n    var cw = helpers.getConstraintWidth(domNode);\n    return isNaN(cw) ? w : Math.min(w, cw);\n  };\n\n  helpers.getMaximumHeight = function (domNode) {\n    var container = helpers._getParentNode(domNode);\n\n    if (!container) {\n      return domNode.clientHeight;\n    }\n\n    var clientHeight = container.clientHeight;\n\n    var paddingTop = helpers._calculatePadding(container, 'padding-top', clientHeight);\n\n    var paddingBottom = helpers._calculatePadding(container, 'padding-bottom', clientHeight);\n\n    var h = clientHeight - paddingTop - paddingBottom;\n    var ch = helpers.getConstraintHeight(domNode);\n    return isNaN(ch) ? h : Math.min(h, ch);\n  };\n\n  helpers.getStyle = function (el, property) {\n    return el.currentStyle ? el.currentStyle[property] : document.defaultView.getComputedStyle(el, null).getPropertyValue(property);\n  };\n\n  helpers.retinaScale = function (chart, forceRatio) {\n    var pixelRatio = chart.currentDevicePixelRatio = forceRatio || typeof window !== 'undefined' && window.devicePixelRatio || 1;\n\n    if (pixelRatio === 1) {\n      return;\n    }\n\n    var canvas = chart.canvas;\n    var height = chart.height;\n    var width = chart.width;\n    canvas.height = height * pixelRatio;\n    canvas.width = width * pixelRatio;\n    chart.ctx.scale(pixelRatio, pixelRatio); // If no style has been set on the canvas, the render size is used as display size,\n    // making the chart visually bigger, so let's enforce it to the \"correct\" values.\n    // See https://github.com/chartjs/Chart.js/issues/3575\n\n    if (!canvas.style.height && !canvas.style.width) {\n      canvas.style.height = height + 'px';\n      canvas.style.width = width + 'px';\n    }\n  }; // -- Canvas methods\n\n\n  helpers.fontString = function (pixelSize, fontStyle, fontFamily) {\n    return fontStyle + ' ' + pixelSize + 'px ' + fontFamily;\n  };\n\n  helpers.longestText = function (ctx, font, arrayOfThings, cache) {\n    cache = cache || {};\n    var data = cache.data = cache.data || {};\n    var gc = cache.garbageCollect = cache.garbageCollect || [];\n\n    if (cache.font !== font) {\n      data = cache.data = {};\n      gc = cache.garbageCollect = [];\n      cache.font = font;\n    }\n\n    ctx.font = font;\n    var longest = 0;\n    helpers.each(arrayOfThings, function (thing) {\n      // Undefined strings and arrays should not be measured\n      if (thing !== undefined && thing !== null && helpers.isArray(thing) !== true) {\n        longest = helpers.measureText(ctx, data, gc, longest, thing);\n      } else if (helpers.isArray(thing)) {\n        // if it is an array lets measure each element\n        // to do maybe simplify this function a bit so we can do this more recursively?\n        helpers.each(thing, function (nestedThing) {\n          // Undefined strings and arrays should not be measured\n          if (nestedThing !== undefined && nestedThing !== null && !helpers.isArray(nestedThing)) {\n            longest = helpers.measureText(ctx, data, gc, longest, nestedThing);\n          }\n        });\n      }\n    });\n    var gcLen = gc.length / 2;\n\n    if (gcLen > arrayOfThings.length) {\n      for (var i = 0; i < gcLen; i++) {\n        delete data[gc[i]];\n      }\n\n      gc.splice(0, gcLen);\n    }\n\n    return longest;\n  };\n\n  helpers.measureText = function (ctx, data, gc, longest, string) {\n    var textWidth = data[string];\n\n    if (!textWidth) {\n      textWidth = data[string] = ctx.measureText(string).width;\n      gc.push(string);\n    }\n\n    if (textWidth > longest) {\n      longest = textWidth;\n    }\n\n    return longest;\n  };\n\n  helpers.numberOfLabelLines = function (arrayOfThings) {\n    var numberOfLines = 1;\n    helpers.each(arrayOfThings, function (thing) {\n      if (helpers.isArray(thing)) {\n        if (thing.length > numberOfLines) {\n          numberOfLines = thing.length;\n        }\n      }\n    });\n    return numberOfLines;\n  };\n\n  helpers.color = !color ? function (value) {\n    console.error('Color.js not found!');\n    return value;\n  } : function (value) {\n    /* global CanvasGradient */\n    if (value instanceof CanvasGradient) {\n      value = defaults.global.defaultColor;\n    }\n\n    return color(value);\n  };\n\n  helpers.getHoverColor = function (colorValue) {\n    /* global CanvasPattern */\n    return colorValue instanceof CanvasPattern ? colorValue : helpers.color(colorValue).saturate(0.5).darken(0.1).rgbString();\n  };\n};","var conversions = require(\"./conversions\");\n\nvar convert = function convert() {\n  return new Converter();\n};\n\nfor (var func in conversions) {\n  // export Raw versions\n  convert[func + \"Raw\"] = function (func) {\n    // accept array or plain args\n    return function (arg) {\n      if (typeof arg == \"number\") arg = Array.prototype.slice.call(arguments);\n      return conversions[func](arg);\n    };\n  }(func);\n\n  var pair = /(\\w+)2(\\w+)/.exec(func),\n      from = pair[1],\n      to = pair[2]; // export rgb2hsl and [\"rgb\"][\"hsl\"]\n\n  convert[from] = convert[from] || {};\n\n  convert[from][to] = convert[func] = function (func) {\n    return function (arg) {\n      if (typeof arg == \"number\") arg = Array.prototype.slice.call(arguments);\n      var val = conversions[func](arg);\n      if (typeof val == \"string\" || val === undefined) return val; // keyword\n\n      for (var i = 0; i < val.length; i++) {\n        val[i] = Math.round(val[i]);\n      }\n\n      return val;\n    };\n  }(func);\n}\n/* Converter does lazy conversion and caching */\n\n\nvar Converter = function Converter() {\n  this.convs = {};\n};\n/* Either get the values for a space or\n  set the values for a space, depending on args */\n\n\nConverter.prototype.routeSpace = function (space, args) {\n  var values = args[0];\n\n  if (values === undefined) {\n    // color.rgb()\n    return this.getValues(space);\n  } // color.rgb(10, 10, 10)\n\n\n  if (typeof values == \"number\") {\n    values = Array.prototype.slice.call(args);\n  }\n\n  return this.setValues(space, values);\n};\n/* Set the values for a space, invalidating cache */\n\n\nConverter.prototype.setValues = function (space, values) {\n  this.space = space;\n  this.convs = {};\n  this.convs[space] = values;\n  return this;\n};\n/* Get the values for a space. If there's already\n  a conversion for the space, fetch it, otherwise\n  compute it */\n\n\nConverter.prototype.getValues = function (space) {\n  var vals = this.convs[space];\n\n  if (!vals) {\n    var fspace = this.space,\n        from = this.convs[fspace];\n    vals = convert[fspace][space](from);\n    this.convs[space] = vals;\n  }\n\n  return vals;\n};\n\n[\"rgb\", \"hsl\", \"hsv\", \"cmyk\", \"keyword\"].forEach(function (space) {\n  Converter.prototype[space] = function (vals) {\n    return this.routeSpace(space, arguments);\n  };\n});\nmodule.exports = convert;","/* MIT license */\nmodule.exports = {\n  rgb2hsl: rgb2hsl,\n  rgb2hsv: rgb2hsv,\n  rgb2hwb: rgb2hwb,\n  rgb2cmyk: rgb2cmyk,\n  rgb2keyword: rgb2keyword,\n  rgb2xyz: rgb2xyz,\n  rgb2lab: rgb2lab,\n  rgb2lch: rgb2lch,\n  hsl2rgb: hsl2rgb,\n  hsl2hsv: hsl2hsv,\n  hsl2hwb: hsl2hwb,\n  hsl2cmyk: hsl2cmyk,\n  hsl2keyword: hsl2keyword,\n  hsv2rgb: hsv2rgb,\n  hsv2hsl: hsv2hsl,\n  hsv2hwb: hsv2hwb,\n  hsv2cmyk: hsv2cmyk,\n  hsv2keyword: hsv2keyword,\n  hwb2rgb: hwb2rgb,\n  hwb2hsl: hwb2hsl,\n  hwb2hsv: hwb2hsv,\n  hwb2cmyk: hwb2cmyk,\n  hwb2keyword: hwb2keyword,\n  cmyk2rgb: cmyk2rgb,\n  cmyk2hsl: cmyk2hsl,\n  cmyk2hsv: cmyk2hsv,\n  cmyk2hwb: cmyk2hwb,\n  cmyk2keyword: cmyk2keyword,\n  keyword2rgb: keyword2rgb,\n  keyword2hsl: keyword2hsl,\n  keyword2hsv: keyword2hsv,\n  keyword2hwb: keyword2hwb,\n  keyword2cmyk: keyword2cmyk,\n  keyword2lab: keyword2lab,\n  keyword2xyz: keyword2xyz,\n  xyz2rgb: xyz2rgb,\n  xyz2lab: xyz2lab,\n  xyz2lch: xyz2lch,\n  lab2xyz: lab2xyz,\n  lab2rgb: lab2rgb,\n  lab2lch: lab2lch,\n  lch2lab: lch2lab,\n  lch2xyz: lch2xyz,\n  lch2rgb: lch2rgb\n};\n\nfunction rgb2hsl(rgb) {\n  var r = rgb[0] / 255,\n      g = rgb[1] / 255,\n      b = rgb[2] / 255,\n      min = Math.min(r, g, b),\n      max = Math.max(r, g, b),\n      delta = max - min,\n      h,\n      s,\n      l;\n  if (max == min) h = 0;else if (r == max) h = (g - b) / delta;else if (g == max) h = 2 + (b - r) / delta;else if (b == max) h = 4 + (r - g) / delta;\n  h = Math.min(h * 60, 360);\n  if (h < 0) h += 360;\n  l = (min + max) / 2;\n  if (max == min) s = 0;else if (l <= 0.5) s = delta / (max + min);else s = delta / (2 - max - min);\n  return [h, s * 100, l * 100];\n}\n\nfunction rgb2hsv(rgb) {\n  var r = rgb[0],\n      g = rgb[1],\n      b = rgb[2],\n      min = Math.min(r, g, b),\n      max = Math.max(r, g, b),\n      delta = max - min,\n      h,\n      s,\n      v;\n  if (max == 0) s = 0;else s = delta / max * 1000 / 10;\n  if (max == min) h = 0;else if (r == max) h = (g - b) / delta;else if (g == max) h = 2 + (b - r) / delta;else if (b == max) h = 4 + (r - g) / delta;\n  h = Math.min(h * 60, 360);\n  if (h < 0) h += 360;\n  v = max / 255 * 1000 / 10;\n  return [h, s, v];\n}\n\nfunction rgb2hwb(rgb) {\n  var r = rgb[0],\n      g = rgb[1],\n      b = rgb[2],\n      h = rgb2hsl(rgb)[0],\n      w = 1 / 255 * Math.min(r, Math.min(g, b)),\n      b = 1 - 1 / 255 * Math.max(r, Math.max(g, b));\n  return [h, w * 100, b * 100];\n}\n\nfunction rgb2cmyk(rgb) {\n  var r = rgb[0] / 255,\n      g = rgb[1] / 255,\n      b = rgb[2] / 255,\n      c,\n      m,\n      y,\n      k;\n  k = Math.min(1 - r, 1 - g, 1 - b);\n  c = (1 - r - k) / (1 - k) || 0;\n  m = (1 - g - k) / (1 - k) || 0;\n  y = (1 - b - k) / (1 - k) || 0;\n  return [c * 100, m * 100, y * 100, k * 100];\n}\n\nfunction rgb2keyword(rgb) {\n  return reverseKeywords[JSON.stringify(rgb)];\n}\n\nfunction rgb2xyz(rgb) {\n  var r = rgb[0] / 255,\n      g = rgb[1] / 255,\n      b = rgb[2] / 255; // assume sRGB\n\n  r = r > 0.04045 ? Math.pow((r + 0.055) / 1.055, 2.4) : r / 12.92;\n  g = g > 0.04045 ? Math.pow((g + 0.055) / 1.055, 2.4) : g / 12.92;\n  b = b > 0.04045 ? Math.pow((b + 0.055) / 1.055, 2.4) : b / 12.92;\n  var x = r * 0.4124 + g * 0.3576 + b * 0.1805;\n  var y = r * 0.2126 + g * 0.7152 + b * 0.0722;\n  var z = r * 0.0193 + g * 0.1192 + b * 0.9505;\n  return [x * 100, y * 100, z * 100];\n}\n\nfunction rgb2lab(rgb) {\n  var xyz = rgb2xyz(rgb),\n      x = xyz[0],\n      y = xyz[1],\n      z = xyz[2],\n      l,\n      a,\n      b;\n  x /= 95.047;\n  y /= 100;\n  z /= 108.883;\n  x = x > 0.008856 ? Math.pow(x, 1 / 3) : 7.787 * x + 16 / 116;\n  y = y > 0.008856 ? Math.pow(y, 1 / 3) : 7.787 * y + 16 / 116;\n  z = z > 0.008856 ? Math.pow(z, 1 / 3) : 7.787 * z + 16 / 116;\n  l = 116 * y - 16;\n  a = 500 * (x - y);\n  b = 200 * (y - z);\n  return [l, a, b];\n}\n\nfunction rgb2lch(args) {\n  return lab2lch(rgb2lab(args));\n}\n\nfunction hsl2rgb(hsl) {\n  var h = hsl[0] / 360,\n      s = hsl[1] / 100,\n      l = hsl[2] / 100,\n      t1,\n      t2,\n      t3,\n      rgb,\n      val;\n\n  if (s == 0) {\n    val = l * 255;\n    return [val, val, val];\n  }\n\n  if (l < 0.5) t2 = l * (1 + s);else t2 = l + s - l * s;\n  t1 = 2 * l - t2;\n  rgb = [0, 0, 0];\n\n  for (var i = 0; i < 3; i++) {\n    t3 = h + 1 / 3 * -(i - 1);\n    t3 < 0 && t3++;\n    t3 > 1 && t3--;\n    if (6 * t3 < 1) val = t1 + (t2 - t1) * 6 * t3;else if (2 * t3 < 1) val = t2;else if (3 * t3 < 2) val = t1 + (t2 - t1) * (2 / 3 - t3) * 6;else val = t1;\n    rgb[i] = val * 255;\n  }\n\n  return rgb;\n}\n\nfunction hsl2hsv(hsl) {\n  var h = hsl[0],\n      s = hsl[1] / 100,\n      l = hsl[2] / 100,\n      sv,\n      v;\n\n  if (l === 0) {\n    // no need to do calc on black\n    // also avoids divide by 0 error\n    return [0, 0, 0];\n  }\n\n  l *= 2;\n  s *= l <= 1 ? l : 2 - l;\n  v = (l + s) / 2;\n  sv = 2 * s / (l + s);\n  return [h, sv * 100, v * 100];\n}\n\nfunction hsl2hwb(args) {\n  return rgb2hwb(hsl2rgb(args));\n}\n\nfunction hsl2cmyk(args) {\n  return rgb2cmyk(hsl2rgb(args));\n}\n\nfunction hsl2keyword(args) {\n  return rgb2keyword(hsl2rgb(args));\n}\n\nfunction hsv2rgb(hsv) {\n  var h = hsv[0] / 60,\n      s = hsv[1] / 100,\n      v = hsv[2] / 100,\n      hi = Math.floor(h) % 6;\n  var f = h - Math.floor(h),\n      p = 255 * v * (1 - s),\n      q = 255 * v * (1 - s * f),\n      t = 255 * v * (1 - s * (1 - f)),\n      v = 255 * v;\n\n  switch (hi) {\n    case 0:\n      return [v, t, p];\n\n    case 1:\n      return [q, v, p];\n\n    case 2:\n      return [p, v, t];\n\n    case 3:\n      return [p, q, v];\n\n    case 4:\n      return [t, p, v];\n\n    case 5:\n      return [v, p, q];\n  }\n}\n\nfunction hsv2hsl(hsv) {\n  var h = hsv[0],\n      s = hsv[1] / 100,\n      v = hsv[2] / 100,\n      sl,\n      l;\n  l = (2 - s) * v;\n  sl = s * v;\n  sl /= l <= 1 ? l : 2 - l;\n  sl = sl || 0;\n  l /= 2;\n  return [h, sl * 100, l * 100];\n}\n\nfunction hsv2hwb(args) {\n  return rgb2hwb(hsv2rgb(args));\n}\n\nfunction hsv2cmyk(args) {\n  return rgb2cmyk(hsv2rgb(args));\n}\n\nfunction hsv2keyword(args) {\n  return rgb2keyword(hsv2rgb(args));\n} // http://dev.w3.org/csswg/css-color/#hwb-to-rgb\n\n\nfunction hwb2rgb(hwb) {\n  var h = hwb[0] / 360,\n      wh = hwb[1] / 100,\n      bl = hwb[2] / 100,\n      ratio = wh + bl,\n      i,\n      v,\n      f,\n      n; // wh + bl cant be > 1\n\n  if (ratio > 1) {\n    wh /= ratio;\n    bl /= ratio;\n  }\n\n  i = Math.floor(6 * h);\n  v = 1 - bl;\n  f = 6 * h - i;\n\n  if ((i & 0x01) != 0) {\n    f = 1 - f;\n  }\n\n  n = wh + f * (v - wh); // linear interpolation\n\n  switch (i) {\n    default:\n    case 6:\n    case 0:\n      r = v;\n      g = n;\n      b = wh;\n      break;\n\n    case 1:\n      r = n;\n      g = v;\n      b = wh;\n      break;\n\n    case 2:\n      r = wh;\n      g = v;\n      b = n;\n      break;\n\n    case 3:\n      r = wh;\n      g = n;\n      b = v;\n      break;\n\n    case 4:\n      r = n;\n      g = wh;\n      b = v;\n      break;\n\n    case 5:\n      r = v;\n      g = wh;\n      b = n;\n      break;\n  }\n\n  return [r * 255, g * 255, b * 255];\n}\n\nfunction hwb2hsl(args) {\n  return rgb2hsl(hwb2rgb(args));\n}\n\nfunction hwb2hsv(args) {\n  return rgb2hsv(hwb2rgb(args));\n}\n\nfunction hwb2cmyk(args) {\n  return rgb2cmyk(hwb2rgb(args));\n}\n\nfunction hwb2keyword(args) {\n  return rgb2keyword(hwb2rgb(args));\n}\n\nfunction cmyk2rgb(cmyk) {\n  var c = cmyk[0] / 100,\n      m = cmyk[1] / 100,\n      y = cmyk[2] / 100,\n      k = cmyk[3] / 100,\n      r,\n      g,\n      b;\n  r = 1 - Math.min(1, c * (1 - k) + k);\n  g = 1 - Math.min(1, m * (1 - k) + k);\n  b = 1 - Math.min(1, y * (1 - k) + k);\n  return [r * 255, g * 255, b * 255];\n}\n\nfunction cmyk2hsl(args) {\n  return rgb2hsl(cmyk2rgb(args));\n}\n\nfunction cmyk2hsv(args) {\n  return rgb2hsv(cmyk2rgb(args));\n}\n\nfunction cmyk2hwb(args) {\n  return rgb2hwb(cmyk2rgb(args));\n}\n\nfunction cmyk2keyword(args) {\n  return rgb2keyword(cmyk2rgb(args));\n}\n\nfunction xyz2rgb(xyz) {\n  var x = xyz[0] / 100,\n      y = xyz[1] / 100,\n      z = xyz[2] / 100,\n      r,\n      g,\n      b;\n  r = x * 3.2406 + y * -1.5372 + z * -0.4986;\n  g = x * -0.9689 + y * 1.8758 + z * 0.0415;\n  b = x * 0.0557 + y * -0.2040 + z * 1.0570; // assume sRGB\n\n  r = r > 0.0031308 ? 1.055 * Math.pow(r, 1.0 / 2.4) - 0.055 : r = r * 12.92;\n  g = g > 0.0031308 ? 1.055 * Math.pow(g, 1.0 / 2.4) - 0.055 : g = g * 12.92;\n  b = b > 0.0031308 ? 1.055 * Math.pow(b, 1.0 / 2.4) - 0.055 : b = b * 12.92;\n  r = Math.min(Math.max(0, r), 1);\n  g = Math.min(Math.max(0, g), 1);\n  b = Math.min(Math.max(0, b), 1);\n  return [r * 255, g * 255, b * 255];\n}\n\nfunction xyz2lab(xyz) {\n  var x = xyz[0],\n      y = xyz[1],\n      z = xyz[2],\n      l,\n      a,\n      b;\n  x /= 95.047;\n  y /= 100;\n  z /= 108.883;\n  x = x > 0.008856 ? Math.pow(x, 1 / 3) : 7.787 * x + 16 / 116;\n  y = y > 0.008856 ? Math.pow(y, 1 / 3) : 7.787 * y + 16 / 116;\n  z = z > 0.008856 ? Math.pow(z, 1 / 3) : 7.787 * z + 16 / 116;\n  l = 116 * y - 16;\n  a = 500 * (x - y);\n  b = 200 * (y - z);\n  return [l, a, b];\n}\n\nfunction xyz2lch(args) {\n  return lab2lch(xyz2lab(args));\n}\n\nfunction lab2xyz(lab) {\n  var l = lab[0],\n      a = lab[1],\n      b = lab[2],\n      x,\n      y,\n      z,\n      y2;\n\n  if (l <= 8) {\n    y = l * 100 / 903.3;\n    y2 = 7.787 * (y / 100) + 16 / 116;\n  } else {\n    y = 100 * Math.pow((l + 16) / 116, 3);\n    y2 = Math.pow(y / 100, 1 / 3);\n  }\n\n  x = x / 95.047 <= 0.008856 ? x = 95.047 * (a / 500 + y2 - 16 / 116) / 7.787 : 95.047 * Math.pow(a / 500 + y2, 3);\n  z = z / 108.883 <= 0.008859 ? z = 108.883 * (y2 - b / 200 - 16 / 116) / 7.787 : 108.883 * Math.pow(y2 - b / 200, 3);\n  return [x, y, z];\n}\n\nfunction lab2lch(lab) {\n  var l = lab[0],\n      a = lab[1],\n      b = lab[2],\n      hr,\n      h,\n      c;\n  hr = Math.atan2(b, a);\n  h = hr * 360 / 2 / Math.PI;\n\n  if (h < 0) {\n    h += 360;\n  }\n\n  c = Math.sqrt(a * a + b * b);\n  return [l, c, h];\n}\n\nfunction lab2rgb(args) {\n  return xyz2rgb(lab2xyz(args));\n}\n\nfunction lch2lab(lch) {\n  var l = lch[0],\n      c = lch[1],\n      h = lch[2],\n      a,\n      b,\n      hr;\n  hr = h / 360 * 2 * Math.PI;\n  a = c * Math.cos(hr);\n  b = c * Math.sin(hr);\n  return [l, a, b];\n}\n\nfunction lch2xyz(args) {\n  return lab2xyz(lch2lab(args));\n}\n\nfunction lch2rgb(args) {\n  return lab2rgb(lch2lab(args));\n}\n\nfunction keyword2rgb(keyword) {\n  return cssKeywords[keyword];\n}\n\nfunction keyword2hsl(args) {\n  return rgb2hsl(keyword2rgb(args));\n}\n\nfunction keyword2hsv(args) {\n  return rgb2hsv(keyword2rgb(args));\n}\n\nfunction keyword2hwb(args) {\n  return rgb2hwb(keyword2rgb(args));\n}\n\nfunction keyword2cmyk(args) {\n  return rgb2cmyk(keyword2rgb(args));\n}\n\nfunction keyword2lab(args) {\n  return rgb2lab(keyword2rgb(args));\n}\n\nfunction keyword2xyz(args) {\n  return rgb2xyz(keyword2rgb(args));\n}\n\nvar cssKeywords = {\n  aliceblue: [240, 248, 255],\n  antiquewhite: [250, 235, 215],\n  aqua: [0, 255, 255],\n  aquamarine: [127, 255, 212],\n  azure: [240, 255, 255],\n  beige: [245, 245, 220],\n  bisque: [255, 228, 196],\n  black: [0, 0, 0],\n  blanchedalmond: [255, 235, 205],\n  blue: [0, 0, 255],\n  blueviolet: [138, 43, 226],\n  brown: [165, 42, 42],\n  burlywood: [222, 184, 135],\n  cadetblue: [95, 158, 160],\n  chartreuse: [127, 255, 0],\n  chocolate: [210, 105, 30],\n  coral: [255, 127, 80],\n  cornflowerblue: [100, 149, 237],\n  cornsilk: [255, 248, 220],\n  crimson: [220, 20, 60],\n  cyan: [0, 255, 255],\n  darkblue: [0, 0, 139],\n  darkcyan: [0, 139, 139],\n  darkgoldenrod: [184, 134, 11],\n  darkgray: [169, 169, 169],\n  darkgreen: [0, 100, 0],\n  darkgrey: [169, 169, 169],\n  darkkhaki: [189, 183, 107],\n  darkmagenta: [139, 0, 139],\n  darkolivegreen: [85, 107, 47],\n  darkorange: [255, 140, 0],\n  darkorchid: [153, 50, 204],\n  darkred: [139, 0, 0],\n  darksalmon: [233, 150, 122],\n  darkseagreen: [143, 188, 143],\n  darkslateblue: [72, 61, 139],\n  darkslategray: [47, 79, 79],\n  darkslategrey: [47, 79, 79],\n  darkturquoise: [0, 206, 209],\n  darkviolet: [148, 0, 211],\n  deeppink: [255, 20, 147],\n  deepskyblue: [0, 191, 255],\n  dimgray: [105, 105, 105],\n  dimgrey: [105, 105, 105],\n  dodgerblue: [30, 144, 255],\n  firebrick: [178, 34, 34],\n  floralwhite: [255, 250, 240],\n  forestgreen: [34, 139, 34],\n  fuchsia: [255, 0, 255],\n  gainsboro: [220, 220, 220],\n  ghostwhite: [248, 248, 255],\n  gold: [255, 215, 0],\n  goldenrod: [218, 165, 32],\n  gray: [128, 128, 128],\n  green: [0, 128, 0],\n  greenyellow: [173, 255, 47],\n  grey: [128, 128, 128],\n  honeydew: [240, 255, 240],\n  hotpink: [255, 105, 180],\n  indianred: [205, 92, 92],\n  indigo: [75, 0, 130],\n  ivory: [255, 255, 240],\n  khaki: [240, 230, 140],\n  lavender: [230, 230, 250],\n  lavenderblush: [255, 240, 245],\n  lawngreen: [124, 252, 0],\n  lemonchiffon: [255, 250, 205],\n  lightblue: [173, 216, 230],\n  lightcoral: [240, 128, 128],\n  lightcyan: [224, 255, 255],\n  lightgoldenrodyellow: [250, 250, 210],\n  lightgray: [211, 211, 211],\n  lightgreen: [144, 238, 144],\n  lightgrey: [211, 211, 211],\n  lightpink: [255, 182, 193],\n  lightsalmon: [255, 160, 122],\n  lightseagreen: [32, 178, 170],\n  lightskyblue: [135, 206, 250],\n  lightslategray: [119, 136, 153],\n  lightslategrey: [119, 136, 153],\n  lightsteelblue: [176, 196, 222],\n  lightyellow: [255, 255, 224],\n  lime: [0, 255, 0],\n  limegreen: [50, 205, 50],\n  linen: [250, 240, 230],\n  magenta: [255, 0, 255],\n  maroon: [128, 0, 0],\n  mediumaquamarine: [102, 205, 170],\n  mediumblue: [0, 0, 205],\n  mediumorchid: [186, 85, 211],\n  mediumpurple: [147, 112, 219],\n  mediumseagreen: [60, 179, 113],\n  mediumslateblue: [123, 104, 238],\n  mediumspringgreen: [0, 250, 154],\n  mediumturquoise: [72, 209, 204],\n  mediumvioletred: [199, 21, 133],\n  midnightblue: [25, 25, 112],\n  mintcream: [245, 255, 250],\n  mistyrose: [255, 228, 225],\n  moccasin: [255, 228, 181],\n  navajowhite: [255, 222, 173],\n  navy: [0, 0, 128],\n  oldlace: [253, 245, 230],\n  olive: [128, 128, 0],\n  olivedrab: [107, 142, 35],\n  orange: [255, 165, 0],\n  orangered: [255, 69, 0],\n  orchid: [218, 112, 214],\n  palegoldenrod: [238, 232, 170],\n  palegreen: [152, 251, 152],\n  paleturquoise: [175, 238, 238],\n  palevioletred: [219, 112, 147],\n  papayawhip: [255, 239, 213],\n  peachpuff: [255, 218, 185],\n  peru: [205, 133, 63],\n  pink: [255, 192, 203],\n  plum: [221, 160, 221],\n  powderblue: [176, 224, 230],\n  purple: [128, 0, 128],\n  rebeccapurple: [102, 51, 153],\n  red: [255, 0, 0],\n  rosybrown: [188, 143, 143],\n  royalblue: [65, 105, 225],\n  saddlebrown: [139, 69, 19],\n  salmon: [250, 128, 114],\n  sandybrown: [244, 164, 96],\n  seagreen: [46, 139, 87],\n  seashell: [255, 245, 238],\n  sienna: [160, 82, 45],\n  silver: [192, 192, 192],\n  skyblue: [135, 206, 235],\n  slateblue: [106, 90, 205],\n  slategray: [112, 128, 144],\n  slategrey: [112, 128, 144],\n  snow: [255, 250, 250],\n  springgreen: [0, 255, 127],\n  steelblue: [70, 130, 180],\n  tan: [210, 180, 140],\n  teal: [0, 128, 128],\n  thistle: [216, 191, 216],\n  tomato: [255, 99, 71],\n  turquoise: [64, 224, 208],\n  violet: [238, 130, 238],\n  wheat: [245, 222, 179],\n  white: [255, 255, 255],\n  whitesmoke: [245, 245, 245],\n  yellow: [255, 255, 0],\n  yellowgreen: [154, 205, 50]\n};\nvar reverseKeywords = {};\n\nfor (var key in cssKeywords) {\n  reverseKeywords[JSON.stringify(cssKeywords[key])] = key;\n}","/* MIT license */\nvar colorNames = require('color-name');\n\nmodule.exports = {\n  getRgba: getRgba,\n  getHsla: getHsla,\n  getRgb: getRgb,\n  getHsl: getHsl,\n  getHwb: getHwb,\n  getAlpha: getAlpha,\n  hexString: hexString,\n  rgbString: rgbString,\n  rgbaString: rgbaString,\n  percentString: percentString,\n  percentaString: percentaString,\n  hslString: hslString,\n  hslaString: hslaString,\n  hwbString: hwbString,\n  keyword: keyword\n};\n\nfunction getRgba(string) {\n  if (!string) {\n    return;\n  }\n\n  var abbr = /^#([a-fA-F0-9]{3})$/i,\n      hex = /^#([a-fA-F0-9]{6})$/i,\n      rgba = /^rgba?\\(\\s*([+-]?\\d+)\\s*,\\s*([+-]?\\d+)\\s*,\\s*([+-]?\\d+)\\s*(?:,\\s*([+-]?[\\d\\.]+)\\s*)?\\)$/i,\n      per = /^rgba?\\(\\s*([+-]?[\\d\\.]+)\\%\\s*,\\s*([+-]?[\\d\\.]+)\\%\\s*,\\s*([+-]?[\\d\\.]+)\\%\\s*(?:,\\s*([+-]?[\\d\\.]+)\\s*)?\\)$/i,\n      keyword = /(\\w+)/;\n  var rgb = [0, 0, 0],\n      a = 1,\n      match = string.match(abbr);\n\n  if (match) {\n    match = match[1];\n\n    for (var i = 0; i < rgb.length; i++) {\n      rgb[i] = parseInt(match[i] + match[i], 16);\n    }\n  } else if (match = string.match(hex)) {\n    match = match[1];\n\n    for (var i = 0; i < rgb.length; i++) {\n      rgb[i] = parseInt(match.slice(i * 2, i * 2 + 2), 16);\n    }\n  } else if (match = string.match(rgba)) {\n    for (var i = 0; i < rgb.length; i++) {\n      rgb[i] = parseInt(match[i + 1]);\n    }\n\n    a = parseFloat(match[4]);\n  } else if (match = string.match(per)) {\n    for (var i = 0; i < rgb.length; i++) {\n      rgb[i] = Math.round(parseFloat(match[i + 1]) * 2.55);\n    }\n\n    a = parseFloat(match[4]);\n  } else if (match = string.match(keyword)) {\n    if (match[1] == \"transparent\") {\n      return [0, 0, 0, 0];\n    }\n\n    rgb = colorNames[match[1]];\n\n    if (!rgb) {\n      return;\n    }\n  }\n\n  for (var i = 0; i < rgb.length; i++) {\n    rgb[i] = scale(rgb[i], 0, 255);\n  }\n\n  if (!a && a != 0) {\n    a = 1;\n  } else {\n    a = scale(a, 0, 1);\n  }\n\n  rgb[3] = a;\n  return rgb;\n}\n\nfunction getHsla(string) {\n  if (!string) {\n    return;\n  }\n\n  var hsl = /^hsla?\\(\\s*([+-]?\\d+)(?:deg)?\\s*,\\s*([+-]?[\\d\\.]+)%\\s*,\\s*([+-]?[\\d\\.]+)%\\s*(?:,\\s*([+-]?[\\d\\.]+)\\s*)?\\)/;\n  var match = string.match(hsl);\n\n  if (match) {\n    var alpha = parseFloat(match[4]);\n    var h = scale(parseInt(match[1]), 0, 360),\n        s = scale(parseFloat(match[2]), 0, 100),\n        l = scale(parseFloat(match[3]), 0, 100),\n        a = scale(isNaN(alpha) ? 1 : alpha, 0, 1);\n    return [h, s, l, a];\n  }\n}\n\nfunction getHwb(string) {\n  if (!string) {\n    return;\n  }\n\n  var hwb = /^hwb\\(\\s*([+-]?\\d+)(?:deg)?\\s*,\\s*([+-]?[\\d\\.]+)%\\s*,\\s*([+-]?[\\d\\.]+)%\\s*(?:,\\s*([+-]?[\\d\\.]+)\\s*)?\\)/;\n  var match = string.match(hwb);\n\n  if (match) {\n    var alpha = parseFloat(match[4]);\n    var h = scale(parseInt(match[1]), 0, 360),\n        w = scale(parseFloat(match[2]), 0, 100),\n        b = scale(parseFloat(match[3]), 0, 100),\n        a = scale(isNaN(alpha) ? 1 : alpha, 0, 1);\n    return [h, w, b, a];\n  }\n}\n\nfunction getRgb(string) {\n  var rgba = getRgba(string);\n  return rgba && rgba.slice(0, 3);\n}\n\nfunction getHsl(string) {\n  var hsla = getHsla(string);\n  return hsla && hsla.slice(0, 3);\n}\n\nfunction getAlpha(string) {\n  var vals = getRgba(string);\n\n  if (vals) {\n    return vals[3];\n  } else if (vals = getHsla(string)) {\n    return vals[3];\n  } else if (vals = getHwb(string)) {\n    return vals[3];\n  }\n} // generators\n\n\nfunction hexString(rgb) {\n  return \"#\" + hexDouble(rgb[0]) + hexDouble(rgb[1]) + hexDouble(rgb[2]);\n}\n\nfunction rgbString(rgba, alpha) {\n  if (alpha < 1 || rgba[3] && rgba[3] < 1) {\n    return rgbaString(rgba, alpha);\n  }\n\n  return \"rgb(\" + rgba[0] + \", \" + rgba[1] + \", \" + rgba[2] + \")\";\n}\n\nfunction rgbaString(rgba, alpha) {\n  if (alpha === undefined) {\n    alpha = rgba[3] !== undefined ? rgba[3] : 1;\n  }\n\n  return \"rgba(\" + rgba[0] + \", \" + rgba[1] + \", \" + rgba[2] + \", \" + alpha + \")\";\n}\n\nfunction percentString(rgba, alpha) {\n  if (alpha < 1 || rgba[3] && rgba[3] < 1) {\n    return percentaString(rgba, alpha);\n  }\n\n  var r = Math.round(rgba[0] / 255 * 100),\n      g = Math.round(rgba[1] / 255 * 100),\n      b = Math.round(rgba[2] / 255 * 100);\n  return \"rgb(\" + r + \"%, \" + g + \"%, \" + b + \"%)\";\n}\n\nfunction percentaString(rgba, alpha) {\n  var r = Math.round(rgba[0] / 255 * 100),\n      g = Math.round(rgba[1] / 255 * 100),\n      b = Math.round(rgba[2] / 255 * 100);\n  return \"rgba(\" + r + \"%, \" + g + \"%, \" + b + \"%, \" + (alpha || rgba[3] || 1) + \")\";\n}\n\nfunction hslString(hsla, alpha) {\n  if (alpha < 1 || hsla[3] && hsla[3] < 1) {\n    return hslaString(hsla, alpha);\n  }\n\n  return \"hsl(\" + hsla[0] + \", \" + hsla[1] + \"%, \" + hsla[2] + \"%)\";\n}\n\nfunction hslaString(hsla, alpha) {\n  if (alpha === undefined) {\n    alpha = hsla[3] !== undefined ? hsla[3] : 1;\n  }\n\n  return \"hsla(\" + hsla[0] + \", \" + hsla[1] + \"%, \" + hsla[2] + \"%, \" + alpha + \")\";\n} // hwb is a bit different than rgb(a) & hsl(a) since there is no alpha specific syntax\n// (hwb have alpha optional & 1 is default value)\n\n\nfunction hwbString(hwb, alpha) {\n  if (alpha === undefined) {\n    alpha = hwb[3] !== undefined ? hwb[3] : 1;\n  }\n\n  return \"hwb(\" + hwb[0] + \", \" + hwb[1] + \"%, \" + hwb[2] + \"%\" + (alpha !== undefined && alpha !== 1 ? \", \" + alpha : \"\") + \")\";\n}\n\nfunction keyword(rgb) {\n  return reverseNames[rgb.slice(0, 3)];\n} // helpers\n\n\nfunction scale(num, min, max) {\n  return Math.min(Math.max(min, num), max);\n}\n\nfunction hexDouble(num) {\n  var str = num.toString(16).toUpperCase();\n  return str.length < 2 ? \"0\" + str : str;\n} //create a list of reverse color names\n\n\nvar reverseNames = {};\n\nfor (var name in colorNames) {\n  reverseNames[colorNames[name]] = name;\n}","'use strict';\n\nvar defaults = require('../core/core.defaults');\n\nvar Element = require('../core/core.element');\n\nvar helpers = require('../helpers/index');\n\ndefaults._set('global', {\n  elements: {\n    arc: {\n      backgroundColor: defaults.global.defaultColor,\n      borderColor: '#fff',\n      borderWidth: 2\n    }\n  }\n});\n\nmodule.exports = Element.extend({\n  inLabelRange: function inLabelRange(mouseX) {\n    var vm = this._view;\n\n    if (vm) {\n      return Math.pow(mouseX - vm.x, 2) < Math.pow(vm.radius + vm.hoverRadius, 2);\n    }\n\n    return false;\n  },\n  inRange: function inRange(chartX, chartY) {\n    var vm = this._view;\n\n    if (vm) {\n      var pointRelativePosition = helpers.getAngleFromPoint(vm, {\n        x: chartX,\n        y: chartY\n      });\n      var angle = pointRelativePosition.angle;\n      var distance = pointRelativePosition.distance; // Sanitise angle range\n\n      var startAngle = vm.startAngle;\n      var endAngle = vm.endAngle;\n\n      while (endAngle < startAngle) {\n        endAngle += 2.0 * Math.PI;\n      }\n\n      while (angle > endAngle) {\n        angle -= 2.0 * Math.PI;\n      }\n\n      while (angle < startAngle) {\n        angle += 2.0 * Math.PI;\n      } // Check if within the range of the open/close angle\n\n\n      var betweenAngles = angle >= startAngle && angle <= endAngle;\n      var withinRadius = distance >= vm.innerRadius && distance <= vm.outerRadius;\n      return betweenAngles && withinRadius;\n    }\n\n    return false;\n  },\n  getCenterPoint: function getCenterPoint() {\n    var vm = this._view;\n    var halfAngle = (vm.startAngle + vm.endAngle) / 2;\n    var halfRadius = (vm.innerRadius + vm.outerRadius) / 2;\n    return {\n      x: vm.x + Math.cos(halfAngle) * halfRadius,\n      y: vm.y + Math.sin(halfAngle) * halfRadius\n    };\n  },\n  getArea: function getArea() {\n    var vm = this._view;\n    return Math.PI * ((vm.endAngle - vm.startAngle) / (2 * Math.PI)) * (Math.pow(vm.outerRadius, 2) - Math.pow(vm.innerRadius, 2));\n  },\n  tooltipPosition: function tooltipPosition() {\n    var vm = this._view;\n    var centreAngle = vm.startAngle + (vm.endAngle - vm.startAngle) / 2;\n    var rangeFromCentre = (vm.outerRadius - vm.innerRadius) / 2 + vm.innerRadius;\n    return {\n      x: vm.x + Math.cos(centreAngle) * rangeFromCentre,\n      y: vm.y + Math.sin(centreAngle) * rangeFromCentre\n    };\n  },\n  draw: function draw() {\n    var ctx = this._chart.ctx;\n    var vm = this._view;\n    var sA = vm.startAngle;\n    var eA = vm.endAngle;\n    ctx.beginPath();\n    ctx.arc(vm.x, vm.y, vm.outerRadius, sA, eA);\n    ctx.arc(vm.x, vm.y, vm.innerRadius, eA, sA, true);\n    ctx.closePath();\n    ctx.strokeStyle = vm.borderColor;\n    ctx.lineWidth = vm.borderWidth;\n    ctx.fillStyle = vm.backgroundColor;\n    ctx.fill();\n    ctx.lineJoin = 'bevel';\n\n    if (vm.borderWidth) {\n      ctx.stroke();\n    }\n  }\n});","'use strict';\n\nvar defaults = require('../core/core.defaults');\n\nvar Element = require('../core/core.element');\n\nvar helpers = require('../helpers/index');\n\nvar globalDefaults = defaults.global;\n\ndefaults._set('global', {\n  elements: {\n    line: {\n      tension: 0.4,\n      backgroundColor: globalDefaults.defaultColor,\n      borderWidth: 3,\n      borderColor: globalDefaults.defaultColor,\n      borderCapStyle: 'butt',\n      borderDash: [],\n      borderDashOffset: 0.0,\n      borderJoinStyle: 'miter',\n      capBezierPoints: true,\n      fill: true // do we fill in the area between the line and its base axis\n\n    }\n  }\n});\n\nmodule.exports = Element.extend({\n  draw: function draw() {\n    var me = this;\n    var vm = me._view;\n    var ctx = me._chart.ctx;\n    var spanGaps = vm.spanGaps;\n\n    var points = me._children.slice(); // clone array\n\n\n    var globalOptionLineElements = globalDefaults.elements.line;\n    var lastDrawnIndex = -1;\n    var index, current, previous, currentVM; // If we are looping, adding the first point again\n\n    if (me._loop && points.length) {\n      points.push(points[0]);\n    }\n\n    ctx.save(); // Stroke Line Options\n\n    ctx.lineCap = vm.borderCapStyle || globalOptionLineElements.borderCapStyle; // IE 9 and 10 do not support line dash\n\n    if (ctx.setLineDash) {\n      ctx.setLineDash(vm.borderDash || globalOptionLineElements.borderDash);\n    }\n\n    ctx.lineDashOffset = vm.borderDashOffset || globalOptionLineElements.borderDashOffset;\n    ctx.lineJoin = vm.borderJoinStyle || globalOptionLineElements.borderJoinStyle;\n    ctx.lineWidth = vm.borderWidth || globalOptionLineElements.borderWidth;\n    ctx.strokeStyle = vm.borderColor || globalDefaults.defaultColor; // Stroke Line\n\n    ctx.beginPath();\n    lastDrawnIndex = -1;\n\n    for (index = 0; index < points.length; ++index) {\n      current = points[index];\n      previous = helpers.previousItem(points, index);\n      currentVM = current._view; // First point moves to it's starting position no matter what\n\n      if (index === 0) {\n        if (!currentVM.skip) {\n          ctx.moveTo(currentVM.x, currentVM.y);\n          lastDrawnIndex = index;\n        }\n      } else {\n        previous = lastDrawnIndex === -1 ? previous : points[lastDrawnIndex];\n\n        if (!currentVM.skip) {\n          if (lastDrawnIndex !== index - 1 && !spanGaps || lastDrawnIndex === -1) {\n            // There was a gap and this is the first point after the gap\n            ctx.moveTo(currentVM.x, currentVM.y);\n          } else {\n            // Line to next point\n            helpers.canvas.lineTo(ctx, previous._view, current._view);\n          }\n\n          lastDrawnIndex = index;\n        }\n      }\n    }\n\n    ctx.stroke();\n    ctx.restore();\n  }\n});","'use strict';\n\nvar defaults = require('../core/core.defaults');\n\nvar Element = require('../core/core.element');\n\nvar helpers = require('../helpers/index');\n\nvar defaultColor = defaults.global.defaultColor;\n\ndefaults._set('global', {\n  elements: {\n    point: {\n      radius: 3,\n      pointStyle: 'circle',\n      backgroundColor: defaultColor,\n      borderColor: defaultColor,\n      borderWidth: 1,\n      // Hover\n      hitRadius: 1,\n      hoverRadius: 4,\n      hoverBorderWidth: 1\n    }\n  }\n});\n\nfunction xRange(mouseX) {\n  var vm = this._view;\n  return vm ? Math.abs(mouseX - vm.x) < vm.radius + vm.hitRadius : false;\n}\n\nfunction yRange(mouseY) {\n  var vm = this._view;\n  return vm ? Math.abs(mouseY - vm.y) < vm.radius + vm.hitRadius : false;\n}\n\nmodule.exports = Element.extend({\n  inRange: function inRange(mouseX, mouseY) {\n    var vm = this._view;\n    return vm ? Math.pow(mouseX - vm.x, 2) + Math.pow(mouseY - vm.y, 2) < Math.pow(vm.hitRadius + vm.radius, 2) : false;\n  },\n  inLabelRange: xRange,\n  inXRange: xRange,\n  inYRange: yRange,\n  getCenterPoint: function getCenterPoint() {\n    var vm = this._view;\n    return {\n      x: vm.x,\n      y: vm.y\n    };\n  },\n  getArea: function getArea() {\n    return Math.PI * Math.pow(this._view.radius, 2);\n  },\n  tooltipPosition: function tooltipPosition() {\n    var vm = this._view;\n    return {\n      x: vm.x,\n      y: vm.y,\n      padding: vm.radius + vm.borderWidth\n    };\n  },\n  draw: function draw(chartArea) {\n    var vm = this._view;\n    var model = this._model;\n    var ctx = this._chart.ctx;\n    var pointStyle = vm.pointStyle;\n    var rotation = vm.rotation;\n    var radius = vm.radius;\n    var x = vm.x;\n    var y = vm.y;\n    var errMargin = 1.01; // 1.01 is margin for Accumulated error. (Especially Edge, IE.)\n\n    if (vm.skip) {\n      return;\n    } // Clipping for Points.\n\n\n    if (chartArea === undefined || model.x >= chartArea.left && chartArea.right * errMargin >= model.x && model.y >= chartArea.top && chartArea.bottom * errMargin >= model.y) {\n      ctx.strokeStyle = vm.borderColor || defaultColor;\n      ctx.lineWidth = helpers.valueOrDefault(vm.borderWidth, defaults.global.elements.point.borderWidth);\n      ctx.fillStyle = vm.backgroundColor || defaultColor;\n      helpers.canvas.drawPoint(ctx, pointStyle, radius, x, y, rotation);\n    }\n  }\n});","'use strict';\n\nvar defaults = require('../core/core.defaults');\n\nvar Element = require('../core/core.element');\n\ndefaults._set('global', {\n  elements: {\n    rectangle: {\n      backgroundColor: defaults.global.defaultColor,\n      borderColor: defaults.global.defaultColor,\n      borderSkipped: 'bottom',\n      borderWidth: 0\n    }\n  }\n});\n\nfunction isVertical(bar) {\n  return bar._view.width !== undefined;\n}\n/**\n * Helper function to get the bounds of the bar regardless of the orientation\n * @param bar {Chart.Element.Rectangle} the bar\n * @return {Bounds} bounds of the bar\n * @private\n */\n\n\nfunction getBarBounds(bar) {\n  var vm = bar._view;\n  var x1, x2, y1, y2;\n\n  if (isVertical(bar)) {\n    // vertical\n    var halfWidth = vm.width / 2;\n    x1 = vm.x - halfWidth;\n    x2 = vm.x + halfWidth;\n    y1 = Math.min(vm.y, vm.base);\n    y2 = Math.max(vm.y, vm.base);\n  } else {\n    // horizontal bar\n    var halfHeight = vm.height / 2;\n    x1 = Math.min(vm.x, vm.base);\n    x2 = Math.max(vm.x, vm.base);\n    y1 = vm.y - halfHeight;\n    y2 = vm.y + halfHeight;\n  }\n\n  return {\n    left: x1,\n    top: y1,\n    right: x2,\n    bottom: y2\n  };\n}\n\nmodule.exports = Element.extend({\n  draw: function draw() {\n    var ctx = this._chart.ctx;\n    var vm = this._view;\n    var left, right, top, bottom, signX, signY, borderSkipped;\n    var borderWidth = vm.borderWidth;\n\n    if (!vm.horizontal) {\n      // bar\n      left = vm.x - vm.width / 2;\n      right = vm.x + vm.width / 2;\n      top = vm.y;\n      bottom = vm.base;\n      signX = 1;\n      signY = bottom > top ? 1 : -1;\n      borderSkipped = vm.borderSkipped || 'bottom';\n    } else {\n      // horizontal bar\n      left = vm.base;\n      right = vm.x;\n      top = vm.y - vm.height / 2;\n      bottom = vm.y + vm.height / 2;\n      signX = right > left ? 1 : -1;\n      signY = 1;\n      borderSkipped = vm.borderSkipped || 'left';\n    } // Canvas doesn't allow us to stroke inside the width so we can\n    // adjust the sizes to fit if we're setting a stroke on the line\n\n\n    if (borderWidth) {\n      // borderWidth shold be less than bar width and bar height.\n      var barSize = Math.min(Math.abs(left - right), Math.abs(top - bottom));\n      borderWidth = borderWidth > barSize ? barSize : borderWidth;\n      var halfStroke = borderWidth / 2; // Adjust borderWidth when bar top position is near vm.base(zero).\n\n      var borderLeft = left + (borderSkipped !== 'left' ? halfStroke * signX : 0);\n      var borderRight = right + (borderSkipped !== 'right' ? -halfStroke * signX : 0);\n      var borderTop = top + (borderSkipped !== 'top' ? halfStroke * signY : 0);\n      var borderBottom = bottom + (borderSkipped !== 'bottom' ? -halfStroke * signY : 0); // not become a vertical line?\n\n      if (borderLeft !== borderRight) {\n        top = borderTop;\n        bottom = borderBottom;\n      } // not become a horizontal line?\n\n\n      if (borderTop !== borderBottom) {\n        left = borderLeft;\n        right = borderRight;\n      }\n    }\n\n    ctx.beginPath();\n    ctx.fillStyle = vm.backgroundColor;\n    ctx.strokeStyle = vm.borderColor;\n    ctx.lineWidth = borderWidth; // Corner points, from bottom-left to bottom-right clockwise\n    // | 1 2 |\n    // | 0 3 |\n\n    var corners = [[left, bottom], [left, top], [right, top], [right, bottom]]; // Find first (starting) corner with fallback to 'bottom'\n\n    var borders = ['bottom', 'left', 'top', 'right'];\n    var startCorner = borders.indexOf(borderSkipped, 0);\n\n    if (startCorner === -1) {\n      startCorner = 0;\n    }\n\n    function cornerAt(index) {\n      return corners[(startCorner + index) % 4];\n    } // Draw rectangle from 'startCorner'\n\n\n    var corner = cornerAt(0);\n    ctx.moveTo(corner[0], corner[1]);\n\n    for (var i = 1; i < 4; i++) {\n      corner = cornerAt(i);\n      ctx.lineTo(corner[0], corner[1]);\n    }\n\n    ctx.fill();\n\n    if (borderWidth) {\n      ctx.stroke();\n    }\n  },\n  height: function height() {\n    var vm = this._view;\n    return vm.base - vm.y;\n  },\n  inRange: function inRange(mouseX, mouseY) {\n    var inRange = false;\n\n    if (this._view) {\n      var bounds = getBarBounds(this);\n      inRange = mouseX >= bounds.left && mouseX <= bounds.right && mouseY >= bounds.top && mouseY <= bounds.bottom;\n    }\n\n    return inRange;\n  },\n  inLabelRange: function inLabelRange(mouseX, mouseY) {\n    var me = this;\n\n    if (!me._view) {\n      return false;\n    }\n\n    var inRange = false;\n    var bounds = getBarBounds(me);\n\n    if (isVertical(me)) {\n      inRange = mouseX >= bounds.left && mouseX <= bounds.right;\n    } else {\n      inRange = mouseY >= bounds.top && mouseY <= bounds.bottom;\n    }\n\n    return inRange;\n  },\n  inXRange: function inXRange(mouseX) {\n    var bounds = getBarBounds(this);\n    return mouseX >= bounds.left && mouseX <= bounds.right;\n  },\n  inYRange: function inYRange(mouseY) {\n    var bounds = getBarBounds(this);\n    return mouseY >= bounds.top && mouseY <= bounds.bottom;\n  },\n  getCenterPoint: function getCenterPoint() {\n    var vm = this._view;\n    var x, y;\n\n    if (isVertical(this)) {\n      x = vm.x;\n      y = (vm.y + vm.base) / 2;\n    } else {\n      x = (vm.x + vm.base) / 2;\n      y = vm.y;\n    }\n\n    return {\n      x: x,\n      y: y\n    };\n  },\n  getArea: function getArea() {\n    var vm = this._view;\n    return vm.width * Math.abs(vm.y - vm.base);\n  },\n  tooltipPosition: function tooltipPosition() {\n    var vm = this._view;\n    return {\n      x: vm.x,\n      y: vm.y\n    };\n  }\n});","/**\n * Platform fallback implementation (minimal).\n * @see https://github.com/chartjs/Chart.js/pull/4591#issuecomment-319575939\n */\nmodule.exports = {\n  acquireContext: function acquireContext(item) {\n    if (item && item.canvas) {\n      // Support for any object associated to a canvas (including a context2d)\n      item = item.canvas;\n    }\n\n    return item && item.getContext('2d') || null;\n  }\n};","/**\n * Chart.Platform implementation for targeting a web browser\n */\n'use strict';\n\nvar helpers = require('../helpers/index');\n\nvar EXPANDO_KEY = '$chartjs';\nvar CSS_PREFIX = 'chartjs-';\nvar CSS_RENDER_MONITOR = CSS_PREFIX + 'render-monitor';\nvar CSS_RENDER_ANIMATION = CSS_PREFIX + 'render-animation';\nvar ANIMATION_START_EVENTS = ['animationstart', 'webkitAnimationStart'];\n/**\n * DOM event types -> Chart.js event types.\n * Note: only events with different types are mapped.\n * @see https://developer.mozilla.org/en-US/docs/Web/Events\n */\n\nvar EVENT_TYPES = {\n  touchstart: 'mousedown',\n  touchmove: 'mousemove',\n  touchend: 'mouseup',\n  pointerenter: 'mouseenter',\n  pointerdown: 'mousedown',\n  pointermove: 'mousemove',\n  pointerup: 'mouseup',\n  pointerleave: 'mouseout',\n  pointerout: 'mouseout'\n};\n/**\n * The \"used\" size is the final value of a dimension property after all calculations have\n * been performed. This method uses the computed style of `element` but returns undefined\n * if the computed style is not expressed in pixels. That can happen in some cases where\n * `element` has a size relative to its parent and this last one is not yet displayed,\n * for example because of `display: none` on a parent node.\n * @see https://developer.mozilla.org/en-US/docs/Web/CSS/used_value\n * @returns {Number} Size in pixels or undefined if unknown.\n */\n\nfunction readUsedSize(element, property) {\n  var value = helpers.getStyle(element, property);\n  var matches = value && value.match(/^(\\d+)(\\.\\d+)?px$/);\n  return matches ? Number(matches[1]) : undefined;\n}\n/**\n * Initializes the canvas style and render size without modifying the canvas display size,\n * since responsiveness is handled by the controller.resize() method. The config is used\n * to determine the aspect ratio to apply in case no explicit height has been specified.\n */\n\n\nfunction initCanvas(canvas, config) {\n  var style = canvas.style; // NOTE(SB) canvas.getAttribute('width') !== canvas.width: in the first case it\n  // returns null or '' if no explicit value has been set to the canvas attribute.\n\n  var renderHeight = canvas.getAttribute('height');\n  var renderWidth = canvas.getAttribute('width'); // Chart.js modifies some canvas values that we want to restore on destroy\n\n  canvas[EXPANDO_KEY] = {\n    initial: {\n      height: renderHeight,\n      width: renderWidth,\n      style: {\n        display: style.display,\n        height: style.height,\n        width: style.width\n      }\n    }\n  }; // Force canvas to display as block to avoid extra space caused by inline\n  // elements, which would interfere with the responsive resize process.\n  // https://github.com/chartjs/Chart.js/issues/2538\n\n  style.display = style.display || 'block';\n\n  if (renderWidth === null || renderWidth === '') {\n    var displayWidth = readUsedSize(canvas, 'width');\n\n    if (displayWidth !== undefined) {\n      canvas.width = displayWidth;\n    }\n  }\n\n  if (renderHeight === null || renderHeight === '') {\n    if (canvas.style.height === '') {\n      // If no explicit render height and style height, let's apply the aspect ratio,\n      // which one can be specified by the user but also by charts as default option\n      // (i.e. options.aspectRatio). If not specified, use canvas aspect ratio of 2.\n      canvas.height = canvas.width / (config.options.aspectRatio || 2);\n    } else {\n      var displayHeight = readUsedSize(canvas, 'height');\n\n      if (displayWidth !== undefined) {\n        canvas.height = displayHeight;\n      }\n    }\n  }\n\n  return canvas;\n}\n/**\n * Detects support for options object argument in addEventListener.\n * https://developer.mozilla.org/en-US/docs/Web/API/EventTarget/addEventListener#Safely_detecting_option_support\n * @private\n */\n\n\nvar supportsEventListenerOptions = function () {\n  var supports = false;\n\n  try {\n    var options = Object.defineProperty({}, 'passive', {\n      get: function get() {\n        supports = true;\n      }\n    });\n    window.addEventListener('e', null, options);\n  } catch (e) {// continue regardless of error\n  }\n\n  return supports;\n}(); // Default passive to true as expected by Chrome for 'touchstart' and 'touchend' events.\n// https://github.com/chartjs/Chart.js/issues/4287\n\n\nvar eventListenerOptions = supportsEventListenerOptions ? {\n  passive: true\n} : false;\n\nfunction _addEventListener(node, type, listener) {\n  node.addEventListener(type, listener, eventListenerOptions);\n}\n\nfunction _removeEventListener(node, type, listener) {\n  node.removeEventListener(type, listener, eventListenerOptions);\n}\n\nfunction createEvent(type, chart, x, y, nativeEvent) {\n  return {\n    type: type,\n    chart: chart,\n    native: nativeEvent || null,\n    x: x !== undefined ? x : null,\n    y: y !== undefined ? y : null\n  };\n}\n\nfunction fromNativeEvent(event, chart) {\n  var type = EVENT_TYPES[event.type] || event.type;\n  var pos = helpers.getRelativePosition(event, chart);\n  return createEvent(type, chart, pos.x, pos.y, event);\n}\n\nfunction throttled(fn, thisArg) {\n  var ticking = false;\n  var args = [];\n  return function () {\n    args = Array.prototype.slice.call(arguments);\n    thisArg = thisArg || this;\n\n    if (!ticking) {\n      ticking = true;\n      helpers.requestAnimFrame.call(window, function () {\n        ticking = false;\n        fn.apply(thisArg, args);\n      });\n    }\n  };\n} // Implementation based on https://github.com/marcj/css-element-queries\n\n\nfunction createResizer(handler) {\n  var resizer = document.createElement('div');\n  var cls = CSS_PREFIX + 'size-monitor';\n  var maxSize = 1000000;\n  var style = 'position:absolute;' + 'left:0;' + 'top:0;' + 'right:0;' + 'bottom:0;' + 'overflow:hidden;' + 'pointer-events:none;' + 'visibility:hidden;' + 'z-index:-1;';\n  resizer.style.cssText = style;\n  resizer.className = cls;\n  resizer.innerHTML = '<div class=\"' + cls + '-expand\" style=\"' + style + '\">' + '<div style=\"' + 'position:absolute;' + 'width:' + maxSize + 'px;' + 'height:' + maxSize + 'px;' + 'left:0;' + 'top:0\">' + '</div>' + '</div>' + '<div class=\"' + cls + '-shrink\" style=\"' + style + '\">' + '<div style=\"' + 'position:absolute;' + 'width:200%;' + 'height:200%;' + 'left:0; ' + 'top:0\">' + '</div>' + '</div>';\n  var expand = resizer.childNodes[0];\n  var shrink = resizer.childNodes[1];\n\n  resizer._reset = function () {\n    expand.scrollLeft = maxSize;\n    expand.scrollTop = maxSize;\n    shrink.scrollLeft = maxSize;\n    shrink.scrollTop = maxSize;\n  };\n\n  var onScroll = function onScroll() {\n    resizer._reset();\n\n    handler();\n  };\n\n  _addEventListener(expand, 'scroll', onScroll.bind(expand, 'expand'));\n\n  _addEventListener(shrink, 'scroll', onScroll.bind(shrink, 'shrink'));\n\n  return resizer;\n} // https://davidwalsh.name/detect-node-insertion\n\n\nfunction watchForRender(node, handler) {\n  var expando = node[EXPANDO_KEY] || (node[EXPANDO_KEY] = {});\n\n  var proxy = expando.renderProxy = function (e) {\n    if (e.animationName === CSS_RENDER_ANIMATION) {\n      handler();\n    }\n  };\n\n  helpers.each(ANIMATION_START_EVENTS, function (type) {\n    _addEventListener(node, type, proxy);\n  }); // #4737: Chrome might skip the CSS animation when the CSS_RENDER_MONITOR class\n  // is removed then added back immediately (same animation frame?). Accessing the\n  // `offsetParent` property will force a reflow and re-evaluate the CSS animation.\n  // https://gist.github.com/paulirish/5d52fb081b3570c81e3a#box-metrics\n  // https://github.com/chartjs/Chart.js/issues/4737\n\n  expando.reflow = !!node.offsetParent;\n  node.classList.add(CSS_RENDER_MONITOR);\n}\n\nfunction unwatchForRender(node) {\n  var expando = node[EXPANDO_KEY] || {};\n  var proxy = expando.renderProxy;\n\n  if (proxy) {\n    helpers.each(ANIMATION_START_EVENTS, function (type) {\n      _removeEventListener(node, type, proxy);\n    });\n    delete expando.renderProxy;\n  }\n\n  node.classList.remove(CSS_RENDER_MONITOR);\n}\n\nfunction addResizeListener(node, listener, chart) {\n  var expando = node[EXPANDO_KEY] || (node[EXPANDO_KEY] = {}); // Let's keep track of this added resizer and thus avoid DOM query when removing it.\n\n  var resizer = expando.resizer = createResizer(throttled(function () {\n    if (expando.resizer) {\n      return listener(createEvent('resize', chart));\n    }\n  })); // The resizer needs to be attached to the node parent, so we first need to be\n  // sure that `node` is attached to the DOM before injecting the resizer element.\n\n  watchForRender(node, function () {\n    if (expando.resizer) {\n      var container = node.parentNode;\n\n      if (container && container !== resizer.parentNode) {\n        container.insertBefore(resizer, container.firstChild);\n      } // The container size might have changed, let's reset the resizer state.\n\n\n      resizer._reset();\n    }\n  });\n}\n\nfunction removeResizeListener(node) {\n  var expando = node[EXPANDO_KEY] || {};\n  var resizer = expando.resizer;\n  delete expando.resizer;\n  unwatchForRender(node);\n\n  if (resizer && resizer.parentNode) {\n    resizer.parentNode.removeChild(resizer);\n  }\n}\n\nfunction injectCSS(platform, css) {\n  // http://stackoverflow.com/q/3922139\n  var style = platform._style || document.createElement('style');\n\n  if (!platform._style) {\n    platform._style = style;\n    css = '/* Chart.js */\\n' + css;\n    style.setAttribute('type', 'text/css');\n    document.getElementsByTagName('head')[0].appendChild(style);\n  }\n\n  style.appendChild(document.createTextNode(css));\n}\n\nmodule.exports = {\n  /**\n   * This property holds whether this platform is enabled for the current environment.\n   * Currently used by platform.js to select the proper implementation.\n   * @private\n   */\n  _enabled: typeof window !== 'undefined' && typeof document !== 'undefined',\n  initialize: function initialize() {\n    var keyframes = 'from{opacity:0.99}to{opacity:1}';\n    injectCSS(this, // DOM rendering detection\n    // https://davidwalsh.name/detect-node-insertion\n    '@-webkit-keyframes ' + CSS_RENDER_ANIMATION + '{' + keyframes + '}' + '@keyframes ' + CSS_RENDER_ANIMATION + '{' + keyframes + '}' + '.' + CSS_RENDER_MONITOR + '{' + '-webkit-animation:' + CSS_RENDER_ANIMATION + ' 0.001s;' + 'animation:' + CSS_RENDER_ANIMATION + ' 0.001s;' + '}');\n  },\n  acquireContext: function acquireContext(item, config) {\n    if (typeof item === 'string') {\n      item = document.getElementById(item);\n    } else if (item.length) {\n      // Support for array based queries (such as jQuery)\n      item = item[0];\n    }\n\n    if (item && item.canvas) {\n      // Support for any object associated to a canvas (including a context2d)\n      item = item.canvas;\n    } // To prevent canvas fingerprinting, some add-ons undefine the getContext\n    // method, for example: https://github.com/kkapsner/CanvasBlocker\n    // https://github.com/chartjs/Chart.js/issues/2807\n\n\n    var context = item && item.getContext && item.getContext('2d'); // `instanceof HTMLCanvasElement/CanvasRenderingContext2D` fails when the item is\n    // inside an iframe or when running in a protected environment. We could guess the\n    // types from their toString() value but let's keep things flexible and assume it's\n    // a sufficient condition if the item has a context2D which has item as `canvas`.\n    // https://github.com/chartjs/Chart.js/issues/3887\n    // https://github.com/chartjs/Chart.js/issues/4102\n    // https://github.com/chartjs/Chart.js/issues/4152\n\n    if (context && context.canvas === item) {\n      initCanvas(item, config);\n      return context;\n    }\n\n    return null;\n  },\n  releaseContext: function releaseContext(context) {\n    var canvas = context.canvas;\n\n    if (!canvas[EXPANDO_KEY]) {\n      return;\n    }\n\n    var initial = canvas[EXPANDO_KEY].initial;\n    ['height', 'width'].forEach(function (prop) {\n      var value = initial[prop];\n\n      if (helpers.isNullOrUndef(value)) {\n        canvas.removeAttribute(prop);\n      } else {\n        canvas.setAttribute(prop, value);\n      }\n    });\n    helpers.each(initial.style || {}, function (value, key) {\n      canvas.style[key] = value;\n    }); // The canvas render size might have been changed (and thus the state stack discarded),\n    // we can't use save() and restore() to restore the initial state. So make sure that at\n    // least the canvas context is reset to the default state by setting the canvas width.\n    // https://www.w3.org/TR/2011/WD-html5-20110525/the-canvas-element.html\n\n    canvas.width = canvas.width;\n    delete canvas[EXPANDO_KEY];\n  },\n  addEventListener: function addEventListener(chart, type, listener) {\n    var canvas = chart.canvas;\n\n    if (type === 'resize') {\n      // Note: the resize event is not supported on all browsers.\n      addResizeListener(canvas, listener, chart);\n      return;\n    }\n\n    var expando = listener[EXPANDO_KEY] || (listener[EXPANDO_KEY] = {});\n    var proxies = expando.proxies || (expando.proxies = {});\n\n    var proxy = proxies[chart.id + '_' + type] = function (event) {\n      listener(fromNativeEvent(event, chart));\n    };\n\n    _addEventListener(canvas, type, proxy);\n  },\n  removeEventListener: function removeEventListener(chart, type, listener) {\n    var canvas = chart.canvas;\n\n    if (type === 'resize') {\n      // Note: the resize event is not supported on all browsers.\n      removeResizeListener(canvas, listener);\n      return;\n    }\n\n    var expando = listener[EXPANDO_KEY] || {};\n    var proxies = expando.proxies || {};\n    var proxy = proxies[chart.id + '_' + type];\n\n    if (!proxy) {\n      return;\n    }\n\n    _removeEventListener(canvas, type, proxy);\n  }\n}; // DEPRECATIONS\n\n/**\n * Provided for backward compatibility, use EventTarget.addEventListener instead.\n * EventTarget.addEventListener compatibility: Chrome, Opera 7, Safari, FF1.5+, IE9+\n * @see https://developer.mozilla.org/en-US/docs/Web/API/EventTarget/addEventListener\n * @function Chart.helpers.addEvent\n * @deprecated since version 2.7.0\n * @todo remove at version 3\n * @private\n */\n\nhelpers.addEvent = _addEventListener;\n/**\n * Provided for backward compatibility, use EventTarget.removeEventListener instead.\n * EventTarget.removeEventListener compatibility: Chrome, Opera 7, Safari, FF1.5+, IE9+\n * @see https://developer.mozilla.org/en-US/docs/Web/API/EventTarget/removeEventListener\n * @function Chart.helpers.removeEvent\n * @deprecated since version 2.7.0\n * @todo remove at version 3\n * @private\n */\n\nhelpers.removeEvent = _removeEventListener;","'use strict';\n\nvar Animation = require('./core.animation');\n\nvar animations = require('./core.animations');\n\nvar defaults = require('./core.defaults');\n\nvar helpers = require('../helpers/index');\n\nvar Interaction = require('./core.interaction');\n\nvar layouts = require('./core.layouts');\n\nvar platform = require('../platforms/platform');\n\nvar plugins = require('./core.plugins');\n\nvar scaleService = require('../core/core.scaleService');\n\nvar Tooltip = require('./core.tooltip');\n\nmodule.exports = function (Chart) {\n  // Create a dictionary of chart types, to allow for extension of existing types\n  Chart.types = {}; // Store a reference to each instance - allowing us to globally resize chart instances on window resize.\n  // Destroy method on the chart will remove the instance of the chart from this reference.\n\n  Chart.instances = {}; // Controllers available for dataset visualization eg. bar, line, slice, etc.\n\n  Chart.controllers = {};\n  /**\n   * Initializes the given config with global and chart default values.\n   */\n\n  function initConfig(config) {\n    config = config || {}; // Do NOT use configMerge() for the data object because this method merges arrays\n    // and so would change references to labels and datasets, preventing data updates.\n\n    var data = config.data = config.data || {};\n    data.datasets = data.datasets || [];\n    data.labels = data.labels || [];\n    config.options = helpers.configMerge(defaults.global, defaults[config.type], config.options || {});\n    return config;\n  }\n  /**\n   * Updates the config of the chart\n   * @param chart {Chart} chart to update the options for\n   */\n\n\n  function updateConfig(chart) {\n    var newOptions = chart.options;\n    helpers.each(chart.scales, function (scale) {\n      layouts.removeBox(chart, scale);\n    });\n    newOptions = helpers.configMerge(Chart.defaults.global, Chart.defaults[chart.config.type], newOptions);\n    chart.options = chart.config.options = newOptions;\n    chart.ensureScalesHaveIDs();\n    chart.buildOrUpdateScales(); // Tooltip\n\n    chart.tooltip._options = newOptions.tooltips;\n    chart.tooltip.initialize();\n  }\n\n  function positionIsHorizontal(position) {\n    return position === 'top' || position === 'bottom';\n  }\n\n  helpers.extend(Chart.prototype,\n  /** @lends Chart */\n  {\n    /**\n     * @private\n     */\n    construct: function construct(item, config) {\n      var me = this;\n      config = initConfig(config);\n      var context = platform.acquireContext(item, config);\n      var canvas = context && context.canvas;\n      var height = canvas && canvas.height;\n      var width = canvas && canvas.width;\n      me.id = helpers.uid();\n      me.ctx = context;\n      me.canvas = canvas;\n      me.config = config;\n      me.width = width;\n      me.height = height;\n      me.aspectRatio = height ? width / height : null;\n      me.options = config.options;\n      me._bufferedRender = false;\n      /**\n       * Provided for backward compatibility, Chart and Chart.Controller have been merged,\n       * the \"instance\" still need to be defined since it might be called from plugins.\n       * @prop Chart#chart\n       * @deprecated since version 2.6.0\n       * @todo remove at version 3\n       * @private\n       */\n\n      me.chart = me;\n      me.controller = me; // chart.chart.controller #inception\n      // Add the chart instance to the global namespace\n\n      Chart.instances[me.id] = me; // Define alias to the config data: `chart.data === chart.config.data`\n\n      Object.defineProperty(me, 'data', {\n        get: function get() {\n          return me.config.data;\n        },\n        set: function set(value) {\n          me.config.data = value;\n        }\n      });\n\n      if (!context || !canvas) {\n        // The given item is not a compatible context2d element, let's return before finalizing\n        // the chart initialization but after setting basic chart / controller properties that\n        // can help to figure out that the chart is not valid (e.g chart.canvas !== null);\n        // https://github.com/chartjs/Chart.js/issues/2807\n        console.error(\"Failed to create chart: can't acquire context from the given item\");\n        return;\n      }\n\n      me.initialize();\n      me.update();\n    },\n\n    /**\n     * @private\n     */\n    initialize: function initialize() {\n      var me = this; // Before init plugin notification\n\n      plugins.notify(me, 'beforeInit');\n      helpers.retinaScale(me, me.options.devicePixelRatio);\n      me.bindEvents();\n\n      if (me.options.responsive) {\n        // Initial resize before chart draws (must be silent to preserve initial animations).\n        me.resize(true);\n      } // Make sure scales have IDs and are built before we build any controllers.\n\n\n      me.ensureScalesHaveIDs();\n      me.buildOrUpdateScales();\n      me.initToolTip(); // After init plugin notification\n\n      plugins.notify(me, 'afterInit');\n      return me;\n    },\n    clear: function clear() {\n      helpers.canvas.clear(this);\n      return this;\n    },\n    stop: function stop() {\n      // Stops any current animation loop occurring\n      animations.cancelAnimation(this);\n      return this;\n    },\n    resize: function resize(silent) {\n      var me = this;\n      var options = me.options;\n      var canvas = me.canvas;\n      var aspectRatio = options.maintainAspectRatio && me.aspectRatio || null; // the canvas render width and height will be casted to integers so make sure that\n      // the canvas display style uses the same integer values to avoid blurring effect.\n      // Set to 0 instead of canvas.size because the size defaults to 300x150 if the element is collapsed\n\n      var newWidth = Math.max(0, Math.floor(helpers.getMaximumWidth(canvas)));\n      var newHeight = Math.max(0, Math.floor(aspectRatio ? newWidth / aspectRatio : helpers.getMaximumHeight(canvas)));\n\n      if (me.width === newWidth && me.height === newHeight) {\n        return;\n      }\n\n      canvas.width = me.width = newWidth;\n      canvas.height = me.height = newHeight;\n      canvas.style.width = newWidth + 'px';\n      canvas.style.height = newHeight + 'px';\n      helpers.retinaScale(me, options.devicePixelRatio);\n\n      if (!silent) {\n        // Notify any plugins about the resize\n        var newSize = {\n          width: newWidth,\n          height: newHeight\n        };\n        plugins.notify(me, 'resize', [newSize]); // Notify of resize\n\n        if (me.options.onResize) {\n          me.options.onResize(me, newSize);\n        }\n\n        me.stop();\n        me.update({\n          duration: me.options.responsiveAnimationDuration\n        });\n      }\n    },\n    ensureScalesHaveIDs: function ensureScalesHaveIDs() {\n      var options = this.options;\n      var scalesOptions = options.scales || {};\n      var scaleOptions = options.scale;\n      helpers.each(scalesOptions.xAxes, function (xAxisOptions, index) {\n        xAxisOptions.id = xAxisOptions.id || 'x-axis-' + index;\n      });\n      helpers.each(scalesOptions.yAxes, function (yAxisOptions, index) {\n        yAxisOptions.id = yAxisOptions.id || 'y-axis-' + index;\n      });\n\n      if (scaleOptions) {\n        scaleOptions.id = scaleOptions.id || 'scale';\n      }\n    },\n\n    /**\n     * Builds a map of scale ID to scale object for future lookup.\n     */\n    buildOrUpdateScales: function buildOrUpdateScales() {\n      var me = this;\n      var options = me.options;\n      var scales = me.scales || {};\n      var items = [];\n      var updated = Object.keys(scales).reduce(function (obj, id) {\n        obj[id] = false;\n        return obj;\n      }, {});\n\n      if (options.scales) {\n        items = items.concat((options.scales.xAxes || []).map(function (xAxisOptions) {\n          return {\n            options: xAxisOptions,\n            dtype: 'category',\n            dposition: 'bottom'\n          };\n        }), (options.scales.yAxes || []).map(function (yAxisOptions) {\n          return {\n            options: yAxisOptions,\n            dtype: 'linear',\n            dposition: 'left'\n          };\n        }));\n      }\n\n      if (options.scale) {\n        items.push({\n          options: options.scale,\n          dtype: 'radialLinear',\n          isDefault: true,\n          dposition: 'chartArea'\n        });\n      }\n\n      helpers.each(items, function (item) {\n        var scaleOptions = item.options;\n        var id = scaleOptions.id;\n        var scaleType = helpers.valueOrDefault(scaleOptions.type, item.dtype);\n\n        if (positionIsHorizontal(scaleOptions.position) !== positionIsHorizontal(item.dposition)) {\n          scaleOptions.position = item.dposition;\n        }\n\n        updated[id] = true;\n        var scale = null;\n\n        if (id in scales && scales[id].type === scaleType) {\n          scale = scales[id];\n          scale.options = scaleOptions;\n          scale.ctx = me.ctx;\n          scale.chart = me;\n        } else {\n          var scaleClass = scaleService.getScaleConstructor(scaleType);\n\n          if (!scaleClass) {\n            return;\n          }\n\n          scale = new scaleClass({\n            id: id,\n            type: scaleType,\n            options: scaleOptions,\n            ctx: me.ctx,\n            chart: me\n          });\n          scales[scale.id] = scale;\n        }\n\n        scale.mergeTicksOptions(); // TODO(SB): I think we should be able to remove this custom case (options.scale)\n        // and consider it as a regular scale part of the \"scales\"\" map only! This would\n        // make the logic easier and remove some useless? custom code.\n\n        if (item.isDefault) {\n          me.scale = scale;\n        }\n      }); // clear up discarded scales\n\n      helpers.each(updated, function (hasUpdated, id) {\n        if (!hasUpdated) {\n          delete scales[id];\n        }\n      });\n      me.scales = scales;\n      scaleService.addScalesToLayout(this);\n    },\n    buildOrUpdateControllers: function buildOrUpdateControllers() {\n      var me = this;\n      var types = [];\n      var newControllers = [];\n      helpers.each(me.data.datasets, function (dataset, datasetIndex) {\n        var meta = me.getDatasetMeta(datasetIndex);\n        var type = dataset.type || me.config.type;\n\n        if (meta.type && meta.type !== type) {\n          me.destroyDatasetMeta(datasetIndex);\n          meta = me.getDatasetMeta(datasetIndex);\n        }\n\n        meta.type = type;\n        types.push(meta.type);\n\n        if (meta.controller) {\n          meta.controller.updateIndex(datasetIndex);\n          meta.controller.linkScales();\n        } else {\n          var ControllerClass = Chart.controllers[meta.type];\n\n          if (ControllerClass === undefined) {\n            throw new Error('\"' + meta.type + '\" is not a chart type.');\n          }\n\n          meta.controller = new ControllerClass(me, datasetIndex);\n          newControllers.push(meta.controller);\n        }\n      }, me);\n      return newControllers;\n    },\n\n    /**\n     * Reset the elements of all datasets\n     * @private\n     */\n    resetElements: function resetElements() {\n      var me = this;\n      helpers.each(me.data.datasets, function (dataset, datasetIndex) {\n        me.getDatasetMeta(datasetIndex).controller.reset();\n      }, me);\n    },\n\n    /**\n    * Resets the chart back to it's state before the initial animation\n    */\n    reset: function reset() {\n      this.resetElements();\n      this.tooltip.initialize();\n    },\n    update: function update(config) {\n      var me = this;\n\n      if (!config || typeof config !== 'object') {\n        // backwards compatibility\n        config = {\n          duration: config,\n          lazy: arguments[1]\n        };\n      }\n\n      updateConfig(me); // plugins options references might have change, let's invalidate the cache\n      // https://github.com/chartjs/Chart.js/issues/5111#issuecomment-355934167\n\n      plugins._invalidate(me);\n\n      if (plugins.notify(me, 'beforeUpdate') === false) {\n        return;\n      } // In case the entire data object changed\n\n\n      me.tooltip._data = me.data; // Make sure dataset controllers are updated and new controllers are reset\n\n      var newControllers = me.buildOrUpdateControllers(); // Make sure all dataset controllers have correct meta data counts\n\n      helpers.each(me.data.datasets, function (dataset, datasetIndex) {\n        me.getDatasetMeta(datasetIndex).controller.buildOrUpdateElements();\n      }, me);\n      me.updateLayout(); // Can only reset the new controllers after the scales have been updated\n\n      if (me.options.animation && me.options.animation.duration) {\n        helpers.each(newControllers, function (controller) {\n          controller.reset();\n        });\n      }\n\n      me.updateDatasets(); // Need to reset tooltip in case it is displayed with elements that are removed\n      // after update.\n\n      me.tooltip.initialize(); // Last active contains items that were previously in the tooltip.\n      // When we reset the tooltip, we need to clear it\n\n      me.lastActive = []; // Do this before render so that any plugins that need final scale updates can use it\n\n      plugins.notify(me, 'afterUpdate');\n\n      if (me._bufferedRender) {\n        me._bufferedRequest = {\n          duration: config.duration,\n          easing: config.easing,\n          lazy: config.lazy\n        };\n      } else {\n        me.render(config);\n      }\n    },\n\n    /**\n     * Updates the chart layout unless a plugin returns `false` to the `beforeLayout`\n     * hook, in which case, plugins will not be called on `afterLayout`.\n     * @private\n     */\n    updateLayout: function updateLayout() {\n      var me = this;\n\n      if (plugins.notify(me, 'beforeLayout') === false) {\n        return;\n      }\n\n      layouts.update(this, this.width, this.height);\n      /**\n       * Provided for backward compatibility, use `afterLayout` instead.\n       * @method IPlugin#afterScaleUpdate\n       * @deprecated since version 2.5.0\n       * @todo remove at version 3\n       * @private\n       */\n\n      plugins.notify(me, 'afterScaleUpdate');\n      plugins.notify(me, 'afterLayout');\n    },\n\n    /**\n     * Updates all datasets unless a plugin returns `false` to the `beforeDatasetsUpdate`\n     * hook, in which case, plugins will not be called on `afterDatasetsUpdate`.\n     * @private\n     */\n    updateDatasets: function updateDatasets() {\n      var me = this;\n\n      if (plugins.notify(me, 'beforeDatasetsUpdate') === false) {\n        return;\n      }\n\n      for (var i = 0, ilen = me.data.datasets.length; i < ilen; ++i) {\n        me.updateDataset(i);\n      }\n\n      plugins.notify(me, 'afterDatasetsUpdate');\n    },\n\n    /**\n     * Updates dataset at index unless a plugin returns `false` to the `beforeDatasetUpdate`\n     * hook, in which case, plugins will not be called on `afterDatasetUpdate`.\n     * @private\n     */\n    updateDataset: function updateDataset(index) {\n      var me = this;\n      var meta = me.getDatasetMeta(index);\n      var args = {\n        meta: meta,\n        index: index\n      };\n\n      if (plugins.notify(me, 'beforeDatasetUpdate', [args]) === false) {\n        return;\n      }\n\n      meta.controller.update();\n      plugins.notify(me, 'afterDatasetUpdate', [args]);\n    },\n    render: function render(config) {\n      var me = this;\n\n      if (!config || typeof config !== 'object') {\n        // backwards compatibility\n        config = {\n          duration: config,\n          lazy: arguments[1]\n        };\n      }\n\n      var duration = config.duration;\n      var lazy = config.lazy;\n\n      if (plugins.notify(me, 'beforeRender') === false) {\n        return;\n      }\n\n      var animationOptions = me.options.animation;\n\n      var onComplete = function onComplete(animation) {\n        plugins.notify(me, 'afterRender');\n        helpers.callback(animationOptions && animationOptions.onComplete, [animation], me);\n      };\n\n      if (animationOptions && (typeof duration !== 'undefined' && duration !== 0 || typeof duration === 'undefined' && animationOptions.duration !== 0)) {\n        var animation = new Animation({\n          numSteps: (duration || animationOptions.duration) / 16.66,\n          // 60 fps\n          easing: config.easing || animationOptions.easing,\n          render: function render(chart, animationObject) {\n            var easingFunction = helpers.easing.effects[animationObject.easing];\n            var currentStep = animationObject.currentStep;\n            var stepDecimal = currentStep / animationObject.numSteps;\n            chart.draw(easingFunction(stepDecimal), stepDecimal, currentStep);\n          },\n          onAnimationProgress: animationOptions.onProgress,\n          onAnimationComplete: onComplete\n        });\n        animations.addAnimation(me, animation, duration, lazy);\n      } else {\n        me.draw(); // See https://github.com/chartjs/Chart.js/issues/3781\n\n        onComplete(new Animation({\n          numSteps: 0,\n          chart: me\n        }));\n      }\n\n      return me;\n    },\n    draw: function draw(easingValue) {\n      var me = this;\n      me.clear();\n\n      if (helpers.isNullOrUndef(easingValue)) {\n        easingValue = 1;\n      }\n\n      me.transition(easingValue);\n\n      if (me.width <= 0 || me.height <= 0) {\n        return;\n      }\n\n      if (plugins.notify(me, 'beforeDraw', [easingValue]) === false) {\n        return;\n      } // Draw all the scales\n\n\n      helpers.each(me.boxes, function (box) {\n        box.draw(me.chartArea);\n      }, me);\n\n      if (me.scale) {\n        me.scale.draw();\n      }\n\n      me.drawDatasets(easingValue);\n\n      me._drawTooltip(easingValue);\n\n      plugins.notify(me, 'afterDraw', [easingValue]);\n    },\n\n    /**\n     * @private\n     */\n    transition: function transition(easingValue) {\n      var me = this;\n\n      for (var i = 0, ilen = (me.data.datasets || []).length; i < ilen; ++i) {\n        if (me.isDatasetVisible(i)) {\n          me.getDatasetMeta(i).controller.transition(easingValue);\n        }\n      }\n\n      me.tooltip.transition(easingValue);\n    },\n\n    /**\n     * Draws all datasets unless a plugin returns `false` to the `beforeDatasetsDraw`\n     * hook, in which case, plugins will not be called on `afterDatasetsDraw`.\n     * @private\n     */\n    drawDatasets: function drawDatasets(easingValue) {\n      var me = this;\n\n      if (plugins.notify(me, 'beforeDatasetsDraw', [easingValue]) === false) {\n        return;\n      } // Draw datasets reversed to support proper line stacking\n\n\n      for (var i = (me.data.datasets || []).length - 1; i >= 0; --i) {\n        if (me.isDatasetVisible(i)) {\n          me.drawDataset(i, easingValue);\n        }\n      }\n\n      plugins.notify(me, 'afterDatasetsDraw', [easingValue]);\n    },\n\n    /**\n     * Draws dataset at index unless a plugin returns `false` to the `beforeDatasetDraw`\n     * hook, in which case, plugins will not be called on `afterDatasetDraw`.\n     * @private\n     */\n    drawDataset: function drawDataset(index, easingValue) {\n      var me = this;\n      var meta = me.getDatasetMeta(index);\n      var args = {\n        meta: meta,\n        index: index,\n        easingValue: easingValue\n      };\n\n      if (plugins.notify(me, 'beforeDatasetDraw', [args]) === false) {\n        return;\n      }\n\n      meta.controller.draw(easingValue);\n      plugins.notify(me, 'afterDatasetDraw', [args]);\n    },\n\n    /**\n     * Draws tooltip unless a plugin returns `false` to the `beforeTooltipDraw`\n     * hook, in which case, plugins will not be called on `afterTooltipDraw`.\n     * @private\n     */\n    _drawTooltip: function _drawTooltip(easingValue) {\n      var me = this;\n      var tooltip = me.tooltip;\n      var args = {\n        tooltip: tooltip,\n        easingValue: easingValue\n      };\n\n      if (plugins.notify(me, 'beforeTooltipDraw', [args]) === false) {\n        return;\n      }\n\n      tooltip.draw();\n      plugins.notify(me, 'afterTooltipDraw', [args]);\n    },\n    // Get the single element that was clicked on\n    // @return : An object containing the dataset index and element index of the matching element. Also contains the rectangle that was draw\n    getElementAtEvent: function getElementAtEvent(e) {\n      return Interaction.modes.single(this, e);\n    },\n    getElementsAtEvent: function getElementsAtEvent(e) {\n      return Interaction.modes.label(this, e, {\n        intersect: true\n      });\n    },\n    getElementsAtXAxis: function getElementsAtXAxis(e) {\n      return Interaction.modes['x-axis'](this, e, {\n        intersect: true\n      });\n    },\n    getElementsAtEventForMode: function getElementsAtEventForMode(e, mode, options) {\n      var method = Interaction.modes[mode];\n\n      if (typeof method === 'function') {\n        return method(this, e, options);\n      }\n\n      return [];\n    },\n    getDatasetAtEvent: function getDatasetAtEvent(e) {\n      return Interaction.modes.dataset(this, e, {\n        intersect: true\n      });\n    },\n    getDatasetMeta: function getDatasetMeta(datasetIndex) {\n      var me = this;\n      var dataset = me.data.datasets[datasetIndex];\n\n      if (!dataset._meta) {\n        dataset._meta = {};\n      }\n\n      var meta = dataset._meta[me.id];\n\n      if (!meta) {\n        meta = dataset._meta[me.id] = {\n          type: null,\n          data: [],\n          dataset: null,\n          controller: null,\n          hidden: null,\n          // See isDatasetVisible() comment\n          xAxisID: null,\n          yAxisID: null\n        };\n      }\n\n      return meta;\n    },\n    getVisibleDatasetCount: function getVisibleDatasetCount() {\n      var count = 0;\n\n      for (var i = 0, ilen = this.data.datasets.length; i < ilen; ++i) {\n        if (this.isDatasetVisible(i)) {\n          count++;\n        }\n      }\n\n      return count;\n    },\n    isDatasetVisible: function isDatasetVisible(datasetIndex) {\n      var meta = this.getDatasetMeta(datasetIndex); // meta.hidden is a per chart dataset hidden flag override with 3 states: if true or false,\n      // the dataset.hidden value is ignored, else if null, the dataset hidden state is returned.\n\n      return typeof meta.hidden === 'boolean' ? !meta.hidden : !this.data.datasets[datasetIndex].hidden;\n    },\n    generateLegend: function generateLegend() {\n      return this.options.legendCallback(this);\n    },\n\n    /**\n     * @private\n     */\n    destroyDatasetMeta: function destroyDatasetMeta(datasetIndex) {\n      var id = this.id;\n      var dataset = this.data.datasets[datasetIndex];\n      var meta = dataset._meta && dataset._meta[id];\n\n      if (meta) {\n        meta.controller.destroy();\n        delete dataset._meta[id];\n      }\n    },\n    destroy: function destroy() {\n      var me = this;\n      var canvas = me.canvas;\n      var i, ilen;\n      me.stop(); // dataset controllers need to cleanup associated data\n\n      for (i = 0, ilen = me.data.datasets.length; i < ilen; ++i) {\n        me.destroyDatasetMeta(i);\n      }\n\n      if (canvas) {\n        me.unbindEvents();\n        helpers.canvas.clear(me);\n        platform.releaseContext(me.ctx);\n        me.canvas = null;\n        me.ctx = null;\n      }\n\n      plugins.notify(me, 'destroy');\n      delete Chart.instances[me.id];\n    },\n    toBase64Image: function toBase64Image() {\n      return this.canvas.toDataURL.apply(this.canvas, arguments);\n    },\n    initToolTip: function initToolTip() {\n      var me = this;\n      me.tooltip = new Tooltip({\n        _chart: me,\n        _chartInstance: me,\n        // deprecated, backward compatibility\n        _data: me.data,\n        _options: me.options.tooltips\n      }, me);\n    },\n\n    /**\n     * @private\n     */\n    bindEvents: function bindEvents() {\n      var me = this;\n      var listeners = me._listeners = {};\n\n      var listener = function listener() {\n        me.eventHandler.apply(me, arguments);\n      };\n\n      helpers.each(me.options.events, function (type) {\n        platform.addEventListener(me, type, listener);\n        listeners[type] = listener;\n      }); // Elements used to detect size change should not be injected for non responsive charts.\n      // See https://github.com/chartjs/Chart.js/issues/2210\n\n      if (me.options.responsive) {\n        listener = function listener() {\n          me.resize();\n        };\n\n        platform.addEventListener(me, 'resize', listener);\n        listeners.resize = listener;\n      }\n    },\n\n    /**\n     * @private\n     */\n    unbindEvents: function unbindEvents() {\n      var me = this;\n      var listeners = me._listeners;\n\n      if (!listeners) {\n        return;\n      }\n\n      delete me._listeners;\n      helpers.each(listeners, function (listener, type) {\n        platform.removeEventListener(me, type, listener);\n      });\n    },\n    updateHoverStyle: function updateHoverStyle(elements, mode, enabled) {\n      var method = enabled ? 'setHoverStyle' : 'removeHoverStyle';\n      var element, i, ilen;\n\n      for (i = 0, ilen = elements.length; i < ilen; ++i) {\n        element = elements[i];\n\n        if (element) {\n          this.getDatasetMeta(element._datasetIndex).controller[method](element);\n        }\n      }\n    },\n\n    /**\n     * @private\n     */\n    eventHandler: function eventHandler(e) {\n      var me = this;\n      var tooltip = me.tooltip;\n\n      if (plugins.notify(me, 'beforeEvent', [e]) === false) {\n        return;\n      } // Buffer any update calls so that renders do not occur\n\n\n      me._bufferedRender = true;\n      me._bufferedRequest = null;\n      var changed = me.handleEvent(e); // for smooth tooltip animations issue #4989\n      // the tooltip should be the source of change\n      // Animation check workaround:\n      // tooltip._start will be null when tooltip isn't animating\n\n      if (tooltip) {\n        changed = tooltip._start ? tooltip.handleEvent(e) : changed | tooltip.handleEvent(e);\n      }\n\n      plugins.notify(me, 'afterEvent', [e]);\n      var bufferedRequest = me._bufferedRequest;\n\n      if (bufferedRequest) {\n        // If we have an update that was triggered, we need to do a normal render\n        me.render(bufferedRequest);\n      } else if (changed && !me.animating) {\n        // If entering, leaving, or changing elements, animate the change via pivot\n        me.stop(); // We only need to render at this point. Updating will cause scales to be\n        // recomputed generating flicker & using more memory than necessary.\n\n        me.render({\n          duration: me.options.hover.animationDuration,\n          lazy: true\n        });\n      }\n\n      me._bufferedRender = false;\n      me._bufferedRequest = null;\n      return me;\n    },\n\n    /**\n     * Handle an event\n     * @private\n     * @param {IEvent} event the event to handle\n     * @return {Boolean} true if the chart needs to re-render\n     */\n    handleEvent: function handleEvent(e) {\n      var me = this;\n      var options = me.options || {};\n      var hoverOptions = options.hover;\n      var changed = false;\n      me.lastActive = me.lastActive || []; // Find Active Elements for hover and tooltips\n\n      if (e.type === 'mouseout') {\n        me.active = [];\n      } else {\n        me.active = me.getElementsAtEventForMode(e, hoverOptions.mode, hoverOptions);\n      } // Invoke onHover hook\n      // Need to call with native event here to not break backwards compatibility\n\n\n      helpers.callback(options.onHover || options.hover.onHover, [e.native, me.active], me);\n\n      if (e.type === 'mouseup' || e.type === 'click') {\n        if (options.onClick) {\n          // Use e.native here for backwards compatibility\n          options.onClick.call(me, e.native, me.active);\n        }\n      } // Remove styling for last active (even if it may still be active)\n\n\n      if (me.lastActive.length) {\n        me.updateHoverStyle(me.lastActive, hoverOptions.mode, false);\n      } // Built in hover styling\n\n\n      if (me.active.length && hoverOptions.mode) {\n        me.updateHoverStyle(me.active, hoverOptions.mode, true);\n      }\n\n      changed = !helpers.arrayEquals(me.active, me.lastActive); // Remember Last Actives\n\n      me.lastActive = me.active;\n      return changed;\n    }\n  });\n  /**\n   * Provided for backward compatibility, use Chart instead.\n   * @class Chart.Controller\n   * @deprecated since version 2.6.0\n   * @todo remove at version 3\n   * @private\n   */\n\n  Chart.Controller = Chart;\n};","'use strict';\n\nvar helpers = require('../helpers/index');\n\nmodule.exports = function (Chart) {\n  var arrayEvents = ['push', 'pop', 'shift', 'splice', 'unshift'];\n  /**\n   * Hooks the array methods that add or remove values ('push', pop', 'shift', 'splice',\n   * 'unshift') and notify the listener AFTER the array has been altered. Listeners are\n   * called on the 'onData*' callbacks (e.g. onDataPush, etc.) with same arguments.\n   */\n\n  function listenArrayEvents(array, listener) {\n    if (array._chartjs) {\n      array._chartjs.listeners.push(listener);\n\n      return;\n    }\n\n    Object.defineProperty(array, '_chartjs', {\n      configurable: true,\n      enumerable: false,\n      value: {\n        listeners: [listener]\n      }\n    });\n    arrayEvents.forEach(function (key) {\n      var method = 'onData' + key.charAt(0).toUpperCase() + key.slice(1);\n      var base = array[key];\n      Object.defineProperty(array, key, {\n        configurable: true,\n        enumerable: false,\n        value: function value() {\n          var args = Array.prototype.slice.call(arguments);\n          var res = base.apply(this, args);\n          helpers.each(array._chartjs.listeners, function (object) {\n            if (typeof object[method] === 'function') {\n              object[method].apply(object, args);\n            }\n          });\n          return res;\n        }\n      });\n    });\n  }\n  /**\n   * Removes the given array event listener and cleanup extra attached properties (such as\n   * the _chartjs stub and overridden methods) if array doesn't have any more listeners.\n   */\n\n\n  function unlistenArrayEvents(array, listener) {\n    var stub = array._chartjs;\n\n    if (!stub) {\n      return;\n    }\n\n    var listeners = stub.listeners;\n    var index = listeners.indexOf(listener);\n\n    if (index !== -1) {\n      listeners.splice(index, 1);\n    }\n\n    if (listeners.length > 0) {\n      return;\n    }\n\n    arrayEvents.forEach(function (key) {\n      delete array[key];\n    });\n    delete array._chartjs;\n  } // Base class for all dataset controllers (line, bar, etc)\n\n\n  Chart.DatasetController = function (chart, datasetIndex) {\n    this.initialize(chart, datasetIndex);\n  };\n\n  helpers.extend(Chart.DatasetController.prototype, {\n    /**\n     * Element type used to generate a meta dataset (e.g. Chart.element.Line).\n     * @type {Chart.core.element}\n     */\n    datasetElementType: null,\n\n    /**\n     * Element type used to generate a meta data (e.g. Chart.element.Point).\n     * @type {Chart.core.element}\n     */\n    dataElementType: null,\n    initialize: function initialize(chart, datasetIndex) {\n      var me = this;\n      me.chart = chart;\n      me.index = datasetIndex;\n      me.linkScales();\n      me.addElements();\n    },\n    updateIndex: function updateIndex(datasetIndex) {\n      this.index = datasetIndex;\n    },\n    linkScales: function linkScales() {\n      var me = this;\n      var meta = me.getMeta();\n      var dataset = me.getDataset();\n\n      if (meta.xAxisID === null || !(meta.xAxisID in me.chart.scales)) {\n        meta.xAxisID = dataset.xAxisID || me.chart.options.scales.xAxes[0].id;\n      }\n\n      if (meta.yAxisID === null || !(meta.yAxisID in me.chart.scales)) {\n        meta.yAxisID = dataset.yAxisID || me.chart.options.scales.yAxes[0].id;\n      }\n    },\n    getDataset: function getDataset() {\n      return this.chart.data.datasets[this.index];\n    },\n    getMeta: function getMeta() {\n      return this.chart.getDatasetMeta(this.index);\n    },\n    getScaleForId: function getScaleForId(scaleID) {\n      return this.chart.scales[scaleID];\n    },\n    reset: function reset() {\n      this.update(true);\n    },\n\n    /**\n     * @private\n     */\n    destroy: function destroy() {\n      if (this._data) {\n        unlistenArrayEvents(this._data, this);\n      }\n    },\n    createMetaDataset: function createMetaDataset() {\n      var me = this;\n      var type = me.datasetElementType;\n      return type && new type({\n        _chart: me.chart,\n        _datasetIndex: me.index\n      });\n    },\n    createMetaData: function createMetaData(index) {\n      var me = this;\n      var type = me.dataElementType;\n      return type && new type({\n        _chart: me.chart,\n        _datasetIndex: me.index,\n        _index: index\n      });\n    },\n    addElements: function addElements() {\n      var me = this;\n      var meta = me.getMeta();\n      var data = me.getDataset().data || [];\n      var metaData = meta.data;\n      var i, ilen;\n\n      for (i = 0, ilen = data.length; i < ilen; ++i) {\n        metaData[i] = metaData[i] || me.createMetaData(i);\n      }\n\n      meta.dataset = meta.dataset || me.createMetaDataset();\n    },\n    addElementAndReset: function addElementAndReset(index) {\n      var element = this.createMetaData(index);\n      this.getMeta().data.splice(index, 0, element);\n      this.updateElement(element, index, true);\n    },\n    buildOrUpdateElements: function buildOrUpdateElements() {\n      var me = this;\n      var dataset = me.getDataset();\n      var data = dataset.data || (dataset.data = []); // In order to correctly handle data addition/deletion animation (an thus simulate\n      // real-time charts), we need to monitor these data modifications and synchronize\n      // the internal meta data accordingly.\n\n      if (me._data !== data) {\n        if (me._data) {\n          // This case happens when the user replaced the data array instance.\n          unlistenArrayEvents(me._data, me);\n        }\n\n        listenArrayEvents(data, me);\n        me._data = data;\n      } // Re-sync meta data in case the user replaced the data array or if we missed\n      // any updates and so make sure that we handle number of datapoints changing.\n\n\n      me.resyncElements();\n    },\n    update: helpers.noop,\n    transition: function transition(easingValue) {\n      var meta = this.getMeta();\n      var elements = meta.data || [];\n      var ilen = elements.length;\n      var i = 0;\n\n      for (; i < ilen; ++i) {\n        elements[i].transition(easingValue);\n      }\n\n      if (meta.dataset) {\n        meta.dataset.transition(easingValue);\n      }\n    },\n    draw: function draw() {\n      var meta = this.getMeta();\n      var elements = meta.data || [];\n      var ilen = elements.length;\n      var i = 0;\n\n      if (meta.dataset) {\n        meta.dataset.draw();\n      }\n\n      for (; i < ilen; ++i) {\n        elements[i].draw();\n      }\n    },\n    removeHoverStyle: function removeHoverStyle(element) {\n      helpers.merge(element._model, element.$previousStyle || {});\n      delete element.$previousStyle;\n    },\n    setHoverStyle: function setHoverStyle(element) {\n      var dataset = this.chart.data.datasets[element._datasetIndex];\n      var index = element._index;\n      var custom = element.custom || {};\n      var valueOrDefault = helpers.valueAtIndexOrDefault;\n      var getHoverColor = helpers.getHoverColor;\n      var model = element._model;\n      element.$previousStyle = {\n        backgroundColor: model.backgroundColor,\n        borderColor: model.borderColor,\n        borderWidth: model.borderWidth\n      };\n      model.backgroundColor = custom.hoverBackgroundColor ? custom.hoverBackgroundColor : valueOrDefault(dataset.hoverBackgroundColor, index, getHoverColor(model.backgroundColor));\n      model.borderColor = custom.hoverBorderColor ? custom.hoverBorderColor : valueOrDefault(dataset.hoverBorderColor, index, getHoverColor(model.borderColor));\n      model.borderWidth = custom.hoverBorderWidth ? custom.hoverBorderWidth : valueOrDefault(dataset.hoverBorderWidth, index, model.borderWidth);\n    },\n\n    /**\n     * @private\n     */\n    resyncElements: function resyncElements() {\n      var me = this;\n      var meta = me.getMeta();\n      var data = me.getDataset().data;\n      var numMeta = meta.data.length;\n      var numData = data.length;\n\n      if (numData < numMeta) {\n        meta.data.splice(numData, numMeta - numData);\n      } else if (numData > numMeta) {\n        me.insertElements(numMeta, numData - numMeta);\n      }\n    },\n\n    /**\n     * @private\n     */\n    insertElements: function insertElements(start, count) {\n      for (var i = 0; i < count; ++i) {\n        this.addElementAndReset(start + i);\n      }\n    },\n\n    /**\n     * @private\n     */\n    onDataPush: function onDataPush() {\n      this.insertElements(this.getDataset().data.length - 1, arguments.length);\n    },\n\n    /**\n     * @private\n     */\n    onDataPop: function onDataPop() {\n      this.getMeta().data.pop();\n    },\n\n    /**\n     * @private\n     */\n    onDataShift: function onDataShift() {\n      this.getMeta().data.shift();\n    },\n\n    /**\n     * @private\n     */\n    onDataSplice: function onDataSplice(start, count) {\n      this.getMeta().data.splice(start, count);\n      this.insertElements(start, arguments.length - 2);\n    },\n\n    /**\n     * @private\n     */\n    onDataUnshift: function onDataUnshift() {\n      this.insertElements(0, arguments.length);\n    }\n  });\n  Chart.DatasetController.extend = helpers.inherits;\n};","'use strict';\n\nvar helpers = require('../helpers/index');\n\nvar Scale = require('../core/core.scale');\n/**\n * Generate a set of linear ticks\n * @param generationOptions the options used to generate the ticks\n * @param dataRange the range of the data\n * @returns {Array<Number>} array of tick values\n */\n\n\nfunction generateTicks(generationOptions, dataRange) {\n  var ticks = []; // To get a \"nice\" value for the tick spacing, we will use the appropriately named\n  // \"nice number\" algorithm. See http://stackoverflow.com/questions/8506881/nice-label-algorithm-for-charts-with-minimum-ticks\n  // for details.\n\n  var factor;\n  var precision;\n  var spacing;\n\n  if (generationOptions.stepSize && generationOptions.stepSize > 0) {\n    spacing = generationOptions.stepSize;\n  } else {\n    var niceRange = helpers.niceNum(dataRange.max - dataRange.min, false);\n    spacing = helpers.niceNum(niceRange / (generationOptions.maxTicks - 1), true);\n    precision = generationOptions.precision;\n\n    if (precision !== undefined) {\n      // If the user specified a precision, round to that number of decimal places\n      factor = Math.pow(10, precision);\n      spacing = Math.ceil(spacing * factor) / factor;\n    }\n  }\n\n  var niceMin = Math.floor(dataRange.min / spacing) * spacing;\n  var niceMax = Math.ceil(dataRange.max / spacing) * spacing; // If min, max and stepSize is set and they make an evenly spaced scale use it.\n\n  if (!helpers.isNullOrUndef(generationOptions.min) && !helpers.isNullOrUndef(generationOptions.max) && generationOptions.stepSize) {\n    // If very close to our whole number, use it.\n    if (helpers.almostWhole((generationOptions.max - generationOptions.min) / generationOptions.stepSize, spacing / 1000)) {\n      niceMin = generationOptions.min;\n      niceMax = generationOptions.max;\n    }\n  }\n\n  var numSpaces = (niceMax - niceMin) / spacing; // If very close to our rounded value, use it.\n\n  if (helpers.almostEquals(numSpaces, Math.round(numSpaces), spacing / 1000)) {\n    numSpaces = Math.round(numSpaces);\n  } else {\n    numSpaces = Math.ceil(numSpaces);\n  }\n\n  precision = 1;\n\n  if (spacing < 1) {\n    precision = Math.pow(10, 1 - Math.floor(helpers.log10(spacing)));\n    niceMin = Math.round(niceMin * precision) / precision;\n    niceMax = Math.round(niceMax * precision) / precision;\n  }\n\n  ticks.push(generationOptions.min !== undefined ? generationOptions.min : niceMin);\n\n  for (var j = 1; j < numSpaces; ++j) {\n    ticks.push(Math.round((niceMin + j * spacing) * precision) / precision);\n  }\n\n  ticks.push(generationOptions.max !== undefined ? generationOptions.max : niceMax);\n  return ticks;\n}\n\nmodule.exports = function (Chart) {\n  var noop = helpers.noop;\n  Chart.LinearScaleBase = Scale.extend({\n    getRightValue: function getRightValue(value) {\n      if (typeof value === 'string') {\n        return +value;\n      }\n\n      return Scale.prototype.getRightValue.call(this, value);\n    },\n    handleTickRangeOptions: function handleTickRangeOptions() {\n      var me = this;\n      var opts = me.options;\n      var tickOpts = opts.ticks; // If we are forcing it to begin at 0, but 0 will already be rendered on the chart,\n      // do nothing since that would make the chart weird. If the user really wants a weird chart\n      // axis, they can manually override it\n\n      if (tickOpts.beginAtZero) {\n        var minSign = helpers.sign(me.min);\n        var maxSign = helpers.sign(me.max);\n\n        if (minSign < 0 && maxSign < 0) {\n          // move the top up to 0\n          me.max = 0;\n        } else if (minSign > 0 && maxSign > 0) {\n          // move the bottom down to 0\n          me.min = 0;\n        }\n      }\n\n      var setMin = tickOpts.min !== undefined || tickOpts.suggestedMin !== undefined;\n      var setMax = tickOpts.max !== undefined || tickOpts.suggestedMax !== undefined;\n\n      if (tickOpts.min !== undefined) {\n        me.min = tickOpts.min;\n      } else if (tickOpts.suggestedMin !== undefined) {\n        if (me.min === null) {\n          me.min = tickOpts.suggestedMin;\n        } else {\n          me.min = Math.min(me.min, tickOpts.suggestedMin);\n        }\n      }\n\n      if (tickOpts.max !== undefined) {\n        me.max = tickOpts.max;\n      } else if (tickOpts.suggestedMax !== undefined) {\n        if (me.max === null) {\n          me.max = tickOpts.suggestedMax;\n        } else {\n          me.max = Math.max(me.max, tickOpts.suggestedMax);\n        }\n      }\n\n      if (setMin !== setMax) {\n        // We set the min or the max but not both.\n        // So ensure that our range is good\n        // Inverted or 0 length range can happen when\n        // ticks.min is set, and no datasets are visible\n        if (me.min >= me.max) {\n          if (setMin) {\n            me.max = me.min + 1;\n          } else {\n            me.min = me.max - 1;\n          }\n        }\n      }\n\n      if (me.min === me.max) {\n        me.max++;\n\n        if (!tickOpts.beginAtZero) {\n          me.min--;\n        }\n      }\n    },\n    getTickLimit: noop,\n    handleDirectionalChanges: noop,\n    buildTicks: function buildTicks() {\n      var me = this;\n      var opts = me.options;\n      var tickOpts = opts.ticks; // Figure out what the max number of ticks we can support it is based on the size of\n      // the axis area. For now, we say that the minimum tick spacing in pixels must be 50\n      // We also limit the maximum number of ticks to 11 which gives a nice 10 squares on\n      // the graph. Make sure we always have at least 2 ticks\n\n      var maxTicks = me.getTickLimit();\n      maxTicks = Math.max(2, maxTicks);\n      var numericGeneratorOptions = {\n        maxTicks: maxTicks,\n        min: tickOpts.min,\n        max: tickOpts.max,\n        precision: tickOpts.precision,\n        stepSize: helpers.valueOrDefault(tickOpts.fixedStepSize, tickOpts.stepSize)\n      };\n      var ticks = me.ticks = generateTicks(numericGeneratorOptions, me);\n      me.handleDirectionalChanges(); // At this point, we need to update our max and min given the tick values since we have expanded the\n      // range of the scale\n\n      me.max = helpers.max(ticks);\n      me.min = helpers.min(ticks);\n\n      if (tickOpts.reverse) {\n        ticks.reverse();\n        me.start = me.max;\n        me.end = me.min;\n      } else {\n        me.start = me.min;\n        me.end = me.max;\n      }\n    },\n    convertTicksToLabels: function convertTicksToLabels() {\n      var me = this;\n      me.ticksAsNumbers = me.ticks.slice();\n      me.zeroLineIndex = me.ticks.indexOf(0);\n      Scale.prototype.convertTicksToLabels.call(me);\n    }\n  });\n};","'use strict';\n\nvar Scale = require('../core/core.scale');\n\nvar scaleService = require('../core/core.scaleService');\n\nmodule.exports = function () {\n  // Default config for a category scale\n  var defaultConfig = {\n    position: 'bottom'\n  };\n  var DatasetScale = Scale.extend({\n    /**\n    * Internal function to get the correct labels. If data.xLabels or data.yLabels are defined, use those\n    * else fall back to data.labels\n    * @private\n    */\n    getLabels: function getLabels() {\n      var data = this.chart.data;\n      return this.options.labels || (this.isHorizontal() ? data.xLabels : data.yLabels) || data.labels;\n    },\n    determineDataLimits: function determineDataLimits() {\n      var me = this;\n      var labels = me.getLabels();\n      me.minIndex = 0;\n      me.maxIndex = labels.length - 1;\n      var findIndex;\n\n      if (me.options.ticks.min !== undefined) {\n        // user specified min value\n        findIndex = labels.indexOf(me.options.ticks.min);\n        me.minIndex = findIndex !== -1 ? findIndex : me.minIndex;\n      }\n\n      if (me.options.ticks.max !== undefined) {\n        // user specified max value\n        findIndex = labels.indexOf(me.options.ticks.max);\n        me.maxIndex = findIndex !== -1 ? findIndex : me.maxIndex;\n      }\n\n      me.min = labels[me.minIndex];\n      me.max = labels[me.maxIndex];\n    },\n    buildTicks: function buildTicks() {\n      var me = this;\n      var labels = me.getLabels(); // If we are viewing some subset of labels, slice the original array\n\n      me.ticks = me.minIndex === 0 && me.maxIndex === labels.length - 1 ? labels : labels.slice(me.minIndex, me.maxIndex + 1);\n    },\n    getLabelForIndex: function getLabelForIndex(index, datasetIndex) {\n      var me = this;\n      var data = me.chart.data;\n      var isHorizontal = me.isHorizontal();\n\n      if (data.yLabels && !isHorizontal) {\n        return me.getRightValue(data.datasets[datasetIndex].data[index]);\n      }\n\n      return me.ticks[index - me.minIndex];\n    },\n    // Used to get data value locations.  Value can either be an index or a numerical value\n    getPixelForValue: function getPixelForValue(value, index) {\n      var me = this;\n      var offset = me.options.offset; // 1 is added because we need the length but we have the indexes\n\n      var offsetAmt = Math.max(me.maxIndex + 1 - me.minIndex - (offset ? 0 : 1), 1); // If value is a data object, then index is the index in the data array,\n      // not the index of the scale. We need to change that.\n\n      var valueCategory;\n\n      if (value !== undefined && value !== null) {\n        valueCategory = me.isHorizontal() ? value.x : value.y;\n      }\n\n      if (valueCategory !== undefined || value !== undefined && isNaN(index)) {\n        var labels = me.getLabels();\n        value = valueCategory || value;\n        var idx = labels.indexOf(value);\n        index = idx !== -1 ? idx : index;\n      }\n\n      if (me.isHorizontal()) {\n        var valueWidth = me.width / offsetAmt;\n        var widthOffset = valueWidth * (index - me.minIndex);\n\n        if (offset) {\n          widthOffset += valueWidth / 2;\n        }\n\n        return me.left + Math.round(widthOffset);\n      }\n\n      var valueHeight = me.height / offsetAmt;\n      var heightOffset = valueHeight * (index - me.minIndex);\n\n      if (offset) {\n        heightOffset += valueHeight / 2;\n      }\n\n      return me.top + Math.round(heightOffset);\n    },\n    getPixelForTick: function getPixelForTick(index) {\n      return this.getPixelForValue(this.ticks[index], index + this.minIndex, null);\n    },\n    getValueForPixel: function getValueForPixel(pixel) {\n      var me = this;\n      var offset = me.options.offset;\n      var value;\n      var offsetAmt = Math.max(me._ticks.length - (offset ? 0 : 1), 1);\n      var horz = me.isHorizontal();\n      var valueDimension = (horz ? me.width : me.height) / offsetAmt;\n      pixel -= horz ? me.left : me.top;\n\n      if (offset) {\n        pixel -= valueDimension / 2;\n      }\n\n      if (pixel <= 0) {\n        value = 0;\n      } else {\n        value = Math.round(pixel / valueDimension);\n      }\n\n      return value + me.minIndex;\n    },\n    getBasePixel: function getBasePixel() {\n      return this.bottom;\n    }\n  });\n  scaleService.registerScaleType('category', DatasetScale, defaultConfig);\n};","'use strict';\n\nvar defaults = require('../core/core.defaults');\n\nvar helpers = require('../helpers/index');\n\nvar scaleService = require('../core/core.scaleService');\n\nvar Ticks = require('../core/core.ticks');\n\nmodule.exports = function (Chart) {\n  var defaultConfig = {\n    position: 'left',\n    ticks: {\n      callback: Ticks.formatters.linear\n    }\n  };\n  var LinearScale = Chart.LinearScaleBase.extend({\n    determineDataLimits: function determineDataLimits() {\n      var me = this;\n      var opts = me.options;\n      var chart = me.chart;\n      var data = chart.data;\n      var datasets = data.datasets;\n      var isHorizontal = me.isHorizontal();\n      var DEFAULT_MIN = 0;\n      var DEFAULT_MAX = 1;\n\n      function IDMatches(meta) {\n        return isHorizontal ? meta.xAxisID === me.id : meta.yAxisID === me.id;\n      } // First Calculate the range\n\n\n      me.min = null;\n      me.max = null;\n      var hasStacks = opts.stacked;\n\n      if (hasStacks === undefined) {\n        helpers.each(datasets, function (dataset, datasetIndex) {\n          if (hasStacks) {\n            return;\n          }\n\n          var meta = chart.getDatasetMeta(datasetIndex);\n\n          if (chart.isDatasetVisible(datasetIndex) && IDMatches(meta) && meta.stack !== undefined) {\n            hasStacks = true;\n          }\n        });\n      }\n\n      if (opts.stacked || hasStacks) {\n        var valuesPerStack = {};\n        helpers.each(datasets, function (dataset, datasetIndex) {\n          var meta = chart.getDatasetMeta(datasetIndex);\n          var key = [meta.type, // we have a separate stack for stack=undefined datasets when the opts.stacked is undefined\n          opts.stacked === undefined && meta.stack === undefined ? datasetIndex : '', meta.stack].join('.');\n\n          if (valuesPerStack[key] === undefined) {\n            valuesPerStack[key] = {\n              positiveValues: [],\n              negativeValues: []\n            };\n          } // Store these per type\n\n\n          var positiveValues = valuesPerStack[key].positiveValues;\n          var negativeValues = valuesPerStack[key].negativeValues;\n\n          if (chart.isDatasetVisible(datasetIndex) && IDMatches(meta)) {\n            helpers.each(dataset.data, function (rawValue, index) {\n              var value = +me.getRightValue(rawValue);\n\n              if (isNaN(value) || meta.data[index].hidden) {\n                return;\n              }\n\n              positiveValues[index] = positiveValues[index] || 0;\n              negativeValues[index] = negativeValues[index] || 0;\n\n              if (opts.relativePoints) {\n                positiveValues[index] = 100;\n              } else if (value < 0) {\n                negativeValues[index] += value;\n              } else {\n                positiveValues[index] += value;\n              }\n            });\n          }\n        });\n        helpers.each(valuesPerStack, function (valuesForType) {\n          var values = valuesForType.positiveValues.concat(valuesForType.negativeValues);\n          var minVal = helpers.min(values);\n          var maxVal = helpers.max(values);\n          me.min = me.min === null ? minVal : Math.min(me.min, minVal);\n          me.max = me.max === null ? maxVal : Math.max(me.max, maxVal);\n        });\n      } else {\n        helpers.each(datasets, function (dataset, datasetIndex) {\n          var meta = chart.getDatasetMeta(datasetIndex);\n\n          if (chart.isDatasetVisible(datasetIndex) && IDMatches(meta)) {\n            helpers.each(dataset.data, function (rawValue, index) {\n              var value = +me.getRightValue(rawValue);\n\n              if (isNaN(value) || meta.data[index].hidden) {\n                return;\n              }\n\n              if (me.min === null) {\n                me.min = value;\n              } else if (value < me.min) {\n                me.min = value;\n              }\n\n              if (me.max === null) {\n                me.max = value;\n              } else if (value > me.max) {\n                me.max = value;\n              }\n            });\n          }\n        });\n      }\n\n      me.min = isFinite(me.min) && !isNaN(me.min) ? me.min : DEFAULT_MIN;\n      me.max = isFinite(me.max) && !isNaN(me.max) ? me.max : DEFAULT_MAX; // Common base implementation to handle ticks.min, ticks.max, ticks.beginAtZero\n\n      this.handleTickRangeOptions();\n    },\n    getTickLimit: function getTickLimit() {\n      var maxTicks;\n      var me = this;\n      var tickOpts = me.options.ticks;\n\n      if (me.isHorizontal()) {\n        maxTicks = Math.min(tickOpts.maxTicksLimit ? tickOpts.maxTicksLimit : 11, Math.ceil(me.width / 50));\n      } else {\n        // The factor of 2 used to scale the font size has been experimentally determined.\n        var tickFontSize = helpers.valueOrDefault(tickOpts.fontSize, defaults.global.defaultFontSize);\n        maxTicks = Math.min(tickOpts.maxTicksLimit ? tickOpts.maxTicksLimit : 11, Math.ceil(me.height / (2 * tickFontSize)));\n      }\n\n      return maxTicks;\n    },\n    // Called after the ticks are built. We need\n    handleDirectionalChanges: function handleDirectionalChanges() {\n      if (!this.isHorizontal()) {\n        // We are in a vertical orientation. The top value is the highest. So reverse the array\n        this.ticks.reverse();\n      }\n    },\n    getLabelForIndex: function getLabelForIndex(index, datasetIndex) {\n      return +this.getRightValue(this.chart.data.datasets[datasetIndex].data[index]);\n    },\n    // Utils\n    getPixelForValue: function getPixelForValue(value) {\n      // This must be called after fit has been run so that\n      // this.left, this.top, this.right, and this.bottom have been defined\n      var me = this;\n      var start = me.start;\n      var rightValue = +me.getRightValue(value);\n      var pixel;\n      var range = me.end - start;\n\n      if (me.isHorizontal()) {\n        pixel = me.left + me.width / range * (rightValue - start);\n      } else {\n        pixel = me.bottom - me.height / range * (rightValue - start);\n      }\n\n      return pixel;\n    },\n    getValueForPixel: function getValueForPixel(pixel) {\n      var me = this;\n      var isHorizontal = me.isHorizontal();\n      var innerDimension = isHorizontal ? me.width : me.height;\n      var offset = (isHorizontal ? pixel - me.left : me.bottom - pixel) / innerDimension;\n      return me.start + (me.end - me.start) * offset;\n    },\n    getPixelForTick: function getPixelForTick(index) {\n      return this.getPixelForValue(this.ticksAsNumbers[index]);\n    }\n  });\n  scaleService.registerScaleType('linear', LinearScale, defaultConfig);\n};","'use strict';\n\nvar helpers = require('../helpers/index');\n\nvar Scale = require('../core/core.scale');\n\nvar scaleService = require('../core/core.scaleService');\n\nvar Ticks = require('../core/core.ticks');\n/**\n * Generate a set of logarithmic ticks\n * @param generationOptions the options used to generate the ticks\n * @param dataRange the range of the data\n * @returns {Array<Number>} array of tick values\n */\n\n\nfunction generateTicks(generationOptions, dataRange) {\n  var ticks = [];\n  var valueOrDefault = helpers.valueOrDefault; // Figure out what the max number of ticks we can support it is based on the size of\n  // the axis area. For now, we say that the minimum tick spacing in pixels must be 50\n  // We also limit the maximum number of ticks to 11 which gives a nice 10 squares on\n  // the graph\n\n  var tickVal = valueOrDefault(generationOptions.min, Math.pow(10, Math.floor(helpers.log10(dataRange.min))));\n  var endExp = Math.floor(helpers.log10(dataRange.max));\n  var endSignificand = Math.ceil(dataRange.max / Math.pow(10, endExp));\n  var exp, significand;\n\n  if (tickVal === 0) {\n    exp = Math.floor(helpers.log10(dataRange.minNotZero));\n    significand = Math.floor(dataRange.minNotZero / Math.pow(10, exp));\n    ticks.push(tickVal);\n    tickVal = significand * Math.pow(10, exp);\n  } else {\n    exp = Math.floor(helpers.log10(tickVal));\n    significand = Math.floor(tickVal / Math.pow(10, exp));\n  }\n\n  var precision = exp < 0 ? Math.pow(10, Math.abs(exp)) : 1;\n\n  do {\n    ticks.push(tickVal);\n    ++significand;\n\n    if (significand === 10) {\n      significand = 1;\n      ++exp;\n      precision = exp >= 0 ? 1 : precision;\n    }\n\n    tickVal = Math.round(significand * Math.pow(10, exp) * precision) / precision;\n  } while (exp < endExp || exp === endExp && significand < endSignificand);\n\n  var lastTick = valueOrDefault(generationOptions.max, tickVal);\n  ticks.push(lastTick);\n  return ticks;\n}\n\nmodule.exports = function (Chart) {\n  var defaultConfig = {\n    position: 'left',\n    // label settings\n    ticks: {\n      callback: Ticks.formatters.logarithmic\n    }\n  };\n  var LogarithmicScale = Scale.extend({\n    determineDataLimits: function determineDataLimits() {\n      var me = this;\n      var opts = me.options;\n      var chart = me.chart;\n      var data = chart.data;\n      var datasets = data.datasets;\n      var isHorizontal = me.isHorizontal();\n\n      function IDMatches(meta) {\n        return isHorizontal ? meta.xAxisID === me.id : meta.yAxisID === me.id;\n      } // Calculate Range\n\n\n      me.min = null;\n      me.max = null;\n      me.minNotZero = null;\n      var hasStacks = opts.stacked;\n\n      if (hasStacks === undefined) {\n        helpers.each(datasets, function (dataset, datasetIndex) {\n          if (hasStacks) {\n            return;\n          }\n\n          var meta = chart.getDatasetMeta(datasetIndex);\n\n          if (chart.isDatasetVisible(datasetIndex) && IDMatches(meta) && meta.stack !== undefined) {\n            hasStacks = true;\n          }\n        });\n      }\n\n      if (opts.stacked || hasStacks) {\n        var valuesPerStack = {};\n        helpers.each(datasets, function (dataset, datasetIndex) {\n          var meta = chart.getDatasetMeta(datasetIndex);\n          var key = [meta.type, // we have a separate stack for stack=undefined datasets when the opts.stacked is undefined\n          opts.stacked === undefined && meta.stack === undefined ? datasetIndex : '', meta.stack].join('.');\n\n          if (chart.isDatasetVisible(datasetIndex) && IDMatches(meta)) {\n            if (valuesPerStack[key] === undefined) {\n              valuesPerStack[key] = [];\n            }\n\n            helpers.each(dataset.data, function (rawValue, index) {\n              var values = valuesPerStack[key];\n              var value = +me.getRightValue(rawValue); // invalid, hidden and negative values are ignored\n\n              if (isNaN(value) || meta.data[index].hidden || value < 0) {\n                return;\n              }\n\n              values[index] = values[index] || 0;\n              values[index] += value;\n            });\n          }\n        });\n        helpers.each(valuesPerStack, function (valuesForType) {\n          if (valuesForType.length > 0) {\n            var minVal = helpers.min(valuesForType);\n            var maxVal = helpers.max(valuesForType);\n            me.min = me.min === null ? minVal : Math.min(me.min, minVal);\n            me.max = me.max === null ? maxVal : Math.max(me.max, maxVal);\n          }\n        });\n      } else {\n        helpers.each(datasets, function (dataset, datasetIndex) {\n          var meta = chart.getDatasetMeta(datasetIndex);\n\n          if (chart.isDatasetVisible(datasetIndex) && IDMatches(meta)) {\n            helpers.each(dataset.data, function (rawValue, index) {\n              var value = +me.getRightValue(rawValue); // invalid, hidden and negative values are ignored\n\n              if (isNaN(value) || meta.data[index].hidden || value < 0) {\n                return;\n              }\n\n              if (me.min === null) {\n                me.min = value;\n              } else if (value < me.min) {\n                me.min = value;\n              }\n\n              if (me.max === null) {\n                me.max = value;\n              } else if (value > me.max) {\n                me.max = value;\n              }\n\n              if (value !== 0 && (me.minNotZero === null || value < me.minNotZero)) {\n                me.minNotZero = value;\n              }\n            });\n          }\n        });\n      } // Common base implementation to handle ticks.min, ticks.max\n\n\n      this.handleTickRangeOptions();\n    },\n    handleTickRangeOptions: function handleTickRangeOptions() {\n      var me = this;\n      var opts = me.options;\n      var tickOpts = opts.ticks;\n      var valueOrDefault = helpers.valueOrDefault;\n      var DEFAULT_MIN = 1;\n      var DEFAULT_MAX = 10;\n      me.min = valueOrDefault(tickOpts.min, me.min);\n      me.max = valueOrDefault(tickOpts.max, me.max);\n\n      if (me.min === me.max) {\n        if (me.min !== 0 && me.min !== null) {\n          me.min = Math.pow(10, Math.floor(helpers.log10(me.min)) - 1);\n          me.max = Math.pow(10, Math.floor(helpers.log10(me.max)) + 1);\n        } else {\n          me.min = DEFAULT_MIN;\n          me.max = DEFAULT_MAX;\n        }\n      }\n\n      if (me.min === null) {\n        me.min = Math.pow(10, Math.floor(helpers.log10(me.max)) - 1);\n      }\n\n      if (me.max === null) {\n        me.max = me.min !== 0 ? Math.pow(10, Math.floor(helpers.log10(me.min)) + 1) : DEFAULT_MAX;\n      }\n\n      if (me.minNotZero === null) {\n        if (me.min > 0) {\n          me.minNotZero = me.min;\n        } else if (me.max < 1) {\n          me.minNotZero = Math.pow(10, Math.floor(helpers.log10(me.max)));\n        } else {\n          me.minNotZero = DEFAULT_MIN;\n        }\n      }\n    },\n    buildTicks: function buildTicks() {\n      var me = this;\n      var opts = me.options;\n      var tickOpts = opts.ticks;\n      var reverse = !me.isHorizontal();\n      var generationOptions = {\n        min: tickOpts.min,\n        max: tickOpts.max\n      };\n      var ticks = me.ticks = generateTicks(generationOptions, me); // At this point, we need to update our max and min given the tick values since we have expanded the\n      // range of the scale\n\n      me.max = helpers.max(ticks);\n      me.min = helpers.min(ticks);\n\n      if (tickOpts.reverse) {\n        reverse = !reverse;\n        me.start = me.max;\n        me.end = me.min;\n      } else {\n        me.start = me.min;\n        me.end = me.max;\n      }\n\n      if (reverse) {\n        ticks.reverse();\n      }\n    },\n    convertTicksToLabels: function convertTicksToLabels() {\n      this.tickValues = this.ticks.slice();\n      Scale.prototype.convertTicksToLabels.call(this);\n    },\n    // Get the correct tooltip label\n    getLabelForIndex: function getLabelForIndex(index, datasetIndex) {\n      return +this.getRightValue(this.chart.data.datasets[datasetIndex].data[index]);\n    },\n    getPixelForTick: function getPixelForTick(index) {\n      return this.getPixelForValue(this.tickValues[index]);\n    },\n\n    /**\n     * Returns the value of the first tick.\n     * @param {Number} value - The minimum not zero value.\n     * @return {Number} The first tick value.\n     * @private\n     */\n    _getFirstTickValue: function _getFirstTickValue(value) {\n      var exp = Math.floor(helpers.log10(value));\n      var significand = Math.floor(value / Math.pow(10, exp));\n      return significand * Math.pow(10, exp);\n    },\n    getPixelForValue: function getPixelForValue(value) {\n      var me = this;\n      var reverse = me.options.ticks.reverse;\n      var log10 = helpers.log10;\n\n      var firstTickValue = me._getFirstTickValue(me.minNotZero);\n\n      var offset = 0;\n      var innerDimension, pixel, start, end, sign;\n      value = +me.getRightValue(value);\n\n      if (reverse) {\n        start = me.end;\n        end = me.start;\n        sign = -1;\n      } else {\n        start = me.start;\n        end = me.end;\n        sign = 1;\n      }\n\n      if (me.isHorizontal()) {\n        innerDimension = me.width;\n        pixel = reverse ? me.right : me.left;\n      } else {\n        innerDimension = me.height;\n        sign *= -1; // invert, since the upper-left corner of the canvas is at pixel (0, 0)\n\n        pixel = reverse ? me.top : me.bottom;\n      }\n\n      if (value !== start) {\n        if (start === 0) {\n          // include zero tick\n          offset = helpers.getValueOrDefault(me.options.ticks.fontSize, Chart.defaults.global.defaultFontSize);\n          innerDimension -= offset;\n          start = firstTickValue;\n        }\n\n        if (value !== 0) {\n          offset += innerDimension / (log10(end) - log10(start)) * (log10(value) - log10(start));\n        }\n\n        pixel += sign * offset;\n      }\n\n      return pixel;\n    },\n    getValueForPixel: function getValueForPixel(pixel) {\n      var me = this;\n      var reverse = me.options.ticks.reverse;\n      var log10 = helpers.log10;\n\n      var firstTickValue = me._getFirstTickValue(me.minNotZero);\n\n      var innerDimension, start, end, value;\n\n      if (reverse) {\n        start = me.end;\n        end = me.start;\n      } else {\n        start = me.start;\n        end = me.end;\n      }\n\n      if (me.isHorizontal()) {\n        innerDimension = me.width;\n        value = reverse ? me.right - pixel : pixel - me.left;\n      } else {\n        innerDimension = me.height;\n        value = reverse ? pixel - me.top : me.bottom - pixel;\n      }\n\n      if (value !== start) {\n        if (start === 0) {\n          // include zero tick\n          var offset = helpers.getValueOrDefault(me.options.ticks.fontSize, Chart.defaults.global.defaultFontSize);\n          value -= offset;\n          innerDimension -= offset;\n          start = firstTickValue;\n        }\n\n        value *= log10(end) - log10(start);\n        value /= innerDimension;\n        value = Math.pow(10, log10(start) + value);\n      }\n\n      return value;\n    }\n  });\n  scaleService.registerScaleType('logarithmic', LogarithmicScale, defaultConfig);\n};","'use strict';\n\nvar defaults = require('../core/core.defaults');\n\nvar helpers = require('../helpers/index');\n\nvar scaleService = require('../core/core.scaleService');\n\nvar Ticks = require('../core/core.ticks');\n\nmodule.exports = function (Chart) {\n  var globalDefaults = defaults.global;\n  var defaultConfig = {\n    display: true,\n    // Boolean - Whether to animate scaling the chart from the centre\n    animate: true,\n    position: 'chartArea',\n    angleLines: {\n      display: true,\n      color: 'rgba(0, 0, 0, 0.1)',\n      lineWidth: 1\n    },\n    gridLines: {\n      circular: false\n    },\n    // label settings\n    ticks: {\n      // Boolean - Show a backdrop to the scale label\n      showLabelBackdrop: true,\n      // String - The colour of the label backdrop\n      backdropColor: 'rgba(255,255,255,0.75)',\n      // Number - The backdrop padding above & below the label in pixels\n      backdropPaddingY: 2,\n      // Number - The backdrop padding to the side of the label in pixels\n      backdropPaddingX: 2,\n      callback: Ticks.formatters.linear\n    },\n    pointLabels: {\n      // Boolean - if true, show point labels\n      display: true,\n      // Number - Point label font size in pixels\n      fontSize: 10,\n      // Function - Used to convert point labels\n      callback: function callback(label) {\n        return label;\n      }\n    }\n  };\n\n  function getValueCount(scale) {\n    var opts = scale.options;\n    return opts.angleLines.display || opts.pointLabels.display ? scale.chart.data.labels.length : 0;\n  }\n\n  function getPointLabelFontOptions(scale) {\n    var pointLabelOptions = scale.options.pointLabels;\n    var fontSize = helpers.valueOrDefault(pointLabelOptions.fontSize, globalDefaults.defaultFontSize);\n    var fontStyle = helpers.valueOrDefault(pointLabelOptions.fontStyle, globalDefaults.defaultFontStyle);\n    var fontFamily = helpers.valueOrDefault(pointLabelOptions.fontFamily, globalDefaults.defaultFontFamily);\n    var font = helpers.fontString(fontSize, fontStyle, fontFamily);\n    return {\n      size: fontSize,\n      style: fontStyle,\n      family: fontFamily,\n      font: font\n    };\n  }\n\n  function measureLabelSize(ctx, fontSize, label) {\n    if (helpers.isArray(label)) {\n      return {\n        w: helpers.longestText(ctx, ctx.font, label),\n        h: label.length * fontSize + (label.length - 1) * 1.5 * fontSize\n      };\n    }\n\n    return {\n      w: ctx.measureText(label).width,\n      h: fontSize\n    };\n  }\n\n  function determineLimits(angle, pos, size, min, max) {\n    if (angle === min || angle === max) {\n      return {\n        start: pos - size / 2,\n        end: pos + size / 2\n      };\n    } else if (angle < min || angle > max) {\n      return {\n        start: pos - size - 5,\n        end: pos\n      };\n    }\n\n    return {\n      start: pos,\n      end: pos + size + 5\n    };\n  }\n  /**\n   * Helper function to fit a radial linear scale with point labels\n   */\n\n\n  function fitWithPointLabels(scale) {\n    /*\n     * Right, this is really confusing and there is a lot of maths going on here\n     * The gist of the problem is here: https://gist.github.com/nnnick/696cc9c55f4b0beb8fe9\n     *\n     * Reaction: https://dl.dropboxusercontent.com/u/34601363/toomuchscience.gif\n     *\n     * Solution:\n     *\n     * We assume the radius of the polygon is half the size of the canvas at first\n     * at each index we check if the text overlaps.\n     *\n     * Where it does, we store that angle and that index.\n     *\n     * After finding the largest index and angle we calculate how much we need to remove\n     * from the shape radius to move the point inwards by that x.\n     *\n     * We average the left and right distances to get the maximum shape radius that can fit in the box\n     * along with labels.\n     *\n     * Once we have that, we can find the centre point for the chart, by taking the x text protrusion\n     * on each side, removing that from the size, halving it and adding the left x protrusion width.\n     *\n     * This will mean we have a shape fitted to the canvas, as large as it can be with the labels\n     * and position it in the most space efficient manner\n     *\n     * https://dl.dropboxusercontent.com/u/34601363/yeahscience.gif\n     */\n    var plFont = getPointLabelFontOptions(scale); // Get maximum radius of the polygon. Either half the height (minus the text width) or half the width.\n    // Use this to calculate the offset + change. - Make sure L/R protrusion is at least 0 to stop issues with centre points\n\n    var largestPossibleRadius = Math.min(scale.height / 2, scale.width / 2);\n    var furthestLimits = {\n      r: scale.width,\n      l: 0,\n      t: scale.height,\n      b: 0\n    };\n    var furthestAngles = {};\n    var i, textSize, pointPosition;\n    scale.ctx.font = plFont.font;\n    scale._pointLabelSizes = [];\n    var valueCount = getValueCount(scale);\n\n    for (i = 0; i < valueCount; i++) {\n      pointPosition = scale.getPointPosition(i, largestPossibleRadius);\n      textSize = measureLabelSize(scale.ctx, plFont.size, scale.pointLabels[i] || '');\n      scale._pointLabelSizes[i] = textSize; // Add quarter circle to make degree 0 mean top of circle\n\n      var angleRadians = scale.getIndexAngle(i);\n      var angle = helpers.toDegrees(angleRadians) % 360;\n      var hLimits = determineLimits(angle, pointPosition.x, textSize.w, 0, 180);\n      var vLimits = determineLimits(angle, pointPosition.y, textSize.h, 90, 270);\n\n      if (hLimits.start < furthestLimits.l) {\n        furthestLimits.l = hLimits.start;\n        furthestAngles.l = angleRadians;\n      }\n\n      if (hLimits.end > furthestLimits.r) {\n        furthestLimits.r = hLimits.end;\n        furthestAngles.r = angleRadians;\n      }\n\n      if (vLimits.start < furthestLimits.t) {\n        furthestLimits.t = vLimits.start;\n        furthestAngles.t = angleRadians;\n      }\n\n      if (vLimits.end > furthestLimits.b) {\n        furthestLimits.b = vLimits.end;\n        furthestAngles.b = angleRadians;\n      }\n    }\n\n    scale.setReductions(largestPossibleRadius, furthestLimits, furthestAngles);\n  }\n  /**\n   * Helper function to fit a radial linear scale with no point labels\n   */\n\n\n  function _fit(scale) {\n    var largestPossibleRadius = Math.min(scale.height / 2, scale.width / 2);\n    scale.drawingArea = Math.round(largestPossibleRadius);\n    scale.setCenterPoint(0, 0, 0, 0);\n  }\n\n  function getTextAlignForAngle(angle) {\n    if (angle === 0 || angle === 180) {\n      return 'center';\n    } else if (angle < 180) {\n      return 'left';\n    }\n\n    return 'right';\n  }\n\n  function fillText(ctx, text, position, fontSize) {\n    if (helpers.isArray(text)) {\n      var y = position.y;\n      var spacing = 1.5 * fontSize;\n\n      for (var i = 0; i < text.length; ++i) {\n        ctx.fillText(text[i], position.x, y);\n        y += spacing;\n      }\n    } else {\n      ctx.fillText(text, position.x, position.y);\n    }\n  }\n\n  function adjustPointPositionForLabelHeight(angle, textSize, position) {\n    if (angle === 90 || angle === 270) {\n      position.y -= textSize.h / 2;\n    } else if (angle > 270 || angle < 90) {\n      position.y -= textSize.h;\n    }\n  }\n\n  function drawPointLabels(scale) {\n    var ctx = scale.ctx;\n    var opts = scale.options;\n    var angleLineOpts = opts.angleLines;\n    var pointLabelOpts = opts.pointLabels;\n    ctx.lineWidth = angleLineOpts.lineWidth;\n    ctx.strokeStyle = angleLineOpts.color;\n    var outerDistance = scale.getDistanceFromCenterForValue(opts.ticks.reverse ? scale.min : scale.max); // Point Label Font\n\n    var plFont = getPointLabelFontOptions(scale);\n    ctx.textBaseline = 'top';\n\n    for (var i = getValueCount(scale) - 1; i >= 0; i--) {\n      if (angleLineOpts.display) {\n        var outerPosition = scale.getPointPosition(i, outerDistance);\n        ctx.beginPath();\n        ctx.moveTo(scale.xCenter, scale.yCenter);\n        ctx.lineTo(outerPosition.x, outerPosition.y);\n        ctx.stroke();\n        ctx.closePath();\n      }\n\n      if (pointLabelOpts.display) {\n        // Extra 3px out for some label spacing\n        var pointLabelPosition = scale.getPointPosition(i, outerDistance + 5); // Keep this in loop since we may support array properties here\n\n        var pointLabelFontColor = helpers.valueAtIndexOrDefault(pointLabelOpts.fontColor, i, globalDefaults.defaultFontColor);\n        ctx.font = plFont.font;\n        ctx.fillStyle = pointLabelFontColor;\n        var angleRadians = scale.getIndexAngle(i);\n        var angle = helpers.toDegrees(angleRadians);\n        ctx.textAlign = getTextAlignForAngle(angle);\n        adjustPointPositionForLabelHeight(angle, scale._pointLabelSizes[i], pointLabelPosition);\n        fillText(ctx, scale.pointLabels[i] || '', pointLabelPosition, plFont.size);\n      }\n    }\n  }\n\n  function drawRadiusLine(scale, gridLineOpts, radius, index) {\n    var ctx = scale.ctx;\n    ctx.strokeStyle = helpers.valueAtIndexOrDefault(gridLineOpts.color, index - 1);\n    ctx.lineWidth = helpers.valueAtIndexOrDefault(gridLineOpts.lineWidth, index - 1);\n\n    if (scale.options.gridLines.circular) {\n      // Draw circular arcs between the points\n      ctx.beginPath();\n      ctx.arc(scale.xCenter, scale.yCenter, radius, 0, Math.PI * 2);\n      ctx.closePath();\n      ctx.stroke();\n    } else {\n      // Draw straight lines connecting each index\n      var valueCount = getValueCount(scale);\n\n      if (valueCount === 0) {\n        return;\n      }\n\n      ctx.beginPath();\n      var pointPosition = scale.getPointPosition(0, radius);\n      ctx.moveTo(pointPosition.x, pointPosition.y);\n\n      for (var i = 1; i < valueCount; i++) {\n        pointPosition = scale.getPointPosition(i, radius);\n        ctx.lineTo(pointPosition.x, pointPosition.y);\n      }\n\n      ctx.closePath();\n      ctx.stroke();\n    }\n  }\n\n  function numberOrZero(param) {\n    return helpers.isNumber(param) ? param : 0;\n  }\n\n  var LinearRadialScale = Chart.LinearScaleBase.extend({\n    setDimensions: function setDimensions() {\n      var me = this;\n      var opts = me.options;\n      var tickOpts = opts.ticks; // Set the unconstrained dimension before label rotation\n\n      me.width = me.maxWidth;\n      me.height = me.maxHeight;\n      me.xCenter = Math.round(me.width / 2);\n      me.yCenter = Math.round(me.height / 2);\n      var minSize = helpers.min([me.height, me.width]);\n      var tickFontSize = helpers.valueOrDefault(tickOpts.fontSize, globalDefaults.defaultFontSize);\n      me.drawingArea = opts.display ? minSize / 2 - (tickFontSize / 2 + tickOpts.backdropPaddingY) : minSize / 2;\n    },\n    determineDataLimits: function determineDataLimits() {\n      var me = this;\n      var chart = me.chart;\n      var min = Number.POSITIVE_INFINITY;\n      var max = Number.NEGATIVE_INFINITY;\n      helpers.each(chart.data.datasets, function (dataset, datasetIndex) {\n        if (chart.isDatasetVisible(datasetIndex)) {\n          var meta = chart.getDatasetMeta(datasetIndex);\n          helpers.each(dataset.data, function (rawValue, index) {\n            var value = +me.getRightValue(rawValue);\n\n            if (isNaN(value) || meta.data[index].hidden) {\n              return;\n            }\n\n            min = Math.min(value, min);\n            max = Math.max(value, max);\n          });\n        }\n      });\n      me.min = min === Number.POSITIVE_INFINITY ? 0 : min;\n      me.max = max === Number.NEGATIVE_INFINITY ? 0 : max; // Common base implementation to handle ticks.min, ticks.max, ticks.beginAtZero\n\n      me.handleTickRangeOptions();\n    },\n    getTickLimit: function getTickLimit() {\n      var tickOpts = this.options.ticks;\n      var tickFontSize = helpers.valueOrDefault(tickOpts.fontSize, globalDefaults.defaultFontSize);\n      return Math.min(tickOpts.maxTicksLimit ? tickOpts.maxTicksLimit : 11, Math.ceil(this.drawingArea / (1.5 * tickFontSize)));\n    },\n    convertTicksToLabels: function convertTicksToLabels() {\n      var me = this;\n      Chart.LinearScaleBase.prototype.convertTicksToLabels.call(me); // Point labels\n\n      me.pointLabels = me.chart.data.labels.map(me.options.pointLabels.callback, me);\n    },\n    getLabelForIndex: function getLabelForIndex(index, datasetIndex) {\n      return +this.getRightValue(this.chart.data.datasets[datasetIndex].data[index]);\n    },\n    fit: function fit() {\n      if (this.options.pointLabels.display) {\n        fitWithPointLabels(this);\n      } else {\n        _fit(this);\n      }\n    },\n\n    /**\n     * Set radius reductions and determine new radius and center point\n     * @private\n     */\n    setReductions: function setReductions(largestPossibleRadius, furthestLimits, furthestAngles) {\n      var me = this;\n      var radiusReductionLeft = furthestLimits.l / Math.sin(furthestAngles.l);\n      var radiusReductionRight = Math.max(furthestLimits.r - me.width, 0) / Math.sin(furthestAngles.r);\n      var radiusReductionTop = -furthestLimits.t / Math.cos(furthestAngles.t);\n      var radiusReductionBottom = -Math.max(furthestLimits.b - me.height, 0) / Math.cos(furthestAngles.b);\n      radiusReductionLeft = numberOrZero(radiusReductionLeft);\n      radiusReductionRight = numberOrZero(radiusReductionRight);\n      radiusReductionTop = numberOrZero(radiusReductionTop);\n      radiusReductionBottom = numberOrZero(radiusReductionBottom);\n      me.drawingArea = Math.min(Math.round(largestPossibleRadius - (radiusReductionLeft + radiusReductionRight) / 2), Math.round(largestPossibleRadius - (radiusReductionTop + radiusReductionBottom) / 2));\n      me.setCenterPoint(radiusReductionLeft, radiusReductionRight, radiusReductionTop, radiusReductionBottom);\n    },\n    setCenterPoint: function setCenterPoint(leftMovement, rightMovement, topMovement, bottomMovement) {\n      var me = this;\n      var maxRight = me.width - rightMovement - me.drawingArea;\n      var maxLeft = leftMovement + me.drawingArea;\n      var maxTop = topMovement + me.drawingArea;\n      var maxBottom = me.height - bottomMovement - me.drawingArea;\n      me.xCenter = Math.round((maxLeft + maxRight) / 2 + me.left);\n      me.yCenter = Math.round((maxTop + maxBottom) / 2 + me.top);\n    },\n    getIndexAngle: function getIndexAngle(index) {\n      var angleMultiplier = Math.PI * 2 / getValueCount(this);\n      var startAngle = this.chart.options && this.chart.options.startAngle ? this.chart.options.startAngle : 0;\n      var startAngleRadians = startAngle * Math.PI * 2 / 360; // Start from the top instead of right, so remove a quarter of the circle\n\n      return index * angleMultiplier + startAngleRadians;\n    },\n    getDistanceFromCenterForValue: function getDistanceFromCenterForValue(value) {\n      var me = this;\n\n      if (value === null) {\n        return 0; // null always in center\n      } // Take into account half font size + the yPadding of the top value\n\n\n      var scalingFactor = me.drawingArea / (me.max - me.min);\n\n      if (me.options.ticks.reverse) {\n        return (me.max - value) * scalingFactor;\n      }\n\n      return (value - me.min) * scalingFactor;\n    },\n    getPointPosition: function getPointPosition(index, distanceFromCenter) {\n      var me = this;\n      var thisAngle = me.getIndexAngle(index) - Math.PI / 2;\n      return {\n        x: Math.round(Math.cos(thisAngle) * distanceFromCenter) + me.xCenter,\n        y: Math.round(Math.sin(thisAngle) * distanceFromCenter) + me.yCenter\n      };\n    },\n    getPointPositionForValue: function getPointPositionForValue(index, value) {\n      return this.getPointPosition(index, this.getDistanceFromCenterForValue(value));\n    },\n    getBasePosition: function getBasePosition() {\n      var me = this;\n      var min = me.min;\n      var max = me.max;\n      return me.getPointPositionForValue(0, me.beginAtZero ? 0 : min < 0 && max < 0 ? max : min > 0 && max > 0 ? min : 0);\n    },\n    draw: function draw() {\n      var me = this;\n      var opts = me.options;\n      var gridLineOpts = opts.gridLines;\n      var tickOpts = opts.ticks;\n      var valueOrDefault = helpers.valueOrDefault;\n\n      if (opts.display) {\n        var ctx = me.ctx;\n        var startAngle = this.getIndexAngle(0); // Tick Font\n\n        var tickFontSize = valueOrDefault(tickOpts.fontSize, globalDefaults.defaultFontSize);\n        var tickFontStyle = valueOrDefault(tickOpts.fontStyle, globalDefaults.defaultFontStyle);\n        var tickFontFamily = valueOrDefault(tickOpts.fontFamily, globalDefaults.defaultFontFamily);\n        var tickLabelFont = helpers.fontString(tickFontSize, tickFontStyle, tickFontFamily);\n        helpers.each(me.ticks, function (label, index) {\n          // Don't draw a centre value (if it is minimum)\n          if (index > 0 || tickOpts.reverse) {\n            var yCenterOffset = me.getDistanceFromCenterForValue(me.ticksAsNumbers[index]); // Draw circular lines around the scale\n\n            if (gridLineOpts.display && index !== 0) {\n              drawRadiusLine(me, gridLineOpts, yCenterOffset, index);\n            }\n\n            if (tickOpts.display) {\n              var tickFontColor = valueOrDefault(tickOpts.fontColor, globalDefaults.defaultFontColor);\n              ctx.font = tickLabelFont;\n              ctx.save();\n              ctx.translate(me.xCenter, me.yCenter);\n              ctx.rotate(startAngle);\n\n              if (tickOpts.showLabelBackdrop) {\n                var labelWidth = ctx.measureText(label).width;\n                ctx.fillStyle = tickOpts.backdropColor;\n                ctx.fillRect(-labelWidth / 2 - tickOpts.backdropPaddingX, -yCenterOffset - tickFontSize / 2 - tickOpts.backdropPaddingY, labelWidth + tickOpts.backdropPaddingX * 2, tickFontSize + tickOpts.backdropPaddingY * 2);\n              }\n\n              ctx.textAlign = 'center';\n              ctx.textBaseline = 'middle';\n              ctx.fillStyle = tickFontColor;\n              ctx.fillText(label, 0, -yCenterOffset);\n              ctx.restore();\n            }\n          }\n        });\n\n        if (opts.angleLines.display || opts.pointLabels.display) {\n          drawPointLabels(me);\n        }\n      }\n    }\n  });\n  scaleService.registerScaleType('radialLinear', LinearRadialScale, defaultConfig);\n};","/* global window: false */\n'use strict';\n\nvar moment = require('moment');\n\nmoment = typeof moment === 'function' ? moment : window.moment;\n\nvar defaults = require('../core/core.defaults');\n\nvar helpers = require('../helpers/index');\n\nvar Scale = require('../core/core.scale');\n\nvar scaleService = require('../core/core.scaleService'); // Integer constants are from the ES6 spec.\n\n\nvar MIN_INTEGER = Number.MIN_SAFE_INTEGER || -9007199254740991;\nvar MAX_INTEGER = Number.MAX_SAFE_INTEGER || 9007199254740991;\nvar INTERVALS = {\n  millisecond: {\n    common: true,\n    size: 1,\n    steps: [1, 2, 5, 10, 20, 50, 100, 250, 500]\n  },\n  second: {\n    common: true,\n    size: 1000,\n    steps: [1, 2, 5, 10, 15, 30]\n  },\n  minute: {\n    common: true,\n    size: 60000,\n    steps: [1, 2, 5, 10, 15, 30]\n  },\n  hour: {\n    common: true,\n    size: 3600000,\n    steps: [1, 2, 3, 6, 12]\n  },\n  day: {\n    common: true,\n    size: 86400000,\n    steps: [1, 2, 5]\n  },\n  week: {\n    common: false,\n    size: 604800000,\n    steps: [1, 2, 3, 4]\n  },\n  month: {\n    common: true,\n    size: 2.628e9,\n    steps: [1, 2, 3]\n  },\n  quarter: {\n    common: false,\n    size: 7.884e9,\n    steps: [1, 2, 3, 4]\n  },\n  year: {\n    common: true,\n    size: 3.154e10\n  }\n};\nvar UNITS = Object.keys(INTERVALS);\n\nfunction sorter(a, b) {\n  return a - b;\n}\n\nfunction arrayUnique(items) {\n  var hash = {};\n  var out = [];\n  var i, ilen, item;\n\n  for (i = 0, ilen = items.length; i < ilen; ++i) {\n    item = items[i];\n\n    if (!hash[item]) {\n      hash[item] = true;\n      out.push(item);\n    }\n  }\n\n  return out;\n}\n/**\n * Returns an array of {time, pos} objects used to interpolate a specific `time` or position\n * (`pos`) on the scale, by searching entries before and after the requested value. `pos` is\n * a decimal between 0 and 1: 0 being the start of the scale (left or top) and 1 the other\n * extremity (left + width or top + height). Note that it would be more optimized to directly\n * store pre-computed pixels, but the scale dimensions are not guaranteed at the time we need\n * to create the lookup table. The table ALWAYS contains at least two items: min and max.\n *\n * @param {Number[]} timestamps - timestamps sorted from lowest to highest.\n * @param {String} distribution - If 'linear', timestamps will be spread linearly along the min\n * and max range, so basically, the table will contains only two items: {min, 0} and {max, 1}.\n * If 'series', timestamps will be positioned at the same distance from each other. In this\n * case, only timestamps that break the time linearity are registered, meaning that in the\n * best case, all timestamps are linear, the table contains only min and max.\n */\n\n\nfunction buildLookupTable(timestamps, min, max, distribution) {\n  if (distribution === 'linear' || !timestamps.length) {\n    return [{\n      time: min,\n      pos: 0\n    }, {\n      time: max,\n      pos: 1\n    }];\n  }\n\n  var table = [];\n  var items = [min];\n  var i, ilen, prev, curr, next;\n\n  for (i = 0, ilen = timestamps.length; i < ilen; ++i) {\n    curr = timestamps[i];\n\n    if (curr > min && curr < max) {\n      items.push(curr);\n    }\n  }\n\n  items.push(max);\n\n  for (i = 0, ilen = items.length; i < ilen; ++i) {\n    next = items[i + 1];\n    prev = items[i - 1];\n    curr = items[i]; // only add points that breaks the scale linearity\n\n    if (prev === undefined || next === undefined || Math.round((next + prev) / 2) !== curr) {\n      table.push({\n        time: curr,\n        pos: i / (ilen - 1)\n      });\n    }\n  }\n\n  return table;\n} // @see adapted from http://www.anujgakhar.com/2014/03/01/binary-search-in-javascript/\n\n\nfunction lookup(table, key, value) {\n  var lo = 0;\n  var hi = table.length - 1;\n  var mid, i0, i1;\n\n  while (lo >= 0 && lo <= hi) {\n    mid = lo + hi >> 1;\n    i0 = table[mid - 1] || null;\n    i1 = table[mid];\n\n    if (!i0) {\n      // given value is outside table (before first item)\n      return {\n        lo: null,\n        hi: i1\n      };\n    } else if (i1[key] < value) {\n      lo = mid + 1;\n    } else if (i0[key] > value) {\n      hi = mid - 1;\n    } else {\n      return {\n        lo: i0,\n        hi: i1\n      };\n    }\n  } // given value is outside table (after last item)\n\n\n  return {\n    lo: i1,\n    hi: null\n  };\n}\n/**\n * Linearly interpolates the given source `value` using the table items `skey` values and\n * returns the associated `tkey` value. For example, interpolate(table, 'time', 42, 'pos')\n * returns the position for a timestamp equal to 42. If value is out of bounds, values at\n * index [0, 1] or [n - 1, n] are used for the interpolation.\n */\n\n\nfunction interpolate(table, skey, sval, tkey) {\n  var range = lookup(table, skey, sval); // Note: the lookup table ALWAYS contains at least 2 items (min and max)\n\n  var prev = !range.lo ? table[0] : !range.hi ? table[table.length - 2] : range.lo;\n  var next = !range.lo ? table[1] : !range.hi ? table[table.length - 1] : range.hi;\n  var span = next[skey] - prev[skey];\n  var ratio = span ? (sval - prev[skey]) / span : 0;\n  var offset = (next[tkey] - prev[tkey]) * ratio;\n  return prev[tkey] + offset;\n}\n/**\n * Convert the given value to a moment object using the given time options.\n * @see http://momentjs.com/docs/#/parsing/\n */\n\n\nfunction momentify(value, options) {\n  var parser = options.parser;\n  var format = options.parser || options.format;\n\n  if (typeof parser === 'function') {\n    return parser(value);\n  }\n\n  if (typeof value === 'string' && typeof format === 'string') {\n    return moment(value, format);\n  }\n\n  if (!(value instanceof moment)) {\n    value = moment(value);\n  }\n\n  if (value.isValid()) {\n    return value;\n  } // Labels are in an incompatible moment format and no `parser` has been provided.\n  // The user might still use the deprecated `format` option to convert his inputs.\n\n\n  if (typeof format === 'function') {\n    return format(value);\n  }\n\n  return value;\n}\n\nfunction parse(input, scale) {\n  if (helpers.isNullOrUndef(input)) {\n    return null;\n  }\n\n  var options = scale.options.time;\n  var value = momentify(scale.getRightValue(input), options);\n\n  if (!value.isValid()) {\n    return null;\n  }\n\n  if (options.round) {\n    value.startOf(options.round);\n  }\n\n  return value.valueOf();\n}\n/**\n * Returns the number of unit to skip to be able to display up to `capacity` number of ticks\n * in `unit` for the given `min` / `max` range and respecting the interval steps constraints.\n */\n\n\nfunction determineStepSize(min, max, unit, capacity) {\n  var range = max - min;\n  var interval = INTERVALS[unit];\n  var milliseconds = interval.size;\n  var steps = interval.steps;\n  var i, ilen, factor;\n\n  if (!steps) {\n    return Math.ceil(range / (capacity * milliseconds));\n  }\n\n  for (i = 0, ilen = steps.length; i < ilen; ++i) {\n    factor = steps[i];\n\n    if (Math.ceil(range / (milliseconds * factor)) <= capacity) {\n      break;\n    }\n  }\n\n  return factor;\n}\n/**\n * Figures out what unit results in an appropriate number of auto-generated ticks\n */\n\n\nfunction determineUnitForAutoTicks(minUnit, min, max, capacity) {\n  var ilen = UNITS.length;\n  var i, interval, factor;\n\n  for (i = UNITS.indexOf(minUnit); i < ilen - 1; ++i) {\n    interval = INTERVALS[UNITS[i]];\n    factor = interval.steps ? interval.steps[interval.steps.length - 1] : MAX_INTEGER;\n\n    if (interval.common && Math.ceil((max - min) / (factor * interval.size)) <= capacity) {\n      return UNITS[i];\n    }\n  }\n\n  return UNITS[ilen - 1];\n}\n/**\n * Figures out what unit to format a set of ticks with\n */\n\n\nfunction determineUnitForFormatting(ticks, minUnit, min, max) {\n  var duration = moment.duration(moment(max).diff(moment(min)));\n  var ilen = UNITS.length;\n  var i, unit;\n\n  for (i = ilen - 1; i >= UNITS.indexOf(minUnit); i--) {\n    unit = UNITS[i];\n\n    if (INTERVALS[unit].common && duration.as(unit) >= ticks.length) {\n      return unit;\n    }\n  }\n\n  return UNITS[minUnit ? UNITS.indexOf(minUnit) : 0];\n}\n\nfunction determineMajorUnit(unit) {\n  for (var i = UNITS.indexOf(unit) + 1, ilen = UNITS.length; i < ilen; ++i) {\n    if (INTERVALS[UNITS[i]].common) {\n      return UNITS[i];\n    }\n  }\n}\n/**\n * Generates a maximum of `capacity` timestamps between min and max, rounded to the\n * `minor` unit, aligned on the `major` unit and using the given scale time `options`.\n * Important: this method can return ticks outside the min and max range, it's the\n * responsibility of the calling code to clamp values if needed.\n */\n\n\nfunction generate(min, max, capacity, options) {\n  var timeOpts = options.time;\n  var minor = timeOpts.unit || determineUnitForAutoTicks(timeOpts.minUnit, min, max, capacity);\n  var major = determineMajorUnit(minor);\n  var stepSize = helpers.valueOrDefault(timeOpts.stepSize, timeOpts.unitStepSize);\n  var weekday = minor === 'week' ? timeOpts.isoWeekday : false;\n  var majorTicksEnabled = options.ticks.major.enabled;\n  var interval = INTERVALS[minor];\n  var first = moment(min);\n  var last = moment(max);\n  var ticks = [];\n  var time;\n\n  if (!stepSize) {\n    stepSize = determineStepSize(min, max, minor, capacity);\n  } // For 'week' unit, handle the first day of week option\n\n\n  if (weekday) {\n    first = first.isoWeekday(weekday);\n    last = last.isoWeekday(weekday);\n  } // Align first/last ticks on unit\n\n\n  first = first.startOf(weekday ? 'day' : minor);\n  last = last.startOf(weekday ? 'day' : minor); // Make sure that the last tick include max\n\n  if (last < max) {\n    last.add(1, minor);\n  }\n\n  time = moment(first);\n\n  if (majorTicksEnabled && major && !weekday && !timeOpts.round) {\n    // Align the first tick on the previous `minor` unit aligned on the `major` unit:\n    // we first aligned time on the previous `major` unit then add the number of full\n    // stepSize there is between first and the previous major time.\n    time.startOf(major);\n    time.add(~~((first - time) / (interval.size * stepSize)) * stepSize, minor);\n  }\n\n  for (; time < last; time.add(stepSize, minor)) {\n    ticks.push(+time);\n  }\n\n  ticks.push(+time);\n  return ticks;\n}\n/**\n * Returns the right and left offsets from edges in the form of {left, right}.\n * Offsets are added when the `offset` option is true.\n */\n\n\nfunction computeOffsets(table, ticks, min, max, options) {\n  var left = 0;\n  var right = 0;\n  var upper, lower;\n\n  if (options.offset && ticks.length) {\n    if (!options.time.min) {\n      upper = ticks.length > 1 ? ticks[1] : max;\n      lower = ticks[0];\n      left = (interpolate(table, 'time', upper, 'pos') - interpolate(table, 'time', lower, 'pos')) / 2;\n    }\n\n    if (!options.time.max) {\n      upper = ticks[ticks.length - 1];\n      lower = ticks.length > 1 ? ticks[ticks.length - 2] : min;\n      right = (interpolate(table, 'time', upper, 'pos') - interpolate(table, 'time', lower, 'pos')) / 2;\n    }\n  }\n\n  return {\n    left: left,\n    right: right\n  };\n}\n\nfunction ticksFromTimestamps(values, majorUnit) {\n  var ticks = [];\n  var i, ilen, value, major;\n\n  for (i = 0, ilen = values.length; i < ilen; ++i) {\n    value = values[i];\n    major = majorUnit ? value === +moment(value).startOf(majorUnit) : false;\n    ticks.push({\n      value: value,\n      major: major\n    });\n  }\n\n  return ticks;\n}\n\nfunction determineLabelFormat(data, timeOpts) {\n  var i, momentDate, hasTime;\n  var ilen = data.length; // find the label with the most parts (milliseconds, minutes, etc.)\n  // format all labels with the same level of detail as the most specific label\n\n  for (i = 0; i < ilen; i++) {\n    momentDate = momentify(data[i], timeOpts);\n\n    if (momentDate.millisecond() !== 0) {\n      return 'MMM D, YYYY h:mm:ss.SSS a';\n    }\n\n    if (momentDate.second() !== 0 || momentDate.minute() !== 0 || momentDate.hour() !== 0) {\n      hasTime = true;\n    }\n  }\n\n  if (hasTime) {\n    return 'MMM D, YYYY h:mm:ss a';\n  }\n\n  return 'MMM D, YYYY';\n}\n\nmodule.exports = function () {\n  var defaultConfig = {\n    position: 'bottom',\n\n    /**\n     * Data distribution along the scale:\n     * - 'linear': data are spread according to their time (distances can vary),\n     * - 'series': data are spread at the same distance from each other.\n     * @see https://github.com/chartjs/Chart.js/pull/4507\n     * @since 2.7.0\n     */\n    distribution: 'linear',\n\n    /**\n     * Scale boundary strategy (bypassed by min/max time options)\n     * - `data`: make sure data are fully visible, ticks outside are removed\n     * - `ticks`: make sure ticks are fully visible, data outside are truncated\n     * @see https://github.com/chartjs/Chart.js/pull/4556\n     * @since 2.7.0\n     */\n    bounds: 'data',\n    time: {\n      parser: false,\n      // false == a pattern string from http://momentjs.com/docs/#/parsing/string-format/ or a custom callback that converts its argument to a moment\n      format: false,\n      // DEPRECATED false == date objects, moment object, callback or a pattern string from http://momentjs.com/docs/#/parsing/string-format/\n      unit: false,\n      // false == automatic or override with week, month, year, etc.\n      round: false,\n      // none, or override with week, month, year, etc.\n      displayFormat: false,\n      // DEPRECATED\n      isoWeekday: false,\n      // override week start day - see http://momentjs.com/docs/#/get-set/iso-weekday/\n      minUnit: 'millisecond',\n      // defaults to unit's corresponding unitFormat below or override using pattern string from http://momentjs.com/docs/#/displaying/format/\n      displayFormats: {\n        millisecond: 'h:mm:ss.SSS a',\n        // 11:20:01.123 AM,\n        second: 'h:mm:ss a',\n        // 11:20:01 AM\n        minute: 'h:mm a',\n        // 11:20 AM\n        hour: 'hA',\n        // 5PM\n        day: 'MMM D',\n        // Sep 4\n        week: 'll',\n        // Week 46, or maybe \"[W]WW - YYYY\" ?\n        month: 'MMM YYYY',\n        // Sept 2015\n        quarter: '[Q]Q - YYYY',\n        // Q3\n        year: 'YYYY' // 2015\n\n      }\n    },\n    ticks: {\n      autoSkip: false,\n\n      /**\n       * Ticks generation input values:\n       * - 'auto': generates \"optimal\" ticks based on scale size and time options.\n       * - 'data': generates ticks from data (including labels from data {t|x|y} objects).\n       * - 'labels': generates ticks from user given `data.labels` values ONLY.\n       * @see https://github.com/chartjs/Chart.js/pull/4507\n       * @since 2.7.0\n       */\n      source: 'auto',\n      major: {\n        enabled: false\n      }\n    }\n  };\n  var TimeScale = Scale.extend({\n    initialize: function initialize() {\n      if (!moment) {\n        throw new Error('Chart.js - Moment.js could not be found! You must include it before Chart.js to use the time scale. Download at https://momentjs.com');\n      }\n\n      this.mergeTicksOptions();\n      Scale.prototype.initialize.call(this);\n    },\n    update: function update() {\n      var me = this;\n      var options = me.options; // DEPRECATIONS: output a message only one time per update\n\n      if (options.time && options.time.format) {\n        console.warn('options.time.format is deprecated and replaced by options.time.parser.');\n      }\n\n      return Scale.prototype.update.apply(me, arguments);\n    },\n\n    /**\n     * Allows data to be referenced via 't' attribute\n     */\n    getRightValue: function getRightValue(rawValue) {\n      if (rawValue && rawValue.t !== undefined) {\n        rawValue = rawValue.t;\n      }\n\n      return Scale.prototype.getRightValue.call(this, rawValue);\n    },\n    determineDataLimits: function determineDataLimits() {\n      var me = this;\n      var chart = me.chart;\n      var timeOpts = me.options.time;\n      var unit = timeOpts.unit || 'day';\n      var min = MAX_INTEGER;\n      var max = MIN_INTEGER;\n      var timestamps = [];\n      var datasets = [];\n      var labels = [];\n      var i, j, ilen, jlen, data, timestamp; // Convert labels to timestamps\n\n      for (i = 0, ilen = chart.data.labels.length; i < ilen; ++i) {\n        labels.push(parse(chart.data.labels[i], me));\n      } // Convert data to timestamps\n\n\n      for (i = 0, ilen = (chart.data.datasets || []).length; i < ilen; ++i) {\n        if (chart.isDatasetVisible(i)) {\n          data = chart.data.datasets[i].data; // Let's consider that all data have the same format.\n\n          if (helpers.isObject(data[0])) {\n            datasets[i] = [];\n\n            for (j = 0, jlen = data.length; j < jlen; ++j) {\n              timestamp = parse(data[j], me);\n              timestamps.push(timestamp);\n              datasets[i][j] = timestamp;\n            }\n          } else {\n            timestamps.push.apply(timestamps, labels);\n            datasets[i] = labels.slice(0);\n          }\n        } else {\n          datasets[i] = [];\n        }\n      }\n\n      if (labels.length) {\n        // Sort labels **after** data have been converted\n        labels = arrayUnique(labels).sort(sorter);\n        min = Math.min(min, labels[0]);\n        max = Math.max(max, labels[labels.length - 1]);\n      }\n\n      if (timestamps.length) {\n        timestamps = arrayUnique(timestamps).sort(sorter);\n        min = Math.min(min, timestamps[0]);\n        max = Math.max(max, timestamps[timestamps.length - 1]);\n      }\n\n      min = parse(timeOpts.min, me) || min;\n      max = parse(timeOpts.max, me) || max; // In case there is no valid min/max, set limits based on unit time option\n\n      min = min === MAX_INTEGER ? +moment().startOf(unit) : min;\n      max = max === MIN_INTEGER ? +moment().endOf(unit) + 1 : max; // Make sure that max is strictly higher than min (required by the lookup table)\n\n      me.min = Math.min(min, max);\n      me.max = Math.max(min + 1, max); // PRIVATE\n\n      me._horizontal = me.isHorizontal();\n      me._table = [];\n      me._timestamps = {\n        data: timestamps,\n        datasets: datasets,\n        labels: labels\n      };\n    },\n    buildTicks: function buildTicks() {\n      var me = this;\n      var min = me.min;\n      var max = me.max;\n      var options = me.options;\n      var timeOpts = options.time;\n      var timestamps = [];\n      var ticks = [];\n      var i, ilen, timestamp;\n\n      switch (options.ticks.source) {\n        case 'data':\n          timestamps = me._timestamps.data;\n          break;\n\n        case 'labels':\n          timestamps = me._timestamps.labels;\n          break;\n\n        case 'auto':\n        default:\n          timestamps = generate(min, max, me.getLabelCapacity(min), options);\n      }\n\n      if (options.bounds === 'ticks' && timestamps.length) {\n        min = timestamps[0];\n        max = timestamps[timestamps.length - 1];\n      } // Enforce limits with user min/max options\n\n\n      min = parse(timeOpts.min, me) || min;\n      max = parse(timeOpts.max, me) || max; // Remove ticks outside the min/max range\n\n      for (i = 0, ilen = timestamps.length; i < ilen; ++i) {\n        timestamp = timestamps[i];\n\n        if (timestamp >= min && timestamp <= max) {\n          ticks.push(timestamp);\n        }\n      }\n\n      me.min = min;\n      me.max = max; // PRIVATE\n\n      me._unit = timeOpts.unit || determineUnitForFormatting(ticks, timeOpts.minUnit, me.min, me.max);\n      me._majorUnit = determineMajorUnit(me._unit);\n      me._table = buildLookupTable(me._timestamps.data, min, max, options.distribution);\n      me._offsets = computeOffsets(me._table, ticks, min, max, options);\n      me._labelFormat = determineLabelFormat(me._timestamps.data, timeOpts);\n      return ticksFromTimestamps(ticks, me._majorUnit);\n    },\n    getLabelForIndex: function getLabelForIndex(index, datasetIndex) {\n      var me = this;\n      var data = me.chart.data;\n      var timeOpts = me.options.time;\n      var label = data.labels && index < data.labels.length ? data.labels[index] : '';\n      var value = data.datasets[datasetIndex].data[index];\n\n      if (helpers.isObject(value)) {\n        label = me.getRightValue(value);\n      }\n\n      if (timeOpts.tooltipFormat) {\n        return momentify(label, timeOpts).format(timeOpts.tooltipFormat);\n      }\n\n      if (typeof label === 'string') {\n        return label;\n      }\n\n      return momentify(label, timeOpts).format(me._labelFormat);\n    },\n\n    /**\n     * Function to format an individual tick mark\n     * @private\n     */\n    tickFormatFunction: function tickFormatFunction(tick, index, ticks, formatOverride) {\n      var me = this;\n      var options = me.options;\n      var time = tick.valueOf();\n      var formats = options.time.displayFormats;\n      var minorFormat = formats[me._unit];\n      var majorUnit = me._majorUnit;\n      var majorFormat = formats[majorUnit];\n      var majorTime = tick.clone().startOf(majorUnit).valueOf();\n      var majorTickOpts = options.ticks.major;\n      var major = majorTickOpts.enabled && majorUnit && majorFormat && time === majorTime;\n      var label = tick.format(formatOverride ? formatOverride : major ? majorFormat : minorFormat);\n      var tickOpts = major ? majorTickOpts : options.ticks.minor;\n      var formatter = helpers.valueOrDefault(tickOpts.callback, tickOpts.userCallback);\n      return formatter ? formatter(label, index, ticks) : label;\n    },\n    convertTicksToLabels: function convertTicksToLabels(ticks) {\n      var labels = [];\n      var i, ilen;\n\n      for (i = 0, ilen = ticks.length; i < ilen; ++i) {\n        labels.push(this.tickFormatFunction(moment(ticks[i].value), i, ticks));\n      }\n\n      return labels;\n    },\n\n    /**\n     * @private\n     */\n    getPixelForOffset: function getPixelForOffset(time) {\n      var me = this;\n      var size = me._horizontal ? me.width : me.height;\n      var start = me._horizontal ? me.left : me.top;\n      var pos = interpolate(me._table, 'time', time, 'pos');\n      return start + size * (me._offsets.left + pos) / (me._offsets.left + 1 + me._offsets.right);\n    },\n    getPixelForValue: function getPixelForValue(value, index, datasetIndex) {\n      var me = this;\n      var time = null;\n\n      if (index !== undefined && datasetIndex !== undefined) {\n        time = me._timestamps.datasets[datasetIndex][index];\n      }\n\n      if (time === null) {\n        time = parse(value, me);\n      }\n\n      if (time !== null) {\n        return me.getPixelForOffset(time);\n      }\n    },\n    getPixelForTick: function getPixelForTick(index) {\n      var ticks = this.getTicks();\n      return index >= 0 && index < ticks.length ? this.getPixelForOffset(ticks[index].value) : null;\n    },\n    getValueForPixel: function getValueForPixel(pixel) {\n      var me = this;\n      var size = me._horizontal ? me.width : me.height;\n      var start = me._horizontal ? me.left : me.top;\n      var pos = (size ? (pixel - start) / size : 0) * (me._offsets.left + 1 + me._offsets.left) - me._offsets.right;\n      var time = interpolate(me._table, 'pos', pos, 'time');\n      return moment(time);\n    },\n\n    /**\n     * Crude approximation of what the label width might be\n     * @private\n     */\n    getLabelWidth: function getLabelWidth(label) {\n      var me = this;\n      var ticksOpts = me.options.ticks;\n      var tickLabelWidth = me.ctx.measureText(label).width;\n      var angle = helpers.toRadians(ticksOpts.maxRotation);\n      var cosRotation = Math.cos(angle);\n      var sinRotation = Math.sin(angle);\n      var tickFontSize = helpers.valueOrDefault(ticksOpts.fontSize, defaults.global.defaultFontSize);\n      return tickLabelWidth * cosRotation + tickFontSize * sinRotation;\n    },\n\n    /**\n     * @private\n     */\n    getLabelCapacity: function getLabelCapacity(exampleTime) {\n      var me = this;\n      var formatOverride = me.options.time.displayFormats.millisecond; // Pick the longest format for guestimation\n\n      var exampleLabel = me.tickFormatFunction(moment(exampleTime), 0, [], formatOverride);\n      var tickLabelWidth = me.getLabelWidth(exampleLabel);\n      var innerWidth = me.isHorizontal() ? me.width : me.height;\n      var capacity = Math.floor(innerWidth / tickLabelWidth);\n      return capacity > 0 ? capacity : 1;\n    }\n  });\n  scaleService.registerScaleType('time', TimeScale, defaultConfig);\n};","'use strict';\n\nvar defaults = require('../core/core.defaults');\n\nvar elements = require('../elements/index');\n\nvar helpers = require('../helpers/index');\n\ndefaults._set('bar', {\n  hover: {\n    mode: 'label'\n  },\n  scales: {\n    xAxes: [{\n      type: 'category',\n      // Specific to Bar Controller\n      categoryPercentage: 0.8,\n      barPercentage: 0.9,\n      // offset settings\n      offset: true,\n      // grid line settings\n      gridLines: {\n        offsetGridLines: true\n      }\n    }],\n    yAxes: [{\n      type: 'linear'\n    }]\n  }\n});\n\ndefaults._set('horizontalBar', {\n  hover: {\n    mode: 'index',\n    axis: 'y'\n  },\n  scales: {\n    xAxes: [{\n      type: 'linear',\n      position: 'bottom'\n    }],\n    yAxes: [{\n      position: 'left',\n      type: 'category',\n      // Specific to Horizontal Bar Controller\n      categoryPercentage: 0.8,\n      barPercentage: 0.9,\n      // offset settings\n      offset: true,\n      // grid line settings\n      gridLines: {\n        offsetGridLines: true\n      }\n    }]\n  },\n  elements: {\n    rectangle: {\n      borderSkipped: 'left'\n    }\n  },\n  tooltips: {\n    callbacks: {\n      title: function title(item, data) {\n        // Pick first xLabel for now\n        var title = '';\n\n        if (item.length > 0) {\n          if (item[0].yLabel) {\n            title = item[0].yLabel;\n          } else if (data.labels.length > 0 && item[0].index < data.labels.length) {\n            title = data.labels[item[0].index];\n          }\n        }\n\n        return title;\n      },\n      label: function label(item, data) {\n        var datasetLabel = data.datasets[item.datasetIndex].label || '';\n        return datasetLabel + ': ' + item.xLabel;\n      }\n    },\n    mode: 'index',\n    axis: 'y'\n  }\n});\n/**\n * Computes the \"optimal\" sample size to maintain bars equally sized while preventing overlap.\n * @private\n */\n\n\nfunction computeMinSampleSize(scale, pixels) {\n  var min = scale.isHorizontal() ? scale.width : scale.height;\n  var ticks = scale.getTicks();\n  var prev, curr, i, ilen;\n\n  for (i = 1, ilen = pixels.length; i < ilen; ++i) {\n    min = Math.min(min, pixels[i] - pixels[i - 1]);\n  }\n\n  for (i = 0, ilen = ticks.length; i < ilen; ++i) {\n    curr = scale.getPixelForTick(i);\n    min = i > 0 ? Math.min(min, curr - prev) : min;\n    prev = curr;\n  }\n\n  return min;\n}\n/**\n * Computes an \"ideal\" category based on the absolute bar thickness or, if undefined or null,\n * uses the smallest interval (see computeMinSampleSize) that prevents bar overlapping. This\n * mode currently always generates bars equally sized (until we introduce scriptable options?).\n * @private\n */\n\n\nfunction computeFitCategoryTraits(index, ruler, options) {\n  var thickness = options.barThickness;\n  var count = ruler.stackCount;\n  var curr = ruler.pixels[index];\n  var size, ratio;\n\n  if (helpers.isNullOrUndef(thickness)) {\n    size = ruler.min * options.categoryPercentage;\n    ratio = options.barPercentage;\n  } else {\n    // When bar thickness is enforced, category and bar percentages are ignored.\n    // Note(SB): we could add support for relative bar thickness (e.g. barThickness: '50%')\n    // and deprecate barPercentage since this value is ignored when thickness is absolute.\n    size = thickness * count;\n    ratio = 1;\n  }\n\n  return {\n    chunk: size / count,\n    ratio: ratio,\n    start: curr - size / 2\n  };\n}\n/**\n * Computes an \"optimal\" category that globally arranges bars side by side (no gap when\n * percentage options are 1), based on the previous and following categories. This mode\n * generates bars with different widths when data are not evenly spaced.\n * @private\n */\n\n\nfunction computeFlexCategoryTraits(index, ruler, options) {\n  var pixels = ruler.pixels;\n  var curr = pixels[index];\n  var prev = index > 0 ? pixels[index - 1] : null;\n  var next = index < pixels.length - 1 ? pixels[index + 1] : null;\n  var percent = options.categoryPercentage;\n  var start, size;\n\n  if (prev === null) {\n    // first data: its size is double based on the next point or,\n    // if it's also the last data, we use the scale end extremity.\n    prev = curr - (next === null ? ruler.end - curr : next - curr);\n  }\n\n  if (next === null) {\n    // last data: its size is also double based on the previous point.\n    next = curr + curr - prev;\n  }\n\n  start = curr - (curr - prev) / 2 * percent;\n  size = (next - prev) / 2 * percent;\n  return {\n    chunk: size / ruler.stackCount,\n    ratio: options.barPercentage,\n    start: start\n  };\n}\n\nmodule.exports = function (Chart) {\n  Chart.controllers.bar = Chart.DatasetController.extend({\n    dataElementType: elements.Rectangle,\n    initialize: function initialize() {\n      var me = this;\n      var meta;\n      Chart.DatasetController.prototype.initialize.apply(me, arguments);\n      meta = me.getMeta();\n      meta.stack = me.getDataset().stack;\n      meta.bar = true;\n    },\n    update: function update(reset) {\n      var me = this;\n      var rects = me.getMeta().data;\n      var i, ilen;\n      me._ruler = me.getRuler();\n\n      for (i = 0, ilen = rects.length; i < ilen; ++i) {\n        me.updateElement(rects[i], i, reset);\n      }\n    },\n    updateElement: function updateElement(rectangle, index, reset) {\n      var me = this;\n      var chart = me.chart;\n      var meta = me.getMeta();\n      var dataset = me.getDataset();\n      var custom = rectangle.custom || {};\n      var rectangleOptions = chart.options.elements.rectangle;\n      rectangle._xScale = me.getScaleForId(meta.xAxisID);\n      rectangle._yScale = me.getScaleForId(meta.yAxisID);\n      rectangle._datasetIndex = me.index;\n      rectangle._index = index;\n      rectangle._model = {\n        datasetLabel: dataset.label,\n        label: chart.data.labels[index],\n        borderSkipped: custom.borderSkipped ? custom.borderSkipped : rectangleOptions.borderSkipped,\n        backgroundColor: custom.backgroundColor ? custom.backgroundColor : helpers.valueAtIndexOrDefault(dataset.backgroundColor, index, rectangleOptions.backgroundColor),\n        borderColor: custom.borderColor ? custom.borderColor : helpers.valueAtIndexOrDefault(dataset.borderColor, index, rectangleOptions.borderColor),\n        borderWidth: custom.borderWidth ? custom.borderWidth : helpers.valueAtIndexOrDefault(dataset.borderWidth, index, rectangleOptions.borderWidth)\n      };\n      me.updateElementGeometry(rectangle, index, reset);\n      rectangle.pivot();\n    },\n\n    /**\n     * @private\n     */\n    updateElementGeometry: function updateElementGeometry(rectangle, index, reset) {\n      var me = this;\n      var model = rectangle._model;\n      var vscale = me.getValueScale();\n      var base = vscale.getBasePixel();\n      var horizontal = vscale.isHorizontal();\n      var ruler = me._ruler || me.getRuler();\n      var vpixels = me.calculateBarValuePixels(me.index, index);\n      var ipixels = me.calculateBarIndexPixels(me.index, index, ruler);\n      model.horizontal = horizontal;\n      model.base = reset ? base : vpixels.base;\n      model.x = horizontal ? reset ? base : vpixels.head : ipixels.center;\n      model.y = horizontal ? ipixels.center : reset ? base : vpixels.head;\n      model.height = horizontal ? ipixels.size : undefined;\n      model.width = horizontal ? undefined : ipixels.size;\n    },\n\n    /**\n     * @private\n     */\n    getValueScaleId: function getValueScaleId() {\n      return this.getMeta().yAxisID;\n    },\n\n    /**\n     * @private\n     */\n    getIndexScaleId: function getIndexScaleId() {\n      return this.getMeta().xAxisID;\n    },\n\n    /**\n     * @private\n     */\n    getValueScale: function getValueScale() {\n      return this.getScaleForId(this.getValueScaleId());\n    },\n\n    /**\n     * @private\n     */\n    getIndexScale: function getIndexScale() {\n      return this.getScaleForId(this.getIndexScaleId());\n    },\n\n    /**\n     * Returns the stacks based on groups and bar visibility.\n     * @param {Number} [last] - The dataset index\n     * @returns {Array} The stack list\n     * @private\n     */\n    _getStacks: function _getStacks(last) {\n      var me = this;\n      var chart = me.chart;\n      var scale = me.getIndexScale();\n      var stacked = scale.options.stacked;\n      var ilen = last === undefined ? chart.data.datasets.length : last + 1;\n      var stacks = [];\n      var i, meta;\n\n      for (i = 0; i < ilen; ++i) {\n        meta = chart.getDatasetMeta(i);\n\n        if (meta.bar && chart.isDatasetVisible(i) && (stacked === false || stacked === true && stacks.indexOf(meta.stack) === -1 || stacked === undefined && (meta.stack === undefined || stacks.indexOf(meta.stack) === -1))) {\n          stacks.push(meta.stack);\n        }\n      }\n\n      return stacks;\n    },\n\n    /**\n     * Returns the effective number of stacks based on groups and bar visibility.\n     * @private\n     */\n    getStackCount: function getStackCount() {\n      return this._getStacks().length;\n    },\n\n    /**\n     * Returns the stack index for the given dataset based on groups and bar visibility.\n     * @param {Number} [datasetIndex] - The dataset index\n     * @param {String} [name] - The stack name to find\n     * @returns {Number} The stack index\n     * @private\n     */\n    getStackIndex: function getStackIndex(datasetIndex, name) {\n      var stacks = this._getStacks(datasetIndex);\n\n      var index = name !== undefined ? stacks.indexOf(name) : -1; // indexOf returns -1 if element is not present\n\n      return index === -1 ? stacks.length - 1 : index;\n    },\n\n    /**\n     * @private\n     */\n    getRuler: function getRuler() {\n      var me = this;\n      var scale = me.getIndexScale();\n      var stackCount = me.getStackCount();\n      var datasetIndex = me.index;\n      var isHorizontal = scale.isHorizontal();\n      var start = isHorizontal ? scale.left : scale.top;\n      var end = start + (isHorizontal ? scale.width : scale.height);\n      var pixels = [];\n      var i, ilen, min;\n\n      for (i = 0, ilen = me.getMeta().data.length; i < ilen; ++i) {\n        pixels.push(scale.getPixelForValue(null, i, datasetIndex));\n      }\n\n      min = helpers.isNullOrUndef(scale.options.barThickness) ? computeMinSampleSize(scale, pixels) : -1;\n      return {\n        min: min,\n        pixels: pixels,\n        start: start,\n        end: end,\n        stackCount: stackCount,\n        scale: scale\n      };\n    },\n\n    /**\n     * Note: pixel values are not clamped to the scale area.\n     * @private\n     */\n    calculateBarValuePixels: function calculateBarValuePixels(datasetIndex, index) {\n      var me = this;\n      var chart = me.chart;\n      var meta = me.getMeta();\n      var scale = me.getValueScale();\n      var datasets = chart.data.datasets;\n      var value = scale.getRightValue(datasets[datasetIndex].data[index]);\n      var stacked = scale.options.stacked;\n      var stack = meta.stack;\n      var start = 0;\n      var i, imeta, ivalue, base, head, size;\n\n      if (stacked || stacked === undefined && stack !== undefined) {\n        for (i = 0; i < datasetIndex; ++i) {\n          imeta = chart.getDatasetMeta(i);\n\n          if (imeta.bar && imeta.stack === stack && imeta.controller.getValueScaleId() === scale.id && chart.isDatasetVisible(i)) {\n            ivalue = scale.getRightValue(datasets[i].data[index]);\n\n            if (value < 0 && ivalue < 0 || value >= 0 && ivalue > 0) {\n              start += ivalue;\n            }\n          }\n        }\n      }\n\n      base = scale.getPixelForValue(start);\n      head = scale.getPixelForValue(start + value);\n      size = (head - base) / 2;\n      return {\n        size: size,\n        base: base,\n        head: head,\n        center: head + size / 2\n      };\n    },\n\n    /**\n     * @private\n     */\n    calculateBarIndexPixels: function calculateBarIndexPixels(datasetIndex, index, ruler) {\n      var me = this;\n      var options = ruler.scale.options;\n      var range = options.barThickness === 'flex' ? computeFlexCategoryTraits(index, ruler, options) : computeFitCategoryTraits(index, ruler, options);\n      var stackIndex = me.getStackIndex(datasetIndex, me.getMeta().stack);\n      var center = range.start + range.chunk * stackIndex + range.chunk / 2;\n      var size = Math.min(helpers.valueOrDefault(options.maxBarThickness, Infinity), range.chunk * range.ratio);\n      return {\n        base: center - size / 2,\n        head: center + size / 2,\n        center: center,\n        size: size\n      };\n    },\n    draw: function draw() {\n      var me = this;\n      var chart = me.chart;\n      var scale = me.getValueScale();\n      var rects = me.getMeta().data;\n      var dataset = me.getDataset();\n      var ilen = rects.length;\n      var i = 0;\n      helpers.canvas.clipArea(chart.ctx, chart.chartArea);\n\n      for (; i < ilen; ++i) {\n        if (!isNaN(scale.getRightValue(dataset.data[i]))) {\n          rects[i].draw();\n        }\n      }\n\n      helpers.canvas.unclipArea(chart.ctx);\n    }\n  });\n  Chart.controllers.horizontalBar = Chart.controllers.bar.extend({\n    /**\n     * @private\n     */\n    getValueScaleId: function getValueScaleId() {\n      return this.getMeta().xAxisID;\n    },\n\n    /**\n     * @private\n     */\n    getIndexScaleId: function getIndexScaleId() {\n      return this.getMeta().yAxisID;\n    }\n  });\n};","'use strict';\n\nvar defaults = require('../core/core.defaults');\n\nvar elements = require('../elements/index');\n\nvar helpers = require('../helpers/index');\n\ndefaults._set('bubble', {\n  hover: {\n    mode: 'single'\n  },\n  scales: {\n    xAxes: [{\n      type: 'linear',\n      // bubble should probably use a linear scale by default\n      position: 'bottom',\n      id: 'x-axis-0' // need an ID so datasets can reference the scale\n\n    }],\n    yAxes: [{\n      type: 'linear',\n      position: 'left',\n      id: 'y-axis-0'\n    }]\n  },\n  tooltips: {\n    callbacks: {\n      title: function title() {\n        // Title doesn't make sense for scatter since we format the data as a point\n        return '';\n      },\n      label: function label(item, data) {\n        var datasetLabel = data.datasets[item.datasetIndex].label || '';\n        var dataPoint = data.datasets[item.datasetIndex].data[item.index];\n        return datasetLabel + ': (' + item.xLabel + ', ' + item.yLabel + ', ' + dataPoint.r + ')';\n      }\n    }\n  }\n});\n\nmodule.exports = function (Chart) {\n  Chart.controllers.bubble = Chart.DatasetController.extend({\n    /**\n     * @protected\n     */\n    dataElementType: elements.Point,\n\n    /**\n     * @protected\n     */\n    update: function update(reset) {\n      var me = this;\n      var meta = me.getMeta();\n      var points = meta.data; // Update Points\n\n      helpers.each(points, function (point, index) {\n        me.updateElement(point, index, reset);\n      });\n    },\n\n    /**\n     * @protected\n     */\n    updateElement: function updateElement(point, index, reset) {\n      var me = this;\n      var meta = me.getMeta();\n      var custom = point.custom || {};\n      var xScale = me.getScaleForId(meta.xAxisID);\n      var yScale = me.getScaleForId(meta.yAxisID);\n\n      var options = me._resolveElementOptions(point, index);\n\n      var data = me.getDataset().data[index];\n      var dsIndex = me.index;\n      var x = reset ? xScale.getPixelForDecimal(0.5) : xScale.getPixelForValue(typeof data === 'object' ? data : NaN, index, dsIndex);\n      var y = reset ? yScale.getBasePixel() : yScale.getPixelForValue(data, index, dsIndex);\n      point._xScale = xScale;\n      point._yScale = yScale;\n      point._options = options;\n      point._datasetIndex = dsIndex;\n      point._index = index;\n      point._model = {\n        backgroundColor: options.backgroundColor,\n        borderColor: options.borderColor,\n        borderWidth: options.borderWidth,\n        hitRadius: options.hitRadius,\n        pointStyle: options.pointStyle,\n        rotation: options.rotation,\n        radius: reset ? 0 : options.radius,\n        skip: custom.skip || isNaN(x) || isNaN(y),\n        x: x,\n        y: y\n      };\n      point.pivot();\n    },\n\n    /**\n     * @protected\n     */\n    setHoverStyle: function setHoverStyle(point) {\n      var model = point._model;\n      var options = point._options;\n      point.$previousStyle = {\n        backgroundColor: model.backgroundColor,\n        borderColor: model.borderColor,\n        borderWidth: model.borderWidth,\n        radius: model.radius\n      };\n      model.backgroundColor = helpers.valueOrDefault(options.hoverBackgroundColor, helpers.getHoverColor(options.backgroundColor));\n      model.borderColor = helpers.valueOrDefault(options.hoverBorderColor, helpers.getHoverColor(options.borderColor));\n      model.borderWidth = helpers.valueOrDefault(options.hoverBorderWidth, options.borderWidth);\n      model.radius = options.radius + options.hoverRadius;\n    },\n\n    /**\n     * @private\n     */\n    _resolveElementOptions: function _resolveElementOptions(point, index) {\n      var me = this;\n      var chart = me.chart;\n      var datasets = chart.data.datasets;\n      var dataset = datasets[me.index];\n      var custom = point.custom || {};\n      var options = chart.options.elements.point;\n      var resolve = helpers.options.resolve;\n      var data = dataset.data[index];\n      var values = {};\n      var i, ilen, key; // Scriptable options\n\n      var context = {\n        chart: chart,\n        dataIndex: index,\n        dataset: dataset,\n        datasetIndex: me.index\n      };\n      var keys = ['backgroundColor', 'borderColor', 'borderWidth', 'hoverBackgroundColor', 'hoverBorderColor', 'hoverBorderWidth', 'hoverRadius', 'hitRadius', 'pointStyle', 'rotation'];\n\n      for (i = 0, ilen = keys.length; i < ilen; ++i) {\n        key = keys[i];\n        values[key] = resolve([custom[key], dataset[key], options[key]], context, index);\n      } // Custom radius resolution\n\n\n      values.radius = resolve([custom.radius, data ? data.r : undefined, dataset.radius, options.radius], context, index);\n      return values;\n    }\n  });\n};","'use strict';\n\nvar defaults = require('../core/core.defaults');\n\nvar elements = require('../elements/index');\n\nvar helpers = require('../helpers/index');\n\ndefaults._set('doughnut', {\n  animation: {\n    // Boolean - Whether we animate the rotation of the Doughnut\n    animateRotate: true,\n    // Boolean - Whether we animate scaling the Doughnut from the centre\n    animateScale: false\n  },\n  hover: {\n    mode: 'single'\n  },\n  legendCallback: function legendCallback(chart) {\n    var text = [];\n    text.push('<ul class=\"' + chart.id + '-legend\">');\n    var data = chart.data;\n    var datasets = data.datasets;\n    var labels = data.labels;\n\n    if (datasets.length) {\n      for (var i = 0; i < datasets[0].data.length; ++i) {\n        text.push('<li><span style=\"background-color:' + datasets[0].backgroundColor[i] + '\"></span>');\n\n        if (labels[i]) {\n          text.push(labels[i]);\n        }\n\n        text.push('</li>');\n      }\n    }\n\n    text.push('</ul>');\n    return text.join('');\n  },\n  legend: {\n    labels: {\n      generateLabels: function generateLabels(chart) {\n        var data = chart.data;\n\n        if (data.labels.length && data.datasets.length) {\n          return data.labels.map(function (label, i) {\n            var meta = chart.getDatasetMeta(0);\n            var ds = data.datasets[0];\n            var arc = meta.data[i];\n            var custom = arc && arc.custom || {};\n            var valueAtIndexOrDefault = helpers.valueAtIndexOrDefault;\n            var arcOpts = chart.options.elements.arc;\n            var fill = custom.backgroundColor ? custom.backgroundColor : valueAtIndexOrDefault(ds.backgroundColor, i, arcOpts.backgroundColor);\n            var stroke = custom.borderColor ? custom.borderColor : valueAtIndexOrDefault(ds.borderColor, i, arcOpts.borderColor);\n            var bw = custom.borderWidth ? custom.borderWidth : valueAtIndexOrDefault(ds.borderWidth, i, arcOpts.borderWidth);\n            return {\n              text: label,\n              fillStyle: fill,\n              strokeStyle: stroke,\n              lineWidth: bw,\n              hidden: isNaN(ds.data[i]) || meta.data[i].hidden,\n              // Extra data used for toggling the correct item\n              index: i\n            };\n          });\n        }\n\n        return [];\n      }\n    },\n    onClick: function onClick(e, legendItem) {\n      var index = legendItem.index;\n      var chart = this.chart;\n      var i, ilen, meta;\n\n      for (i = 0, ilen = (chart.data.datasets || []).length; i < ilen; ++i) {\n        meta = chart.getDatasetMeta(i); // toggle visibility of index if exists\n\n        if (meta.data[index]) {\n          meta.data[index].hidden = !meta.data[index].hidden;\n        }\n      }\n\n      chart.update();\n    }\n  },\n  // The percentage of the chart that we cut out of the middle.\n  cutoutPercentage: 50,\n  // The rotation of the chart, where the first data arc begins.\n  rotation: Math.PI * -0.5,\n  // The total circumference of the chart.\n  circumference: Math.PI * 2.0,\n  // Need to override these to give a nice default\n  tooltips: {\n    callbacks: {\n      title: function title() {\n        return '';\n      },\n      label: function label(tooltipItem, data) {\n        var dataLabel = data.labels[tooltipItem.index];\n        var value = ': ' + data.datasets[tooltipItem.datasetIndex].data[tooltipItem.index];\n\n        if (helpers.isArray(dataLabel)) {\n          // show value on first line of multiline label\n          // need to clone because we are changing the value\n          dataLabel = dataLabel.slice();\n          dataLabel[0] += value;\n        } else {\n          dataLabel += value;\n        }\n\n        return dataLabel;\n      }\n    }\n  }\n});\n\ndefaults._set('pie', helpers.clone(defaults.doughnut));\n\ndefaults._set('pie', {\n  cutoutPercentage: 0\n});\n\nmodule.exports = function (Chart) {\n  Chart.controllers.doughnut = Chart.controllers.pie = Chart.DatasetController.extend({\n    dataElementType: elements.Arc,\n    linkScales: helpers.noop,\n    // Get index of the dataset in relation to the visible datasets. This allows determining the inner and outer radius correctly\n    getRingIndex: function getRingIndex(datasetIndex) {\n      var ringIndex = 0;\n\n      for (var j = 0; j < datasetIndex; ++j) {\n        if (this.chart.isDatasetVisible(j)) {\n          ++ringIndex;\n        }\n      }\n\n      return ringIndex;\n    },\n    update: function update(reset) {\n      var me = this;\n      var chart = me.chart;\n      var chartArea = chart.chartArea;\n      var opts = chart.options;\n      var arcOpts = opts.elements.arc;\n      var availableWidth = chartArea.right - chartArea.left - arcOpts.borderWidth;\n      var availableHeight = chartArea.bottom - chartArea.top - arcOpts.borderWidth;\n      var minSize = Math.min(availableWidth, availableHeight);\n      var offset = {\n        x: 0,\n        y: 0\n      };\n      var meta = me.getMeta();\n      var cutoutPercentage = opts.cutoutPercentage;\n      var circumference = opts.circumference; // If the chart's circumference isn't a full circle, calculate minSize as a ratio of the width/height of the arc\n\n      if (circumference < Math.PI * 2.0) {\n        var startAngle = opts.rotation % (Math.PI * 2.0);\n        startAngle += Math.PI * 2.0 * (startAngle >= Math.PI ? -1 : startAngle < -Math.PI ? 1 : 0);\n        var endAngle = startAngle + circumference;\n        var start = {\n          x: Math.cos(startAngle),\n          y: Math.sin(startAngle)\n        };\n        var end = {\n          x: Math.cos(endAngle),\n          y: Math.sin(endAngle)\n        };\n        var contains0 = startAngle <= 0 && endAngle >= 0 || startAngle <= Math.PI * 2.0 && Math.PI * 2.0 <= endAngle;\n        var contains90 = startAngle <= Math.PI * 0.5 && Math.PI * 0.5 <= endAngle || startAngle <= Math.PI * 2.5 && Math.PI * 2.5 <= endAngle;\n        var contains180 = startAngle <= -Math.PI && -Math.PI <= endAngle || startAngle <= Math.PI && Math.PI <= endAngle;\n        var contains270 = startAngle <= -Math.PI * 0.5 && -Math.PI * 0.5 <= endAngle || startAngle <= Math.PI * 1.5 && Math.PI * 1.5 <= endAngle;\n        var cutout = cutoutPercentage / 100.0;\n        var min = {\n          x: contains180 ? -1 : Math.min(start.x * (start.x < 0 ? 1 : cutout), end.x * (end.x < 0 ? 1 : cutout)),\n          y: contains270 ? -1 : Math.min(start.y * (start.y < 0 ? 1 : cutout), end.y * (end.y < 0 ? 1 : cutout))\n        };\n        var max = {\n          x: contains0 ? 1 : Math.max(start.x * (start.x > 0 ? 1 : cutout), end.x * (end.x > 0 ? 1 : cutout)),\n          y: contains90 ? 1 : Math.max(start.y * (start.y > 0 ? 1 : cutout), end.y * (end.y > 0 ? 1 : cutout))\n        };\n        var size = {\n          width: (max.x - min.x) * 0.5,\n          height: (max.y - min.y) * 0.5\n        };\n        minSize = Math.min(availableWidth / size.width, availableHeight / size.height);\n        offset = {\n          x: (max.x + min.x) * -0.5,\n          y: (max.y + min.y) * -0.5\n        };\n      }\n\n      chart.borderWidth = me.getMaxBorderWidth(meta.data);\n      chart.outerRadius = Math.max((minSize - chart.borderWidth) / 2, 0);\n      chart.innerRadius = Math.max(cutoutPercentage ? chart.outerRadius / 100 * cutoutPercentage : 0, 0);\n      chart.radiusLength = (chart.outerRadius - chart.innerRadius) / chart.getVisibleDatasetCount();\n      chart.offsetX = offset.x * chart.outerRadius;\n      chart.offsetY = offset.y * chart.outerRadius;\n      meta.total = me.calculateTotal();\n      me.outerRadius = chart.outerRadius - chart.radiusLength * me.getRingIndex(me.index);\n      me.innerRadius = Math.max(me.outerRadius - chart.radiusLength, 0);\n      helpers.each(meta.data, function (arc, index) {\n        me.updateElement(arc, index, reset);\n      });\n    },\n    updateElement: function updateElement(arc, index, reset) {\n      var me = this;\n      var chart = me.chart;\n      var chartArea = chart.chartArea;\n      var opts = chart.options;\n      var animationOpts = opts.animation;\n      var centerX = (chartArea.left + chartArea.right) / 2;\n      var centerY = (chartArea.top + chartArea.bottom) / 2;\n      var startAngle = opts.rotation; // non reset case handled later\n\n      var endAngle = opts.rotation; // non reset case handled later\n\n      var dataset = me.getDataset();\n      var circumference = reset && animationOpts.animateRotate ? 0 : arc.hidden ? 0 : me.calculateCircumference(dataset.data[index]) * (opts.circumference / (2.0 * Math.PI));\n      var innerRadius = reset && animationOpts.animateScale ? 0 : me.innerRadius;\n      var outerRadius = reset && animationOpts.animateScale ? 0 : me.outerRadius;\n      var valueAtIndexOrDefault = helpers.valueAtIndexOrDefault;\n      helpers.extend(arc, {\n        // Utility\n        _datasetIndex: me.index,\n        _index: index,\n        // Desired view properties\n        _model: {\n          x: centerX + chart.offsetX,\n          y: centerY + chart.offsetY,\n          startAngle: startAngle,\n          endAngle: endAngle,\n          circumference: circumference,\n          outerRadius: outerRadius,\n          innerRadius: innerRadius,\n          label: valueAtIndexOrDefault(dataset.label, index, chart.data.labels[index])\n        }\n      });\n      var model = arc._model; // Resets the visual styles\n\n      var custom = arc.custom || {};\n      var valueOrDefault = helpers.valueAtIndexOrDefault;\n      var elementOpts = this.chart.options.elements.arc;\n      model.backgroundColor = custom.backgroundColor ? custom.backgroundColor : valueOrDefault(dataset.backgroundColor, index, elementOpts.backgroundColor);\n      model.borderColor = custom.borderColor ? custom.borderColor : valueOrDefault(dataset.borderColor, index, elementOpts.borderColor);\n      model.borderWidth = custom.borderWidth ? custom.borderWidth : valueOrDefault(dataset.borderWidth, index, elementOpts.borderWidth); // Set correct angles if not resetting\n\n      if (!reset || !animationOpts.animateRotate) {\n        if (index === 0) {\n          model.startAngle = opts.rotation;\n        } else {\n          model.startAngle = me.getMeta().data[index - 1]._model.endAngle;\n        }\n\n        model.endAngle = model.startAngle + model.circumference;\n      }\n\n      arc.pivot();\n    },\n    calculateTotal: function calculateTotal() {\n      var dataset = this.getDataset();\n      var meta = this.getMeta();\n      var total = 0;\n      var value;\n      helpers.each(meta.data, function (element, index) {\n        value = dataset.data[index];\n\n        if (!isNaN(value) && !element.hidden) {\n          total += Math.abs(value);\n        }\n      });\n      /* if (total === 0) {\n      \ttotal = NaN;\n      }*/\n\n      return total;\n    },\n    calculateCircumference: function calculateCircumference(value) {\n      var total = this.getMeta().total;\n\n      if (total > 0 && !isNaN(value)) {\n        return Math.PI * 2.0 * (Math.abs(value) / total);\n      }\n\n      return 0;\n    },\n    // gets the max border or hover width to properly scale pie charts\n    getMaxBorderWidth: function getMaxBorderWidth(arcs) {\n      var max = 0;\n      var index = this.index;\n      var length = arcs.length;\n      var borderWidth;\n      var hoverWidth;\n\n      for (var i = 0; i < length; i++) {\n        borderWidth = arcs[i]._model ? arcs[i]._model.borderWidth : 0;\n        hoverWidth = arcs[i]._chart ? arcs[i]._chart.config.data.datasets[index].hoverBorderWidth : 0;\n        max = borderWidth > max ? borderWidth : max;\n        max = hoverWidth > max ? hoverWidth : max;\n      }\n\n      return max;\n    }\n  });\n};","'use strict';\n\nvar defaults = require('../core/core.defaults');\n\nvar elements = require('../elements/index');\n\nvar helpers = require('../helpers/index');\n\ndefaults._set('line', {\n  showLines: true,\n  spanGaps: false,\n  hover: {\n    mode: 'label'\n  },\n  scales: {\n    xAxes: [{\n      type: 'category',\n      id: 'x-axis-0'\n    }],\n    yAxes: [{\n      type: 'linear',\n      id: 'y-axis-0'\n    }]\n  }\n});\n\nmodule.exports = function (Chart) {\n  function lineEnabled(dataset, options) {\n    return helpers.valueOrDefault(dataset.showLine, options.showLines);\n  }\n\n  Chart.controllers.line = Chart.DatasetController.extend({\n    datasetElementType: elements.Line,\n    dataElementType: elements.Point,\n    update: function update(reset) {\n      var me = this;\n      var meta = me.getMeta();\n      var line = meta.dataset;\n      var points = meta.data || [];\n      var options = me.chart.options;\n      var lineElementOptions = options.elements.line;\n      var scale = me.getScaleForId(meta.yAxisID);\n      var i, ilen, custom;\n      var dataset = me.getDataset();\n      var showLine = lineEnabled(dataset, options); // Update Line\n\n      if (showLine) {\n        custom = line.custom || {}; // Compatibility: If the properties are defined with only the old name, use those values\n\n        if (dataset.tension !== undefined && dataset.lineTension === undefined) {\n          dataset.lineTension = dataset.tension;\n        } // Utility\n\n\n        line._scale = scale;\n        line._datasetIndex = me.index; // Data\n\n        line._children = points; // Model\n\n        line._model = {\n          // Appearance\n          // The default behavior of lines is to break at null values, according\n          // to https://github.com/chartjs/Chart.js/issues/2435#issuecomment-216718158\n          // This option gives lines the ability to span gaps\n          spanGaps: dataset.spanGaps ? dataset.spanGaps : options.spanGaps,\n          tension: custom.tension ? custom.tension : helpers.valueOrDefault(dataset.lineTension, lineElementOptions.tension),\n          backgroundColor: custom.backgroundColor ? custom.backgroundColor : dataset.backgroundColor || lineElementOptions.backgroundColor,\n          borderWidth: custom.borderWidth ? custom.borderWidth : dataset.borderWidth || lineElementOptions.borderWidth,\n          borderColor: custom.borderColor ? custom.borderColor : dataset.borderColor || lineElementOptions.borderColor,\n          borderCapStyle: custom.borderCapStyle ? custom.borderCapStyle : dataset.borderCapStyle || lineElementOptions.borderCapStyle,\n          borderDash: custom.borderDash ? custom.borderDash : dataset.borderDash || lineElementOptions.borderDash,\n          borderDashOffset: custom.borderDashOffset ? custom.borderDashOffset : dataset.borderDashOffset || lineElementOptions.borderDashOffset,\n          borderJoinStyle: custom.borderJoinStyle ? custom.borderJoinStyle : dataset.borderJoinStyle || lineElementOptions.borderJoinStyle,\n          fill: custom.fill ? custom.fill : dataset.fill !== undefined ? dataset.fill : lineElementOptions.fill,\n          steppedLine: custom.steppedLine ? custom.steppedLine : helpers.valueOrDefault(dataset.steppedLine, lineElementOptions.stepped),\n          cubicInterpolationMode: custom.cubicInterpolationMode ? custom.cubicInterpolationMode : helpers.valueOrDefault(dataset.cubicInterpolationMode, lineElementOptions.cubicInterpolationMode)\n        };\n        line.pivot();\n      } // Update Points\n\n\n      for (i = 0, ilen = points.length; i < ilen; ++i) {\n        me.updateElement(points[i], i, reset);\n      }\n\n      if (showLine && line._model.tension !== 0) {\n        me.updateBezierControlPoints();\n      } // Now pivot the point for animation\n\n\n      for (i = 0, ilen = points.length; i < ilen; ++i) {\n        points[i].pivot();\n      }\n    },\n    getPointBackgroundColor: function getPointBackgroundColor(point, index) {\n      var backgroundColor = this.chart.options.elements.point.backgroundColor;\n      var dataset = this.getDataset();\n      var custom = point.custom || {};\n\n      if (custom.backgroundColor) {\n        backgroundColor = custom.backgroundColor;\n      } else if (dataset.pointBackgroundColor) {\n        backgroundColor = helpers.valueAtIndexOrDefault(dataset.pointBackgroundColor, index, backgroundColor);\n      } else if (dataset.backgroundColor) {\n        backgroundColor = dataset.backgroundColor;\n      }\n\n      return backgroundColor;\n    },\n    getPointBorderColor: function getPointBorderColor(point, index) {\n      var borderColor = this.chart.options.elements.point.borderColor;\n      var dataset = this.getDataset();\n      var custom = point.custom || {};\n\n      if (custom.borderColor) {\n        borderColor = custom.borderColor;\n      } else if (dataset.pointBorderColor) {\n        borderColor = helpers.valueAtIndexOrDefault(dataset.pointBorderColor, index, borderColor);\n      } else if (dataset.borderColor) {\n        borderColor = dataset.borderColor;\n      }\n\n      return borderColor;\n    },\n    getPointBorderWidth: function getPointBorderWidth(point, index) {\n      var borderWidth = this.chart.options.elements.point.borderWidth;\n      var dataset = this.getDataset();\n      var custom = point.custom || {};\n\n      if (!isNaN(custom.borderWidth)) {\n        borderWidth = custom.borderWidth;\n      } else if (!isNaN(dataset.pointBorderWidth) || helpers.isArray(dataset.pointBorderWidth)) {\n        borderWidth = helpers.valueAtIndexOrDefault(dataset.pointBorderWidth, index, borderWidth);\n      } else if (!isNaN(dataset.borderWidth)) {\n        borderWidth = dataset.borderWidth;\n      }\n\n      return borderWidth;\n    },\n    getPointRotation: function getPointRotation(point, index) {\n      var pointRotation = this.chart.options.elements.point.rotation;\n      var dataset = this.getDataset();\n      var custom = point.custom || {};\n\n      if (!isNaN(custom.rotation)) {\n        pointRotation = custom.rotation;\n      } else if (!isNaN(dataset.pointRotation) || helpers.isArray(dataset.pointRotation)) {\n        pointRotation = helpers.valueAtIndexOrDefault(dataset.pointRotation, index, pointRotation);\n      }\n\n      return pointRotation;\n    },\n    updateElement: function updateElement(point, index, reset) {\n      var me = this;\n      var meta = me.getMeta();\n      var custom = point.custom || {};\n      var dataset = me.getDataset();\n      var datasetIndex = me.index;\n      var value = dataset.data[index];\n      var yScale = me.getScaleForId(meta.yAxisID);\n      var xScale = me.getScaleForId(meta.xAxisID);\n      var pointOptions = me.chart.options.elements.point;\n      var x, y; // Compatibility: If the properties are defined with only the old name, use those values\n\n      if (dataset.radius !== undefined && dataset.pointRadius === undefined) {\n        dataset.pointRadius = dataset.radius;\n      }\n\n      if (dataset.hitRadius !== undefined && dataset.pointHitRadius === undefined) {\n        dataset.pointHitRadius = dataset.hitRadius;\n      }\n\n      x = xScale.getPixelForValue(typeof value === 'object' ? value : NaN, index, datasetIndex);\n      y = reset ? yScale.getBasePixel() : me.calculatePointY(value, index, datasetIndex); // Utility\n\n      point._xScale = xScale;\n      point._yScale = yScale;\n      point._datasetIndex = datasetIndex;\n      point._index = index; // Desired view properties\n\n      point._model = {\n        x: x,\n        y: y,\n        skip: custom.skip || isNaN(x) || isNaN(y),\n        // Appearance\n        radius: custom.radius || helpers.valueAtIndexOrDefault(dataset.pointRadius, index, pointOptions.radius),\n        pointStyle: custom.pointStyle || helpers.valueAtIndexOrDefault(dataset.pointStyle, index, pointOptions.pointStyle),\n        rotation: me.getPointRotation(point, index),\n        backgroundColor: me.getPointBackgroundColor(point, index),\n        borderColor: me.getPointBorderColor(point, index),\n        borderWidth: me.getPointBorderWidth(point, index),\n        tension: meta.dataset._model ? meta.dataset._model.tension : 0,\n        steppedLine: meta.dataset._model ? meta.dataset._model.steppedLine : false,\n        // Tooltip\n        hitRadius: custom.hitRadius || helpers.valueAtIndexOrDefault(dataset.pointHitRadius, index, pointOptions.hitRadius)\n      };\n    },\n    calculatePointY: function calculatePointY(value, index, datasetIndex) {\n      var me = this;\n      var chart = me.chart;\n      var meta = me.getMeta();\n      var yScale = me.getScaleForId(meta.yAxisID);\n      var sumPos = 0;\n      var sumNeg = 0;\n      var i, ds, dsMeta;\n\n      if (yScale.options.stacked) {\n        for (i = 0; i < datasetIndex; i++) {\n          ds = chart.data.datasets[i];\n          dsMeta = chart.getDatasetMeta(i);\n\n          if (dsMeta.type === 'line' && dsMeta.yAxisID === yScale.id && chart.isDatasetVisible(i)) {\n            var stackedRightValue = Number(yScale.getRightValue(ds.data[index]));\n\n            if (stackedRightValue < 0) {\n              sumNeg += stackedRightValue || 0;\n            } else {\n              sumPos += stackedRightValue || 0;\n            }\n          }\n        }\n\n        var rightValue = Number(yScale.getRightValue(value));\n\n        if (rightValue < 0) {\n          return yScale.getPixelForValue(sumNeg + rightValue);\n        }\n\n        return yScale.getPixelForValue(sumPos + rightValue);\n      }\n\n      return yScale.getPixelForValue(value);\n    },\n    updateBezierControlPoints: function updateBezierControlPoints() {\n      var me = this;\n      var meta = me.getMeta();\n      var area = me.chart.chartArea;\n      var points = meta.data || [];\n      var i, ilen, point, model, controlPoints; // Only consider points that are drawn in case the spanGaps option is used\n\n      if (meta.dataset._model.spanGaps) {\n        points = points.filter(function (pt) {\n          return !pt._model.skip;\n        });\n      }\n\n      function capControlPoint(pt, min, max) {\n        return Math.max(Math.min(pt, max), min);\n      }\n\n      if (meta.dataset._model.cubicInterpolationMode === 'monotone') {\n        helpers.splineCurveMonotone(points);\n      } else {\n        for (i = 0, ilen = points.length; i < ilen; ++i) {\n          point = points[i];\n          model = point._model;\n          controlPoints = helpers.splineCurve(helpers.previousItem(points, i)._model, model, helpers.nextItem(points, i)._model, meta.dataset._model.tension);\n          model.controlPointPreviousX = controlPoints.previous.x;\n          model.controlPointPreviousY = controlPoints.previous.y;\n          model.controlPointNextX = controlPoints.next.x;\n          model.controlPointNextY = controlPoints.next.y;\n        }\n      }\n\n      if (me.chart.options.elements.line.capBezierPoints) {\n        for (i = 0, ilen = points.length; i < ilen; ++i) {\n          model = points[i]._model;\n          model.controlPointPreviousX = capControlPoint(model.controlPointPreviousX, area.left, area.right);\n          model.controlPointPreviousY = capControlPoint(model.controlPointPreviousY, area.top, area.bottom);\n          model.controlPointNextX = capControlPoint(model.controlPointNextX, area.left, area.right);\n          model.controlPointNextY = capControlPoint(model.controlPointNextY, area.top, area.bottom);\n        }\n      }\n    },\n    draw: function draw() {\n      var me = this;\n      var chart = me.chart;\n      var meta = me.getMeta();\n      var points = meta.data || [];\n      var area = chart.chartArea;\n      var ilen = points.length;\n      var halfBorderWidth;\n      var i = 0;\n\n      if (lineEnabled(me.getDataset(), chart.options)) {\n        halfBorderWidth = (meta.dataset._model.borderWidth || 0) / 2;\n        helpers.canvas.clipArea(chart.ctx, {\n          left: area.left,\n          right: area.right,\n          top: area.top - halfBorderWidth,\n          bottom: area.bottom + halfBorderWidth\n        });\n        meta.dataset.draw();\n        helpers.canvas.unclipArea(chart.ctx);\n      } // Draw the points\n\n\n      for (; i < ilen; ++i) {\n        points[i].draw(area);\n      }\n    },\n    setHoverStyle: function setHoverStyle(element) {\n      // Point\n      var dataset = this.chart.data.datasets[element._datasetIndex];\n      var index = element._index;\n      var custom = element.custom || {};\n      var model = element._model;\n      element.$previousStyle = {\n        backgroundColor: model.backgroundColor,\n        borderColor: model.borderColor,\n        borderWidth: model.borderWidth,\n        radius: model.radius\n      };\n      model.backgroundColor = custom.hoverBackgroundColor || helpers.valueAtIndexOrDefault(dataset.pointHoverBackgroundColor, index, helpers.getHoverColor(model.backgroundColor));\n      model.borderColor = custom.hoverBorderColor || helpers.valueAtIndexOrDefault(dataset.pointHoverBorderColor, index, helpers.getHoverColor(model.borderColor));\n      model.borderWidth = custom.hoverBorderWidth || helpers.valueAtIndexOrDefault(dataset.pointHoverBorderWidth, index, model.borderWidth);\n      model.radius = custom.hoverRadius || helpers.valueAtIndexOrDefault(dataset.pointHoverRadius, index, this.chart.options.elements.point.hoverRadius);\n    }\n  });\n};","'use strict';\n\nvar defaults = require('../core/core.defaults');\n\nvar elements = require('../elements/index');\n\nvar helpers = require('../helpers/index');\n\ndefaults._set('polarArea', {\n  scale: {\n    type: 'radialLinear',\n    angleLines: {\n      display: false\n    },\n    gridLines: {\n      circular: true\n    },\n    pointLabels: {\n      display: false\n    },\n    ticks: {\n      beginAtZero: true\n    }\n  },\n  // Boolean - Whether to animate the rotation of the chart\n  animation: {\n    animateRotate: true,\n    animateScale: true\n  },\n  startAngle: -0.5 * Math.PI,\n  legendCallback: function legendCallback(chart) {\n    var text = [];\n    text.push('<ul class=\"' + chart.id + '-legend\">');\n    var data = chart.data;\n    var datasets = data.datasets;\n    var labels = data.labels;\n\n    if (datasets.length) {\n      for (var i = 0; i < datasets[0].data.length; ++i) {\n        text.push('<li><span style=\"background-color:' + datasets[0].backgroundColor[i] + '\"></span>');\n\n        if (labels[i]) {\n          text.push(labels[i]);\n        }\n\n        text.push('</li>');\n      }\n    }\n\n    text.push('</ul>');\n    return text.join('');\n  },\n  legend: {\n    labels: {\n      generateLabels: function generateLabels(chart) {\n        var data = chart.data;\n\n        if (data.labels.length && data.datasets.length) {\n          return data.labels.map(function (label, i) {\n            var meta = chart.getDatasetMeta(0);\n            var ds = data.datasets[0];\n            var arc = meta.data[i];\n            var custom = arc.custom || {};\n            var valueAtIndexOrDefault = helpers.valueAtIndexOrDefault;\n            var arcOpts = chart.options.elements.arc;\n            var fill = custom.backgroundColor ? custom.backgroundColor : valueAtIndexOrDefault(ds.backgroundColor, i, arcOpts.backgroundColor);\n            var stroke = custom.borderColor ? custom.borderColor : valueAtIndexOrDefault(ds.borderColor, i, arcOpts.borderColor);\n            var bw = custom.borderWidth ? custom.borderWidth : valueAtIndexOrDefault(ds.borderWidth, i, arcOpts.borderWidth);\n            return {\n              text: label,\n              fillStyle: fill,\n              strokeStyle: stroke,\n              lineWidth: bw,\n              hidden: isNaN(ds.data[i]) || meta.data[i].hidden,\n              // Extra data used for toggling the correct item\n              index: i\n            };\n          });\n        }\n\n        return [];\n      }\n    },\n    onClick: function onClick(e, legendItem) {\n      var index = legendItem.index;\n      var chart = this.chart;\n      var i, ilen, meta;\n\n      for (i = 0, ilen = (chart.data.datasets || []).length; i < ilen; ++i) {\n        meta = chart.getDatasetMeta(i);\n        meta.data[index].hidden = !meta.data[index].hidden;\n      }\n\n      chart.update();\n    }\n  },\n  // Need to override these to give a nice default\n  tooltips: {\n    callbacks: {\n      title: function title() {\n        return '';\n      },\n      label: function label(item, data) {\n        return data.labels[item.index] + ': ' + item.yLabel;\n      }\n    }\n  }\n});\n\nmodule.exports = function (Chart) {\n  Chart.controllers.polarArea = Chart.DatasetController.extend({\n    dataElementType: elements.Arc,\n    linkScales: helpers.noop,\n    update: function update(reset) {\n      var me = this;\n      var dataset = me.getDataset();\n      var meta = me.getMeta();\n      var start = me.chart.options.startAngle || 0;\n      var starts = me._starts = [];\n      var angles = me._angles = [];\n      var i, ilen, angle;\n\n      me._updateRadius();\n\n      meta.count = me.countVisibleElements();\n\n      for (i = 0, ilen = dataset.data.length; i < ilen; i++) {\n        starts[i] = start;\n        angle = me._computeAngle(i);\n        angles[i] = angle;\n        start += angle;\n      }\n\n      helpers.each(meta.data, function (arc, index) {\n        me.updateElement(arc, index, reset);\n      });\n    },\n\n    /**\n     * @private\n     */\n    _updateRadius: function _updateRadius() {\n      var me = this;\n      var chart = me.chart;\n      var chartArea = chart.chartArea;\n      var opts = chart.options;\n      var arcOpts = opts.elements.arc;\n      var minSize = Math.min(chartArea.right - chartArea.left, chartArea.bottom - chartArea.top);\n      chart.outerRadius = Math.max((minSize - arcOpts.borderWidth / 2) / 2, 0);\n      chart.innerRadius = Math.max(opts.cutoutPercentage ? chart.outerRadius / 100 * opts.cutoutPercentage : 1, 0);\n      chart.radiusLength = (chart.outerRadius - chart.innerRadius) / chart.getVisibleDatasetCount();\n      me.outerRadius = chart.outerRadius - chart.radiusLength * me.index;\n      me.innerRadius = me.outerRadius - chart.radiusLength;\n    },\n    updateElement: function updateElement(arc, index, reset) {\n      var me = this;\n      var chart = me.chart;\n      var dataset = me.getDataset();\n      var opts = chart.options;\n      var animationOpts = opts.animation;\n      var scale = chart.scale;\n      var labels = chart.data.labels;\n      var centerX = scale.xCenter;\n      var centerY = scale.yCenter; // var negHalfPI = -0.5 * Math.PI;\n\n      var datasetStartAngle = opts.startAngle;\n      var distance = arc.hidden ? 0 : scale.getDistanceFromCenterForValue(dataset.data[index]);\n      var startAngle = me._starts[index];\n      var endAngle = startAngle + (arc.hidden ? 0 : me._angles[index]);\n      var resetRadius = animationOpts.animateScale ? 0 : scale.getDistanceFromCenterForValue(dataset.data[index]);\n      helpers.extend(arc, {\n        // Utility\n        _datasetIndex: me.index,\n        _index: index,\n        _scale: scale,\n        // Desired view properties\n        _model: {\n          x: centerX,\n          y: centerY,\n          innerRadius: 0,\n          outerRadius: reset ? resetRadius : distance,\n          startAngle: reset && animationOpts.animateRotate ? datasetStartAngle : startAngle,\n          endAngle: reset && animationOpts.animateRotate ? datasetStartAngle : endAngle,\n          label: helpers.valueAtIndexOrDefault(labels, index, labels[index])\n        }\n      }); // Apply border and fill style\n\n      var elementOpts = this.chart.options.elements.arc;\n      var custom = arc.custom || {};\n      var valueOrDefault = helpers.valueAtIndexOrDefault;\n      var model = arc._model;\n      model.backgroundColor = custom.backgroundColor ? custom.backgroundColor : valueOrDefault(dataset.backgroundColor, index, elementOpts.backgroundColor);\n      model.borderColor = custom.borderColor ? custom.borderColor : valueOrDefault(dataset.borderColor, index, elementOpts.borderColor);\n      model.borderWidth = custom.borderWidth ? custom.borderWidth : valueOrDefault(dataset.borderWidth, index, elementOpts.borderWidth);\n      arc.pivot();\n    },\n    countVisibleElements: function countVisibleElements() {\n      var dataset = this.getDataset();\n      var meta = this.getMeta();\n      var count = 0;\n      helpers.each(meta.data, function (element, index) {\n        if (!isNaN(dataset.data[index]) && !element.hidden) {\n          count++;\n        }\n      });\n      return count;\n    },\n\n    /**\n     * @private\n     */\n    _computeAngle: function _computeAngle(index) {\n      var me = this;\n      var count = this.getMeta().count;\n      var dataset = me.getDataset();\n      var meta = me.getMeta();\n\n      if (isNaN(dataset.data[index]) || meta.data[index].hidden) {\n        return 0;\n      } // Scriptable options\n\n\n      var context = {\n        chart: me.chart,\n        dataIndex: index,\n        dataset: dataset,\n        datasetIndex: me.index\n      };\n      return helpers.options.resolve([me.chart.options.elements.arc.angle, 2 * Math.PI / count], context, index);\n    }\n  });\n};","'use strict';\n\nvar defaults = require('../core/core.defaults');\n\nvar elements = require('../elements/index');\n\nvar helpers = require('../helpers/index');\n\ndefaults._set('radar', {\n  scale: {\n    type: 'radialLinear'\n  },\n  elements: {\n    line: {\n      tension: 0 // no bezier in radar\n\n    }\n  }\n});\n\nmodule.exports = function (Chart) {\n  Chart.controllers.radar = Chart.DatasetController.extend({\n    datasetElementType: elements.Line,\n    dataElementType: elements.Point,\n    linkScales: helpers.noop,\n    update: function update(reset) {\n      var me = this;\n      var meta = me.getMeta();\n      var line = meta.dataset;\n      var points = meta.data;\n      var custom = line.custom || {};\n      var dataset = me.getDataset();\n      var lineElementOptions = me.chart.options.elements.line;\n      var scale = me.chart.scale; // Compatibility: If the properties are defined with only the old name, use those values\n\n      if (dataset.tension !== undefined && dataset.lineTension === undefined) {\n        dataset.lineTension = dataset.tension;\n      }\n\n      helpers.extend(meta.dataset, {\n        // Utility\n        _datasetIndex: me.index,\n        _scale: scale,\n        // Data\n        _children: points,\n        _loop: true,\n        // Model\n        _model: {\n          // Appearance\n          tension: custom.tension ? custom.tension : helpers.valueOrDefault(dataset.lineTension, lineElementOptions.tension),\n          backgroundColor: custom.backgroundColor ? custom.backgroundColor : dataset.backgroundColor || lineElementOptions.backgroundColor,\n          borderWidth: custom.borderWidth ? custom.borderWidth : dataset.borderWidth || lineElementOptions.borderWidth,\n          borderColor: custom.borderColor ? custom.borderColor : dataset.borderColor || lineElementOptions.borderColor,\n          fill: custom.fill ? custom.fill : dataset.fill !== undefined ? dataset.fill : lineElementOptions.fill,\n          borderCapStyle: custom.borderCapStyle ? custom.borderCapStyle : dataset.borderCapStyle || lineElementOptions.borderCapStyle,\n          borderDash: custom.borderDash ? custom.borderDash : dataset.borderDash || lineElementOptions.borderDash,\n          borderDashOffset: custom.borderDashOffset ? custom.borderDashOffset : dataset.borderDashOffset || lineElementOptions.borderDashOffset,\n          borderJoinStyle: custom.borderJoinStyle ? custom.borderJoinStyle : dataset.borderJoinStyle || lineElementOptions.borderJoinStyle\n        }\n      });\n      meta.dataset.pivot(); // Update Points\n\n      helpers.each(points, function (point, index) {\n        me.updateElement(point, index, reset);\n      }, me); // Update bezier control points\n\n      me.updateBezierControlPoints();\n    },\n    updateElement: function updateElement(point, index, reset) {\n      var me = this;\n      var custom = point.custom || {};\n      var dataset = me.getDataset();\n      var scale = me.chart.scale;\n      var pointElementOptions = me.chart.options.elements.point;\n      var pointPosition = scale.getPointPositionForValue(index, dataset.data[index]); // Compatibility: If the properties are defined with only the old name, use those values\n\n      if (dataset.radius !== undefined && dataset.pointRadius === undefined) {\n        dataset.pointRadius = dataset.radius;\n      }\n\n      if (dataset.hitRadius !== undefined && dataset.pointHitRadius === undefined) {\n        dataset.pointHitRadius = dataset.hitRadius;\n      }\n\n      helpers.extend(point, {\n        // Utility\n        _datasetIndex: me.index,\n        _index: index,\n        _scale: scale,\n        // Desired view properties\n        _model: {\n          x: reset ? scale.xCenter : pointPosition.x,\n          // value not used in dataset scale, but we want a consistent API between scales\n          y: reset ? scale.yCenter : pointPosition.y,\n          // Appearance\n          tension: custom.tension ? custom.tension : helpers.valueOrDefault(dataset.lineTension, me.chart.options.elements.line.tension),\n          radius: custom.radius ? custom.radius : helpers.valueAtIndexOrDefault(dataset.pointRadius, index, pointElementOptions.radius),\n          backgroundColor: custom.backgroundColor ? custom.backgroundColor : helpers.valueAtIndexOrDefault(dataset.pointBackgroundColor, index, pointElementOptions.backgroundColor),\n          borderColor: custom.borderColor ? custom.borderColor : helpers.valueAtIndexOrDefault(dataset.pointBorderColor, index, pointElementOptions.borderColor),\n          borderWidth: custom.borderWidth ? custom.borderWidth : helpers.valueAtIndexOrDefault(dataset.pointBorderWidth, index, pointElementOptions.borderWidth),\n          pointStyle: custom.pointStyle ? custom.pointStyle : helpers.valueAtIndexOrDefault(dataset.pointStyle, index, pointElementOptions.pointStyle),\n          rotation: custom.rotation ? custom.rotation : helpers.valueAtIndexOrDefault(dataset.pointRotation, index, pointElementOptions.rotation),\n          // Tooltip\n          hitRadius: custom.hitRadius ? custom.hitRadius : helpers.valueAtIndexOrDefault(dataset.pointHitRadius, index, pointElementOptions.hitRadius)\n        }\n      });\n      point._model.skip = custom.skip ? custom.skip : isNaN(point._model.x) || isNaN(point._model.y);\n    },\n    updateBezierControlPoints: function updateBezierControlPoints() {\n      var chartArea = this.chart.chartArea;\n      var meta = this.getMeta();\n      helpers.each(meta.data, function (point, index) {\n        var model = point._model;\n        var controlPoints = helpers.splineCurve(helpers.previousItem(meta.data, index, true)._model, model, helpers.nextItem(meta.data, index, true)._model, model.tension); // Prevent the bezier going outside of the bounds of the graph\n\n        model.controlPointPreviousX = Math.max(Math.min(controlPoints.previous.x, chartArea.right), chartArea.left);\n        model.controlPointPreviousY = Math.max(Math.min(controlPoints.previous.y, chartArea.bottom), chartArea.top);\n        model.controlPointNextX = Math.max(Math.min(controlPoints.next.x, chartArea.right), chartArea.left);\n        model.controlPointNextY = Math.max(Math.min(controlPoints.next.y, chartArea.bottom), chartArea.top); // Now pivot the point for animation\n\n        point.pivot();\n      });\n    },\n    setHoverStyle: function setHoverStyle(point) {\n      // Point\n      var dataset = this.chart.data.datasets[point._datasetIndex];\n      var custom = point.custom || {};\n      var index = point._index;\n      var model = point._model;\n      point.$previousStyle = {\n        backgroundColor: model.backgroundColor,\n        borderColor: model.borderColor,\n        borderWidth: model.borderWidth,\n        radius: model.radius\n      };\n      model.radius = custom.hoverRadius ? custom.hoverRadius : helpers.valueAtIndexOrDefault(dataset.pointHoverRadius, index, this.chart.options.elements.point.hoverRadius);\n      model.backgroundColor = custom.hoverBackgroundColor ? custom.hoverBackgroundColor : helpers.valueAtIndexOrDefault(dataset.pointHoverBackgroundColor, index, helpers.getHoverColor(model.backgroundColor));\n      model.borderColor = custom.hoverBorderColor ? custom.hoverBorderColor : helpers.valueAtIndexOrDefault(dataset.pointHoverBorderColor, index, helpers.getHoverColor(model.borderColor));\n      model.borderWidth = custom.hoverBorderWidth ? custom.hoverBorderWidth : helpers.valueAtIndexOrDefault(dataset.pointHoverBorderWidth, index, model.borderWidth);\n    }\n  });\n};","'use strict';\n\nvar defaults = require('../core/core.defaults');\n\ndefaults._set('scatter', {\n  hover: {\n    mode: 'single'\n  },\n  scales: {\n    xAxes: [{\n      id: 'x-axis-1',\n      // need an ID so datasets can reference the scale\n      type: 'linear',\n      // scatter should not use a category axis\n      position: 'bottom'\n    }],\n    yAxes: [{\n      id: 'y-axis-1',\n      type: 'linear',\n      position: 'left'\n    }]\n  },\n  showLines: false,\n  tooltips: {\n    callbacks: {\n      title: function title() {\n        return ''; // doesn't make sense for scatter since data are formatted as a point\n      },\n      label: function label(item) {\n        return '(' + item.xLabel + ', ' + item.yLabel + ')';\n      }\n    }\n  }\n});\n\nmodule.exports = function (Chart) {\n  // Scatter charts use line controllers\n  Chart.controllers.scatter = Chart.controllers.line;\n};","'use strict';\n\nmodule.exports = function (Chart) {\n  Chart.Bar = function (context, config) {\n    config.type = 'bar';\n    return new Chart(context, config);\n  };\n};","'use strict';\n\nmodule.exports = function (Chart) {\n  Chart.Bubble = function (context, config) {\n    config.type = 'bubble';\n    return new Chart(context, config);\n  };\n};","'use strict';\n\nmodule.exports = function (Chart) {\n  Chart.Doughnut = function (context, config) {\n    config.type = 'doughnut';\n    return new Chart(context, config);\n  };\n};","'use strict';\n\nmodule.exports = function (Chart) {\n  Chart.Line = function (context, config) {\n    config.type = 'line';\n    return new Chart(context, config);\n  };\n};","'use strict';\n\nmodule.exports = function (Chart) {\n  Chart.PolarArea = function (context, config) {\n    config.type = 'polarArea';\n    return new Chart(context, config);\n  };\n};","'use strict';\n\nmodule.exports = function (Chart) {\n  Chart.Radar = function (context, config) {\n    config.type = 'radar';\n    return new Chart(context, config);\n  };\n};","'use strict';\n\nmodule.exports = function (Chart) {\n  Chart.Scatter = function (context, config) {\n    config.type = 'scatter';\n    return new Chart(context, config);\n  };\n};","'use strict';\n\nmodule.exports = {};\nmodule.exports.filler = require('./plugin.filler');\nmodule.exports.legend = require('./plugin.legend');\nmodule.exports.title = require('./plugin.title');","/**\n * Plugin based on discussion from the following Chart.js issues:\n * @see https://github.com/chartjs/Chart.js/issues/2380#issuecomment-279961569\n * @see https://github.com/chartjs/Chart.js/issues/2440#issuecomment-256461897\n */\n'use strict';\n\nvar defaults = require('../core/core.defaults');\n\nvar elements = require('../elements/index');\n\nvar helpers = require('../helpers/index');\n\ndefaults._set('global', {\n  plugins: {\n    filler: {\n      propagate: true\n    }\n  }\n});\n\nvar mappers = {\n  dataset: function dataset(source) {\n    var index = source.fill;\n    var chart = source.chart;\n    var meta = chart.getDatasetMeta(index);\n    var visible = meta && chart.isDatasetVisible(index);\n    var points = visible && meta.dataset._children || [];\n    var length = points.length || 0;\n    return !length ? null : function (point, i) {\n      return i < length && points[i]._view || null;\n    };\n  },\n  boundary: function boundary(source) {\n    var boundary = source.boundary;\n    var x = boundary ? boundary.x : null;\n    var y = boundary ? boundary.y : null;\n    return function (point) {\n      return {\n        x: x === null ? point.x : x,\n        y: y === null ? point.y : y\n      };\n    };\n  }\n}; // @todo if (fill[0] === '#')\n\nfunction decodeFill(el, index, count) {\n  var model = el._model || {};\n  var fill = model.fill;\n  var target;\n\n  if (fill === undefined) {\n    fill = !!model.backgroundColor;\n  }\n\n  if (fill === false || fill === null) {\n    return false;\n  }\n\n  if (fill === true) {\n    return 'origin';\n  }\n\n  target = parseFloat(fill, 10);\n\n  if (isFinite(target) && Math.floor(target) === target) {\n    if (fill[0] === '-' || fill[0] === '+') {\n      target = index + target;\n    }\n\n    if (target === index || target < 0 || target >= count) {\n      return false;\n    }\n\n    return target;\n  }\n\n  switch (fill) {\n    // compatibility\n    case 'bottom':\n      return 'start';\n\n    case 'top':\n      return 'end';\n\n    case 'zero':\n      return 'origin';\n    // supported boundaries\n\n    case 'origin':\n    case 'start':\n    case 'end':\n      return fill;\n    // invalid fill values\n\n    default:\n      return false;\n  }\n}\n\nfunction computeBoundary(source) {\n  var model = source.el._model || {};\n  var scale = source.el._scale || {};\n  var fill = source.fill;\n  var target = null;\n  var horizontal;\n\n  if (isFinite(fill)) {\n    return null;\n  } // Backward compatibility: until v3, we still need to support boundary values set on\n  // the model (scaleTop, scaleBottom and scaleZero) because some external plugins and\n  // controllers might still use it (e.g. the Smith chart).\n\n\n  if (fill === 'start') {\n    target = model.scaleBottom === undefined ? scale.bottom : model.scaleBottom;\n  } else if (fill === 'end') {\n    target = model.scaleTop === undefined ? scale.top : model.scaleTop;\n  } else if (model.scaleZero !== undefined) {\n    target = model.scaleZero;\n  } else if (scale.getBasePosition) {\n    target = scale.getBasePosition();\n  } else if (scale.getBasePixel) {\n    target = scale.getBasePixel();\n  }\n\n  if (target !== undefined && target !== null) {\n    if (target.x !== undefined && target.y !== undefined) {\n      return target;\n    }\n\n    if (typeof target === 'number' && isFinite(target)) {\n      horizontal = scale.isHorizontal();\n      return {\n        x: horizontal ? target : null,\n        y: horizontal ? null : target\n      };\n    }\n  }\n\n  return null;\n}\n\nfunction resolveTarget(sources, index, propagate) {\n  var source = sources[index];\n  var fill = source.fill;\n  var visited = [index];\n  var target;\n\n  if (!propagate) {\n    return fill;\n  }\n\n  while (fill !== false && visited.indexOf(fill) === -1) {\n    if (!isFinite(fill)) {\n      return fill;\n    }\n\n    target = sources[fill];\n\n    if (!target) {\n      return false;\n    }\n\n    if (target.visible) {\n      return fill;\n    }\n\n    visited.push(fill);\n    fill = target.fill;\n  }\n\n  return false;\n}\n\nfunction createMapper(source) {\n  var fill = source.fill;\n  var type = 'dataset';\n\n  if (fill === false) {\n    return null;\n  }\n\n  if (!isFinite(fill)) {\n    type = 'boundary';\n  }\n\n  return mappers[type](source);\n}\n\nfunction isDrawable(point) {\n  return point && !point.skip;\n}\n\nfunction drawArea(ctx, curve0, curve1, len0, len1) {\n  var i;\n\n  if (!len0 || !len1) {\n    return;\n  } // building first area curve (normal)\n\n\n  ctx.moveTo(curve0[0].x, curve0[0].y);\n\n  for (i = 1; i < len0; ++i) {\n    helpers.canvas.lineTo(ctx, curve0[i - 1], curve0[i]);\n  } // joining the two area curves\n\n\n  ctx.lineTo(curve1[len1 - 1].x, curve1[len1 - 1].y); // building opposite area curve (reverse)\n\n  for (i = len1 - 1; i > 0; --i) {\n    helpers.canvas.lineTo(ctx, curve1[i], curve1[i - 1], true);\n  }\n}\n\nfunction doFill(ctx, points, mapper, view, color, loop) {\n  var count = points.length;\n  var span = view.spanGaps;\n  var curve0 = [];\n  var curve1 = [];\n  var len0 = 0;\n  var len1 = 0;\n  var i, ilen, index, p0, p1, d0, d1;\n  ctx.beginPath();\n\n  for (i = 0, ilen = count + !!loop; i < ilen; ++i) {\n    index = i % count;\n    p0 = points[index]._view;\n    p1 = mapper(p0, index, view);\n    d0 = isDrawable(p0);\n    d1 = isDrawable(p1);\n\n    if (d0 && d1) {\n      len0 = curve0.push(p0);\n      len1 = curve1.push(p1);\n    } else if (len0 && len1) {\n      if (!span) {\n        drawArea(ctx, curve0, curve1, len0, len1);\n        len0 = len1 = 0;\n        curve0 = [];\n        curve1 = [];\n      } else {\n        if (d0) {\n          curve0.push(p0);\n        }\n\n        if (d1) {\n          curve1.push(p1);\n        }\n      }\n    }\n  }\n\n  drawArea(ctx, curve0, curve1, len0, len1);\n  ctx.closePath();\n  ctx.fillStyle = color;\n  ctx.fill();\n}\n\nmodule.exports = {\n  id: 'filler',\n  afterDatasetsUpdate: function afterDatasetsUpdate(chart, options) {\n    var count = (chart.data.datasets || []).length;\n    var propagate = options.propagate;\n    var sources = [];\n    var meta, i, el, source;\n\n    for (i = 0; i < count; ++i) {\n      meta = chart.getDatasetMeta(i);\n      el = meta.dataset;\n      source = null;\n\n      if (el && el._model && el instanceof elements.Line) {\n        source = {\n          visible: chart.isDatasetVisible(i),\n          fill: decodeFill(el, i, count),\n          chart: chart,\n          el: el\n        };\n      }\n\n      meta.$filler = source;\n      sources.push(source);\n    }\n\n    for (i = 0; i < count; ++i) {\n      source = sources[i];\n\n      if (!source) {\n        continue;\n      }\n\n      source.fill = resolveTarget(sources, i, propagate);\n      source.boundary = computeBoundary(source);\n      source.mapper = createMapper(source);\n    }\n  },\n  beforeDatasetDraw: function beforeDatasetDraw(chart, args) {\n    var meta = args.meta.$filler;\n\n    if (!meta) {\n      return;\n    }\n\n    var ctx = chart.ctx;\n    var el = meta.el;\n    var view = el._view;\n    var points = el._children || [];\n    var mapper = meta.mapper;\n    var color = view.backgroundColor || defaults.global.defaultColor;\n\n    if (mapper && color && points.length) {\n      helpers.canvas.clipArea(ctx, chart.chartArea);\n      doFill(ctx, points, mapper, view, color, el._loop);\n      helpers.canvas.unclipArea(ctx);\n    }\n  }\n};","'use strict';\n\nvar defaults = require('../core/core.defaults');\n\nvar Element = require('../core/core.element');\n\nvar helpers = require('../helpers/index');\n\nvar layouts = require('../core/core.layouts');\n\nvar noop = helpers.noop;\n\ndefaults._set('global', {\n  legend: {\n    display: true,\n    position: 'top',\n    fullWidth: true,\n    reverse: false,\n    weight: 1000,\n    // a callback that will handle\n    onClick: function onClick(e, legendItem) {\n      var index = legendItem.datasetIndex;\n      var ci = this.chart;\n      var meta = ci.getDatasetMeta(index); // See controller.isDatasetVisible comment\n\n      meta.hidden = meta.hidden === null ? !ci.data.datasets[index].hidden : null; // We hid a dataset ... rerender the chart\n\n      ci.update();\n    },\n    onHover: null,\n    labels: {\n      boxWidth: 40,\n      padding: 10,\n      // Generates labels shown in the legend\n      // Valid properties to return:\n      // text : text to display\n      // fillStyle : fill of coloured box\n      // strokeStyle: stroke of coloured box\n      // hidden : if this legend item refers to a hidden item\n      // lineCap : cap style for line\n      // lineDash\n      // lineDashOffset :\n      // lineJoin :\n      // lineWidth :\n      generateLabels: function generateLabels(chart) {\n        var data = chart.data;\n        return helpers.isArray(data.datasets) ? data.datasets.map(function (dataset, i) {\n          return {\n            text: dataset.label,\n            fillStyle: !helpers.isArray(dataset.backgroundColor) ? dataset.backgroundColor : dataset.backgroundColor[0],\n            hidden: !chart.isDatasetVisible(i),\n            lineCap: dataset.borderCapStyle,\n            lineDash: dataset.borderDash,\n            lineDashOffset: dataset.borderDashOffset,\n            lineJoin: dataset.borderJoinStyle,\n            lineWidth: dataset.borderWidth,\n            strokeStyle: dataset.borderColor,\n            pointStyle: dataset.pointStyle,\n            // Below is extra data used for toggling the datasets\n            datasetIndex: i\n          };\n        }, this) : [];\n      }\n    }\n  },\n  legendCallback: function legendCallback(chart) {\n    var text = [];\n    text.push('<ul class=\"' + chart.id + '-legend\">');\n\n    for (var i = 0; i < chart.data.datasets.length; i++) {\n      text.push('<li><span style=\"background-color:' + chart.data.datasets[i].backgroundColor + '\"></span>');\n\n      if (chart.data.datasets[i].label) {\n        text.push(chart.data.datasets[i].label);\n      }\n\n      text.push('</li>');\n    }\n\n    text.push('</ul>');\n    return text.join('');\n  }\n});\n/**\n * Helper function to get the box width based on the usePointStyle option\n * @param labelopts {Object} the label options on the legend\n * @param fontSize {Number} the label font size\n * @return {Number} width of the color box area\n */\n\n\nfunction getBoxWidth(labelOpts, fontSize) {\n  return labelOpts.usePointStyle ? fontSize * Math.SQRT2 : labelOpts.boxWidth;\n}\n/**\n * IMPORTANT: this class is exposed publicly as Chart.Legend, backward compatibility required!\n */\n\n\nvar Legend = Element.extend({\n  initialize: function initialize(config) {\n    helpers.extend(this, config); // Contains hit boxes for each dataset (in dataset order)\n\n    this.legendHitBoxes = []; // Are we in doughnut mode which has a different data type\n\n    this.doughnutMode = false;\n  },\n  // These methods are ordered by lifecycle. Utilities then follow.\n  // Any function defined here is inherited by all legend types.\n  // Any function can be extended by the legend type\n  beforeUpdate: noop,\n  update: function update(maxWidth, maxHeight, margins) {\n    var me = this; // Update Lifecycle - Probably don't want to ever extend or overwrite this function ;)\n\n    me.beforeUpdate(); // Absorb the master measurements\n\n    me.maxWidth = maxWidth;\n    me.maxHeight = maxHeight;\n    me.margins = margins; // Dimensions\n\n    me.beforeSetDimensions();\n    me.setDimensions();\n    me.afterSetDimensions(); // Labels\n\n    me.beforeBuildLabels();\n    me.buildLabels();\n    me.afterBuildLabels(); // Fit\n\n    me.beforeFit();\n    me.fit();\n    me.afterFit(); //\n\n    me.afterUpdate();\n    return me.minSize;\n  },\n  afterUpdate: noop,\n  //\n  beforeSetDimensions: noop,\n  setDimensions: function setDimensions() {\n    var me = this; // Set the unconstrained dimension before label rotation\n\n    if (me.isHorizontal()) {\n      // Reset position before calculating rotation\n      me.width = me.maxWidth;\n      me.left = 0;\n      me.right = me.width;\n    } else {\n      me.height = me.maxHeight; // Reset position before calculating rotation\n\n      me.top = 0;\n      me.bottom = me.height;\n    } // Reset padding\n\n\n    me.paddingLeft = 0;\n    me.paddingTop = 0;\n    me.paddingRight = 0;\n    me.paddingBottom = 0; // Reset minSize\n\n    me.minSize = {\n      width: 0,\n      height: 0\n    };\n  },\n  afterSetDimensions: noop,\n  //\n  beforeBuildLabels: noop,\n  buildLabels: function buildLabels() {\n    var me = this;\n    var labelOpts = me.options.labels || {};\n    var legendItems = helpers.callback(labelOpts.generateLabels, [me.chart], me) || [];\n\n    if (labelOpts.filter) {\n      legendItems = legendItems.filter(function (item) {\n        return labelOpts.filter(item, me.chart.data);\n      });\n    }\n\n    if (me.options.reverse) {\n      legendItems.reverse();\n    }\n\n    me.legendItems = legendItems;\n  },\n  afterBuildLabels: noop,\n  //\n  beforeFit: noop,\n  fit: function fit() {\n    var me = this;\n    var opts = me.options;\n    var labelOpts = opts.labels;\n    var display = opts.display;\n    var ctx = me.ctx;\n    var globalDefault = defaults.global;\n    var valueOrDefault = helpers.valueOrDefault;\n    var fontSize = valueOrDefault(labelOpts.fontSize, globalDefault.defaultFontSize);\n    var fontStyle = valueOrDefault(labelOpts.fontStyle, globalDefault.defaultFontStyle);\n    var fontFamily = valueOrDefault(labelOpts.fontFamily, globalDefault.defaultFontFamily);\n    var labelFont = helpers.fontString(fontSize, fontStyle, fontFamily); // Reset hit boxes\n\n    var hitboxes = me.legendHitBoxes = [];\n    var minSize = me.minSize;\n    var isHorizontal = me.isHorizontal();\n\n    if (isHorizontal) {\n      minSize.width = me.maxWidth; // fill all the width\n\n      minSize.height = display ? 10 : 0;\n    } else {\n      minSize.width = display ? 10 : 0;\n      minSize.height = me.maxHeight; // fill all the height\n    } // Increase sizes here\n\n\n    if (display) {\n      ctx.font = labelFont;\n\n      if (isHorizontal) {\n        // Labels\n        // Width of each line of legend boxes. Labels wrap onto multiple lines when there are too many to fit on one\n        var lineWidths = me.lineWidths = [0];\n        var totalHeight = me.legendItems.length ? fontSize + labelOpts.padding : 0;\n        ctx.textAlign = 'left';\n        ctx.textBaseline = 'top';\n        helpers.each(me.legendItems, function (legendItem, i) {\n          var boxWidth = getBoxWidth(labelOpts, fontSize);\n          var width = boxWidth + fontSize / 2 + ctx.measureText(legendItem.text).width;\n\n          if (lineWidths[lineWidths.length - 1] + width + labelOpts.padding >= me.width) {\n            totalHeight += fontSize + labelOpts.padding;\n            lineWidths[lineWidths.length] = me.left;\n          } // Store the hitbox width and height here. Final position will be updated in `draw`\n\n\n          hitboxes[i] = {\n            left: 0,\n            top: 0,\n            width: width,\n            height: fontSize\n          };\n          lineWidths[lineWidths.length - 1] += width + labelOpts.padding;\n        });\n        minSize.height += totalHeight;\n      } else {\n        var vPadding = labelOpts.padding;\n        var columnWidths = me.columnWidths = [];\n        var totalWidth = labelOpts.padding;\n        var currentColWidth = 0;\n        var currentColHeight = 0;\n        var itemHeight = fontSize + vPadding;\n        helpers.each(me.legendItems, function (legendItem, i) {\n          var boxWidth = getBoxWidth(labelOpts, fontSize);\n          var itemWidth = boxWidth + fontSize / 2 + ctx.measureText(legendItem.text).width; // If too tall, go to new column\n\n          if (currentColHeight + itemHeight > minSize.height) {\n            totalWidth += currentColWidth + labelOpts.padding;\n            columnWidths.push(currentColWidth); // previous column width\n\n            currentColWidth = 0;\n            currentColHeight = 0;\n          } // Get max width\n\n\n          currentColWidth = Math.max(currentColWidth, itemWidth);\n          currentColHeight += itemHeight; // Store the hitbox width and height here. Final position will be updated in `draw`\n\n          hitboxes[i] = {\n            left: 0,\n            top: 0,\n            width: itemWidth,\n            height: fontSize\n          };\n        });\n        totalWidth += currentColWidth;\n        columnWidths.push(currentColWidth);\n        minSize.width += totalWidth;\n      }\n    }\n\n    me.width = minSize.width;\n    me.height = minSize.height;\n  },\n  afterFit: noop,\n  // Shared Methods\n  isHorizontal: function isHorizontal() {\n    return this.options.position === 'top' || this.options.position === 'bottom';\n  },\n  // Actually draw the legend on the canvas\n  draw: function draw() {\n    var me = this;\n    var opts = me.options;\n    var labelOpts = opts.labels;\n    var globalDefault = defaults.global;\n    var lineDefault = globalDefault.elements.line;\n    var legendWidth = me.width;\n    var lineWidths = me.lineWidths;\n\n    if (opts.display) {\n      var ctx = me.ctx;\n      var valueOrDefault = helpers.valueOrDefault;\n      var fontColor = valueOrDefault(labelOpts.fontColor, globalDefault.defaultFontColor);\n      var fontSize = valueOrDefault(labelOpts.fontSize, globalDefault.defaultFontSize);\n      var fontStyle = valueOrDefault(labelOpts.fontStyle, globalDefault.defaultFontStyle);\n      var fontFamily = valueOrDefault(labelOpts.fontFamily, globalDefault.defaultFontFamily);\n      var labelFont = helpers.fontString(fontSize, fontStyle, fontFamily);\n      var cursor; // Canvas setup\n\n      ctx.textAlign = 'left';\n      ctx.textBaseline = 'middle';\n      ctx.lineWidth = 0.5;\n      ctx.strokeStyle = fontColor; // for strikethrough effect\n\n      ctx.fillStyle = fontColor; // render in correct colour\n\n      ctx.font = labelFont;\n      var boxWidth = getBoxWidth(labelOpts, fontSize);\n      var hitboxes = me.legendHitBoxes; // current position\n\n      var drawLegendBox = function drawLegendBox(x, y, legendItem) {\n        if (isNaN(boxWidth) || boxWidth <= 0) {\n          return;\n        } // Set the ctx for the box\n\n\n        ctx.save();\n        ctx.fillStyle = valueOrDefault(legendItem.fillStyle, globalDefault.defaultColor);\n        ctx.lineCap = valueOrDefault(legendItem.lineCap, lineDefault.borderCapStyle);\n        ctx.lineDashOffset = valueOrDefault(legendItem.lineDashOffset, lineDefault.borderDashOffset);\n        ctx.lineJoin = valueOrDefault(legendItem.lineJoin, lineDefault.borderJoinStyle);\n        ctx.lineWidth = valueOrDefault(legendItem.lineWidth, lineDefault.borderWidth);\n        ctx.strokeStyle = valueOrDefault(legendItem.strokeStyle, globalDefault.defaultColor);\n        var isLineWidthZero = valueOrDefault(legendItem.lineWidth, lineDefault.borderWidth) === 0;\n\n        if (ctx.setLineDash) {\n          // IE 9 and 10 do not support line dash\n          ctx.setLineDash(valueOrDefault(legendItem.lineDash, lineDefault.borderDash));\n        }\n\n        if (opts.labels && opts.labels.usePointStyle) {\n          // Recalculate x and y for drawPoint() because its expecting\n          // x and y to be center of figure (instead of top left)\n          var radius = fontSize * Math.SQRT2 / 2;\n          var offSet = radius / Math.SQRT2;\n          var centerX = x + offSet;\n          var centerY = y + offSet; // Draw pointStyle as legend symbol\n\n          helpers.canvas.drawPoint(ctx, legendItem.pointStyle, radius, centerX, centerY);\n        } else {\n          // Draw box as legend symbol\n          if (!isLineWidthZero) {\n            ctx.strokeRect(x, y, boxWidth, fontSize);\n          }\n\n          ctx.fillRect(x, y, boxWidth, fontSize);\n        }\n\n        ctx.restore();\n      };\n\n      var fillText = function fillText(x, y, legendItem, textWidth) {\n        var halfFontSize = fontSize / 2;\n        var xLeft = boxWidth + halfFontSize + x;\n        var yMiddle = y + halfFontSize;\n        ctx.fillText(legendItem.text, xLeft, yMiddle);\n\n        if (legendItem.hidden) {\n          // Strikethrough the text if hidden\n          ctx.beginPath();\n          ctx.lineWidth = 2;\n          ctx.moveTo(xLeft, yMiddle);\n          ctx.lineTo(xLeft + textWidth, yMiddle);\n          ctx.stroke();\n        }\n      }; // Horizontal\n\n\n      var isHorizontal = me.isHorizontal();\n\n      if (isHorizontal) {\n        cursor = {\n          x: me.left + (legendWidth - lineWidths[0]) / 2,\n          y: me.top + labelOpts.padding,\n          line: 0\n        };\n      } else {\n        cursor = {\n          x: me.left + labelOpts.padding,\n          y: me.top + labelOpts.padding,\n          line: 0\n        };\n      }\n\n      var itemHeight = fontSize + labelOpts.padding;\n      helpers.each(me.legendItems, function (legendItem, i) {\n        var textWidth = ctx.measureText(legendItem.text).width;\n        var width = boxWidth + fontSize / 2 + textWidth;\n        var x = cursor.x;\n        var y = cursor.y;\n\n        if (isHorizontal) {\n          if (x + width >= legendWidth) {\n            y = cursor.y += itemHeight;\n            cursor.line++;\n            x = cursor.x = me.left + (legendWidth - lineWidths[cursor.line]) / 2;\n          }\n        } else if (y + itemHeight > me.bottom) {\n          x = cursor.x = x + me.columnWidths[cursor.line] + labelOpts.padding;\n          y = cursor.y = me.top + labelOpts.padding;\n          cursor.line++;\n        }\n\n        drawLegendBox(x, y, legendItem);\n        hitboxes[i].left = x;\n        hitboxes[i].top = y; // Fill the actual label\n\n        fillText(x, y, legendItem, textWidth);\n\n        if (isHorizontal) {\n          cursor.x += width + labelOpts.padding;\n        } else {\n          cursor.y += itemHeight;\n        }\n      });\n    }\n  },\n\n  /**\n   * Handle an event\n   * @private\n   * @param {IEvent} event - The event to handle\n   * @return {Boolean} true if a change occured\n   */\n  handleEvent: function handleEvent(e) {\n    var me = this;\n    var opts = me.options;\n    var type = e.type === 'mouseup' ? 'click' : e.type;\n    var changed = false;\n\n    if (type === 'mousemove') {\n      if (!opts.onHover) {\n        return;\n      }\n    } else if (type === 'click') {\n      if (!opts.onClick) {\n        return;\n      }\n    } else {\n      return;\n    } // Chart event already has relative position in it\n\n\n    var x = e.x;\n    var y = e.y;\n\n    if (x >= me.left && x <= me.right && y >= me.top && y <= me.bottom) {\n      // See if we are touching one of the dataset boxes\n      var lh = me.legendHitBoxes;\n\n      for (var i = 0; i < lh.length; ++i) {\n        var hitBox = lh[i];\n\n        if (x >= hitBox.left && x <= hitBox.left + hitBox.width && y >= hitBox.top && y <= hitBox.top + hitBox.height) {\n          // Touching an element\n          if (type === 'click') {\n            // use e.native for backwards compatibility\n            opts.onClick.call(me, e.native, me.legendItems[i]);\n            changed = true;\n            break;\n          } else if (type === 'mousemove') {\n            // use e.native for backwards compatibility\n            opts.onHover.call(me, e.native, me.legendItems[i]);\n            changed = true;\n            break;\n          }\n        }\n      }\n    }\n\n    return changed;\n  }\n});\n\nfunction createNewLegendAndAttach(chart, legendOpts) {\n  var legend = new Legend({\n    ctx: chart.ctx,\n    options: legendOpts,\n    chart: chart\n  });\n  layouts.configure(chart, legend, legendOpts);\n  layouts.addBox(chart, legend);\n  chart.legend = legend;\n}\n\nmodule.exports = {\n  id: 'legend',\n\n  /**\n   * Backward compatibility: since 2.1.5, the legend is registered as a plugin, making\n   * Chart.Legend obsolete. To avoid a breaking change, we export the Legend as part of\n   * the plugin, which one will be re-exposed in the chart.js file.\n   * https://github.com/chartjs/Chart.js/pull/2640\n   * @private\n   */\n  _element: Legend,\n  beforeInit: function beforeInit(chart) {\n    var legendOpts = chart.options.legend;\n\n    if (legendOpts) {\n      createNewLegendAndAttach(chart, legendOpts);\n    }\n  },\n  beforeUpdate: function beforeUpdate(chart) {\n    var legendOpts = chart.options.legend;\n    var legend = chart.legend;\n\n    if (legendOpts) {\n      helpers.mergeIf(legendOpts, defaults.global.legend);\n\n      if (legend) {\n        layouts.configure(chart, legend, legendOpts);\n        legend.options = legendOpts;\n      } else {\n        createNewLegendAndAttach(chart, legendOpts);\n      }\n    } else if (legend) {\n      layouts.removeBox(chart, legend);\n      delete chart.legend;\n    }\n  },\n  afterEvent: function afterEvent(chart, e) {\n    var legend = chart.legend;\n\n    if (legend) {\n      legend.handleEvent(e);\n    }\n  }\n};","'use strict';\n\nvar defaults = require('../core/core.defaults');\n\nvar Element = require('../core/core.element');\n\nvar helpers = require('../helpers/index');\n\nvar layouts = require('../core/core.layouts');\n\nvar noop = helpers.noop;\n\ndefaults._set('global', {\n  title: {\n    display: false,\n    fontStyle: 'bold',\n    fullWidth: true,\n    lineHeight: 1.2,\n    padding: 10,\n    position: 'top',\n    text: '',\n    weight: 2000 // by default greater than legend (1000) to be above\n\n  }\n});\n/**\n * IMPORTANT: this class is exposed publicly as Chart.Legend, backward compatibility required!\n */\n\n\nvar Title = Element.extend({\n  initialize: function initialize(config) {\n    var me = this;\n    helpers.extend(me, config); // Contains hit boxes for each dataset (in dataset order)\n\n    me.legendHitBoxes = [];\n  },\n  // These methods are ordered by lifecycle. Utilities then follow.\n  beforeUpdate: noop,\n  update: function update(maxWidth, maxHeight, margins) {\n    var me = this; // Update Lifecycle - Probably don't want to ever extend or overwrite this function ;)\n\n    me.beforeUpdate(); // Absorb the master measurements\n\n    me.maxWidth = maxWidth;\n    me.maxHeight = maxHeight;\n    me.margins = margins; // Dimensions\n\n    me.beforeSetDimensions();\n    me.setDimensions();\n    me.afterSetDimensions(); // Labels\n\n    me.beforeBuildLabels();\n    me.buildLabels();\n    me.afterBuildLabels(); // Fit\n\n    me.beforeFit();\n    me.fit();\n    me.afterFit(); //\n\n    me.afterUpdate();\n    return me.minSize;\n  },\n  afterUpdate: noop,\n  //\n  beforeSetDimensions: noop,\n  setDimensions: function setDimensions() {\n    var me = this; // Set the unconstrained dimension before label rotation\n\n    if (me.isHorizontal()) {\n      // Reset position before calculating rotation\n      me.width = me.maxWidth;\n      me.left = 0;\n      me.right = me.width;\n    } else {\n      me.height = me.maxHeight; // Reset position before calculating rotation\n\n      me.top = 0;\n      me.bottom = me.height;\n    } // Reset padding\n\n\n    me.paddingLeft = 0;\n    me.paddingTop = 0;\n    me.paddingRight = 0;\n    me.paddingBottom = 0; // Reset minSize\n\n    me.minSize = {\n      width: 0,\n      height: 0\n    };\n  },\n  afterSetDimensions: noop,\n  //\n  beforeBuildLabels: noop,\n  buildLabels: noop,\n  afterBuildLabels: noop,\n  //\n  beforeFit: noop,\n  fit: function fit() {\n    var me = this;\n    var valueOrDefault = helpers.valueOrDefault;\n    var opts = me.options;\n    var display = opts.display;\n    var fontSize = valueOrDefault(opts.fontSize, defaults.global.defaultFontSize);\n    var minSize = me.minSize;\n    var lineCount = helpers.isArray(opts.text) ? opts.text.length : 1;\n    var lineHeight = helpers.options.toLineHeight(opts.lineHeight, fontSize);\n    var textSize = display ? lineCount * lineHeight + opts.padding * 2 : 0;\n\n    if (me.isHorizontal()) {\n      minSize.width = me.maxWidth; // fill all the width\n\n      minSize.height = textSize;\n    } else {\n      minSize.width = textSize;\n      minSize.height = me.maxHeight; // fill all the height\n    }\n\n    me.width = minSize.width;\n    me.height = minSize.height;\n  },\n  afterFit: noop,\n  // Shared Methods\n  isHorizontal: function isHorizontal() {\n    var pos = this.options.position;\n    return pos === 'top' || pos === 'bottom';\n  },\n  // Actually draw the title block on the canvas\n  draw: function draw() {\n    var me = this;\n    var ctx = me.ctx;\n    var valueOrDefault = helpers.valueOrDefault;\n    var opts = me.options;\n    var globalDefaults = defaults.global;\n\n    if (opts.display) {\n      var fontSize = valueOrDefault(opts.fontSize, globalDefaults.defaultFontSize);\n      var fontStyle = valueOrDefault(opts.fontStyle, globalDefaults.defaultFontStyle);\n      var fontFamily = valueOrDefault(opts.fontFamily, globalDefaults.defaultFontFamily);\n      var titleFont = helpers.fontString(fontSize, fontStyle, fontFamily);\n      var lineHeight = helpers.options.toLineHeight(opts.lineHeight, fontSize);\n      var offset = lineHeight / 2 + opts.padding;\n      var rotation = 0;\n      var top = me.top;\n      var left = me.left;\n      var bottom = me.bottom;\n      var right = me.right;\n      var maxWidth, titleX, titleY;\n      ctx.fillStyle = valueOrDefault(opts.fontColor, globalDefaults.defaultFontColor); // render in correct colour\n\n      ctx.font = titleFont; // Horizontal\n\n      if (me.isHorizontal()) {\n        titleX = left + (right - left) / 2; // midpoint of the width\n\n        titleY = top + offset;\n        maxWidth = right - left;\n      } else {\n        titleX = opts.position === 'left' ? left + offset : right - offset;\n        titleY = top + (bottom - top) / 2;\n        maxWidth = bottom - top;\n        rotation = Math.PI * (opts.position === 'left' ? -0.5 : 0.5);\n      }\n\n      ctx.save();\n      ctx.translate(titleX, titleY);\n      ctx.rotate(rotation);\n      ctx.textAlign = 'center';\n      ctx.textBaseline = 'middle';\n      var text = opts.text;\n\n      if (helpers.isArray(text)) {\n        var y = 0;\n\n        for (var i = 0; i < text.length; ++i) {\n          ctx.fillText(text[i], 0, y, maxWidth);\n          y += lineHeight;\n        }\n      } else {\n        ctx.fillText(text, 0, 0, maxWidth);\n      }\n\n      ctx.restore();\n    }\n  }\n});\n\nfunction createNewTitleBlockAndAttach(chart, titleOpts) {\n  var title = new Title({\n    ctx: chart.ctx,\n    options: titleOpts,\n    chart: chart\n  });\n  layouts.configure(chart, title, titleOpts);\n  layouts.addBox(chart, title);\n  chart.titleBlock = title;\n}\n\nmodule.exports = {\n  id: 'title',\n\n  /**\n   * Backward compatibility: since 2.1.5, the title is registered as a plugin, making\n   * Chart.Title obsolete. To avoid a breaking change, we export the Title as part of\n   * the plugin, which one will be re-exposed in the chart.js file.\n   * https://github.com/chartjs/Chart.js/pull/2640\n   * @private\n   */\n  _element: Title,\n  beforeInit: function beforeInit(chart) {\n    var titleOpts = chart.options.title;\n\n    if (titleOpts) {\n      createNewTitleBlockAndAttach(chart, titleOpts);\n    }\n  },\n  beforeUpdate: function beforeUpdate(chart) {\n    var titleOpts = chart.options.title;\n    var titleBlock = chart.titleBlock;\n\n    if (titleOpts) {\n      helpers.mergeIf(titleOpts, defaults.global.title);\n\n      if (titleBlock) {\n        layouts.configure(chart, titleBlock, titleOpts);\n        titleBlock.options = titleOpts;\n      } else {\n        createNewTitleBlockAndAttach(chart, titleOpts);\n      }\n    } else if (titleBlock) {\n      layouts.removeBox(chart, titleBlock);\n      delete chart.titleBlock;\n    }\n  }\n};","var baseIsEqual = require('./_baseIsEqual');\n/**\n * Performs a deep comparison between two values to determine if they are\n * equivalent.\n *\n * **Note:** This method supports comparing arrays, array buffers, booleans,\n * date objects, error objects, maps, numbers, `Object` objects, regexes,\n * sets, strings, symbols, and typed arrays. `Object` objects are compared\n * by their own, not inherited, enumerable properties. Functions and DOM\n * nodes are compared by strict equality, i.e. `===`.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to compare.\n * @param {*} other The other value to compare.\n * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n * @example\n *\n * var object = { 'a': 1 };\n * var other = { 'a': 1 };\n *\n * _.isEqual(object, other);\n * // => true\n *\n * object === other;\n * // => false\n */\n\n\nfunction isEqual(value, other) {\n  return baseIsEqual(value, other);\n}\n\nmodule.exports = isEqual;","var createFind = require('./_createFind'),\n    findIndex = require('./findIndex');\n/**\n * Iterates over elements of `collection`, returning the first element\n * `predicate` returns truthy for. The predicate is invoked with three\n * arguments: (value, index|key, collection).\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Collection\n * @param {Array|Object} collection The collection to inspect.\n * @param {Function} [predicate=_.identity] The function invoked per iteration.\n * @param {number} [fromIndex=0] The index to search from.\n * @returns {*} Returns the matched element, else `undefined`.\n * @example\n *\n * var users = [\n *   { 'user': 'barney',  'age': 36, 'active': true },\n *   { 'user': 'fred',    'age': 40, 'active': false },\n *   { 'user': 'pebbles', 'age': 1,  'active': true }\n * ];\n *\n * _.find(users, function(o) { return o.age < 40; });\n * // => object for 'barney'\n *\n * // The `_.matches` iteratee shorthand.\n * _.find(users, { 'age': 1, 'active': true });\n * // => object for 'pebbles'\n *\n * // The `_.matchesProperty` iteratee shorthand.\n * _.find(users, ['active', false]);\n * // => object for 'fred'\n *\n * // The `_.property` iteratee shorthand.\n * _.find(users, 'active');\n * // => object for 'barney'\n */\n\n\nvar find = createFind(findIndex);\nmodule.exports = find;","var baseIteratee = require('./_baseIteratee'),\n    isArrayLike = require('./isArrayLike'),\n    keys = require('./keys');\n/**\n * Creates a `_.find` or `_.findLast` function.\n *\n * @private\n * @param {Function} findIndexFunc The function to find the collection index.\n * @returns {Function} Returns the new find function.\n */\n\n\nfunction createFind(findIndexFunc) {\n  return function (collection, predicate, fromIndex) {\n    var iterable = Object(collection);\n\n    if (!isArrayLike(collection)) {\n      var iteratee = baseIteratee(predicate, 3);\n      collection = keys(collection);\n\n      predicate = function predicate(key) {\n        return iteratee(iterable[key], key, iterable);\n      };\n    }\n\n    var index = findIndexFunc(collection, predicate, fromIndex);\n    return index > -1 ? iterable[iteratee ? collection[index] : index] : undefined;\n  };\n}\n\nmodule.exports = createFind;","var baseAssignValue = require('./_baseAssignValue'),\n    createAggregator = require('./_createAggregator');\n/**\n * Creates an object composed of keys generated from the results of running\n * each element of `collection` thru `iteratee`. The corresponding value of\n * each key is the last element responsible for generating the key. The\n * iteratee is invoked with one argument: (value).\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Collection\n * @param {Array|Object} collection The collection to iterate over.\n * @param {Function} [iteratee=_.identity] The iteratee to transform keys.\n * @returns {Object} Returns the composed aggregate object.\n * @example\n *\n * var array = [\n *   { 'dir': 'left', 'code': 97 },\n *   { 'dir': 'right', 'code': 100 }\n * ];\n *\n * _.keyBy(array, function(o) {\n *   return String.fromCharCode(o.code);\n * });\n * // => { 'a': { 'dir': 'left', 'code': 97 }, 'd': { 'dir': 'right', 'code': 100 } }\n *\n * _.keyBy(array, 'dir');\n * // => { 'left': { 'dir': 'left', 'code': 97 }, 'right': { 'dir': 'right', 'code': 100 } }\n */\n\n\nvar keyBy = createAggregator(function (result, value, key) {\n  baseAssignValue(result, key, value);\n});\nmodule.exports = keyBy;","var arrayAggregator = require('./_arrayAggregator'),\n    baseAggregator = require('./_baseAggregator'),\n    baseIteratee = require('./_baseIteratee'),\n    isArray = require('./isArray');\n/**\n * Creates a function like `_.groupBy`.\n *\n * @private\n * @param {Function} setter The function to set accumulator values.\n * @param {Function} [initializer] The accumulator object initializer.\n * @returns {Function} Returns the new aggregator function.\n */\n\n\nfunction createAggregator(setter, initializer) {\n  return function (collection, iteratee) {\n    var func = isArray(collection) ? arrayAggregator : baseAggregator,\n        accumulator = initializer ? initializer() : {};\n    return func(collection, setter, baseIteratee(iteratee, 2), accumulator);\n  };\n}\n\nmodule.exports = createAggregator;","/**\n * A specialized version of `baseAggregator` for arrays.\n *\n * @private\n * @param {Array} [array] The array to iterate over.\n * @param {Function} setter The function to set `accumulator` values.\n * @param {Function} iteratee The iteratee to transform keys.\n * @param {Object} accumulator The initial aggregated object.\n * @returns {Function} Returns `accumulator`.\n */\nfunction arrayAggregator(array, setter, iteratee, accumulator) {\n  var index = -1,\n      length = array == null ? 0 : array.length;\n\n  while (++index < length) {\n    var value = array[index];\n    setter(accumulator, value, iteratee(value), array);\n  }\n\n  return accumulator;\n}\n\nmodule.exports = arrayAggregator;","var baseEach = require('./_baseEach');\n/**\n * Aggregates elements of `collection` on `accumulator` with keys transformed\n * by `iteratee` and values set by `setter`.\n *\n * @private\n * @param {Array|Object} collection The collection to iterate over.\n * @param {Function} setter The function to set `accumulator` values.\n * @param {Function} iteratee The iteratee to transform keys.\n * @param {Object} accumulator The initial aggregated object.\n * @returns {Function} Returns `accumulator`.\n */\n\n\nfunction baseAggregator(collection, setter, iteratee, accumulator) {\n  baseEach(collection, function (value, key, collection) {\n    setter(accumulator, value, iteratee(value), collection);\n  });\n  return accumulator;\n}\n\nmodule.exports = baseAggregator;","// shim for using process in browser\nvar process = module.exports = {}; // cached from whatever global is present so that test runners that stub it\n// don't break things.  But we need to wrap it in a try catch in case it is\n// wrapped in strict mode code which doesn't define any globals.  It's inside a\n// function because try/catches deoptimize in certain engines.\n\nvar cachedSetTimeout;\nvar cachedClearTimeout;\n\nfunction defaultSetTimout() {\n  throw new Error('setTimeout has not been defined');\n}\n\nfunction defaultClearTimeout() {\n  throw new Error('clearTimeout has not been defined');\n}\n\n(function () {\n  try {\n    if (typeof setTimeout === 'function') {\n      cachedSetTimeout = setTimeout;\n    } else {\n      cachedSetTimeout = defaultSetTimout;\n    }\n  } catch (e) {\n    cachedSetTimeout = defaultSetTimout;\n  }\n\n  try {\n    if (typeof clearTimeout === 'function') {\n      cachedClearTimeout = clearTimeout;\n    } else {\n      cachedClearTimeout = defaultClearTimeout;\n    }\n  } catch (e) {\n    cachedClearTimeout = defaultClearTimeout;\n  }\n})();\n\nfunction runTimeout(fun) {\n  if (cachedSetTimeout === setTimeout) {\n    //normal enviroments in sane situations\n    return setTimeout(fun, 0);\n  } // if setTimeout wasn't available but was latter defined\n\n\n  if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {\n    cachedSetTimeout = setTimeout;\n    return setTimeout(fun, 0);\n  }\n\n  try {\n    // when when somebody has screwed with setTimeout but no I.E. maddness\n    return cachedSetTimeout(fun, 0);\n  } catch (e) {\n    try {\n      // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally\n      return cachedSetTimeout.call(null, fun, 0);\n    } catch (e) {\n      // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error\n      return cachedSetTimeout.call(this, fun, 0);\n    }\n  }\n}\n\nfunction runClearTimeout(marker) {\n  if (cachedClearTimeout === clearTimeout) {\n    //normal enviroments in sane situations\n    return clearTimeout(marker);\n  } // if clearTimeout wasn't available but was latter defined\n\n\n  if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {\n    cachedClearTimeout = clearTimeout;\n    return clearTimeout(marker);\n  }\n\n  try {\n    // when when somebody has screwed with setTimeout but no I.E. maddness\n    return cachedClearTimeout(marker);\n  } catch (e) {\n    try {\n      // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally\n      return cachedClearTimeout.call(null, marker);\n    } catch (e) {\n      // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.\n      // Some versions of I.E. have different rules for clearTimeout vs setTimeout\n      return cachedClearTimeout.call(this, marker);\n    }\n  }\n}\n\nvar queue = [];\nvar draining = false;\nvar currentQueue;\nvar queueIndex = -1;\n\nfunction cleanUpNextTick() {\n  if (!draining || !currentQueue) {\n    return;\n  }\n\n  draining = false;\n\n  if (currentQueue.length) {\n    queue = currentQueue.concat(queue);\n  } else {\n    queueIndex = -1;\n  }\n\n  if (queue.length) {\n    drainQueue();\n  }\n}\n\nfunction drainQueue() {\n  if (draining) {\n    return;\n  }\n\n  var timeout = runTimeout(cleanUpNextTick);\n  draining = true;\n  var len = queue.length;\n\n  while (len) {\n    currentQueue = queue;\n    queue = [];\n\n    while (++queueIndex < len) {\n      if (currentQueue) {\n        currentQueue[queueIndex].run();\n      }\n    }\n\n    queueIndex = -1;\n    len = queue.length;\n  }\n\n  currentQueue = null;\n  draining = false;\n  runClearTimeout(timeout);\n}\n\nprocess.nextTick = function (fun) {\n  var args = new Array(arguments.length - 1);\n\n  if (arguments.length > 1) {\n    for (var i = 1; i < arguments.length; i++) {\n      args[i - 1] = arguments[i];\n    }\n  }\n\n  queue.push(new Item(fun, args));\n\n  if (queue.length === 1 && !draining) {\n    runTimeout(drainQueue);\n  }\n}; // v8 likes predictible objects\n\n\nfunction Item(fun, array) {\n  this.fun = fun;\n  this.array = array;\n}\n\nItem.prototype.run = function () {\n  this.fun.apply(null, this.array);\n};\n\nprocess.title = 'browser';\nprocess.browser = true;\nprocess.env = {};\nprocess.argv = [];\nprocess.version = ''; // empty string to avoid regexp issues\n\nprocess.versions = {};\n\nfunction noop() {}\n\nprocess.on = noop;\nprocess.addListener = noop;\nprocess.once = noop;\nprocess.off = noop;\nprocess.removeListener = noop;\nprocess.removeAllListeners = noop;\nprocess.emit = noop;\nprocess.prependListener = noop;\nprocess.prependOnceListener = noop;\n\nprocess.listeners = function (name) {\n  return [];\n};\n\nprocess.binding = function (name) {\n  throw new Error('process.binding is not supported');\n};\n\nprocess.cwd = function () {\n  return '/';\n};\n\nprocess.chdir = function (dir) {\n  throw new Error('process.chdir is not supported');\n};\n\nprocess.umask = function () {\n  return 0;\n};","'use strict';\n\nvar defaults = require('./core.defaults');\n\nvar helpers = require('../helpers/index');\n\nvar layouts = require('./core.layouts');\n\nmodule.exports = {\n  // Scale registration object. Extensions can register new scale types (such as log or DB scales) and then\n  // use the new chart options to grab the correct scale\n  constructors: {},\n  // Use a registration function so that we can move to an ES6 map when we no longer need to support\n  // old browsers\n  // Scale config defaults\n  defaults: {},\n  registerScaleType: function registerScaleType(type, scaleConstructor, scaleDefaults) {\n    this.constructors[type] = scaleConstructor;\n    this.defaults[type] = helpers.clone(scaleDefaults);\n  },\n  getScaleConstructor: function getScaleConstructor(type) {\n    return this.constructors.hasOwnProperty(type) ? this.constructors[type] : undefined;\n  },\n  getScaleDefaults: function getScaleDefaults(type) {\n    // Return the scale defaults merged with the global settings so that we always use the latest ones\n    return this.defaults.hasOwnProperty(type) ? helpers.merge({}, [defaults.scale, this.defaults[type]]) : {};\n  },\n  updateScaleDefaults: function updateScaleDefaults(type, additions) {\n    var me = this;\n\n    if (me.defaults.hasOwnProperty(type)) {\n      me.defaults[type] = helpers.extend(me.defaults[type], additions);\n    }\n  },\n  addScalesToLayout: function addScalesToLayout(chart) {\n    // Adds each scale to the chart.boxes array to be sized accordingly\n    helpers.each(chart.scales, function (scale) {\n      // Set ILayoutItem parameters for backwards compatibility\n      scale.fullWidth = scale.options.fullWidth;\n      scale.position = scale.options.position;\n      scale.weight = scale.options.weight;\n      layouts.addBox(chart, scale);\n    });\n  }\n};","'use strict';\n\nmodule.exports = {};\nmodule.exports.Arc = require('./element.arc');\nmodule.exports.Line = require('./element.line');\nmodule.exports.Point = require('./element.point');\nmodule.exports.Rectangle = require('./element.rectangle');","'use strict';\n\nvar helpers = require('../helpers/index');\n\nfunction filterByPosition(array, position) {\n  return helpers.where(array, function (v) {\n    return v.position === position;\n  });\n}\n\nfunction sortByWeight(array, reverse) {\n  array.forEach(function (v, i) {\n    v._tmpIndex_ = i;\n    return v;\n  });\n  array.sort(function (a, b) {\n    var v0 = reverse ? b : a;\n    var v1 = reverse ? a : b;\n    return v0.weight === v1.weight ? v0._tmpIndex_ - v1._tmpIndex_ : v0.weight - v1.weight;\n  });\n  array.forEach(function (v) {\n    delete v._tmpIndex_;\n  });\n}\n/**\n * @interface ILayoutItem\n * @prop {String} position - The position of the item in the chart layout. Possible values are\n * 'left', 'top', 'right', 'bottom', and 'chartArea'\n * @prop {Number} weight - The weight used to sort the item. Higher weights are further away from the chart area\n * @prop {Boolean} fullWidth - if true, and the item is horizontal, then push vertical boxes down\n * @prop {Function} isHorizontal - returns true if the layout item is horizontal (ie. top or bottom)\n * @prop {Function} update - Takes two parameters: width and height. Returns size of item\n * @prop {Function} getPadding -  Returns an object with padding on the edges\n * @prop {Number} width - Width of item. Must be valid after update()\n * @prop {Number} height - Height of item. Must be valid after update()\n * @prop {Number} left - Left edge of the item. Set by layout system and cannot be used in update\n * @prop {Number} top - Top edge of the item. Set by layout system and cannot be used in update\n * @prop {Number} right - Right edge of the item. Set by layout system and cannot be used in update\n * @prop {Number} bottom - Bottom edge of the item. Set by layout system and cannot be used in update\n */\n// The layout service is very self explanatory.  It's responsible for the layout within a chart.\n// Scales, Legends and Plugins all rely on the layout service and can easily register to be placed anywhere they need\n// It is this service's responsibility of carrying out that layout.\n\n\nmodule.exports = {\n  defaults: {},\n\n  /**\n   * Register a box to a chart.\n   * A box is simply a reference to an object that requires layout. eg. Scales, Legend, Title.\n   * @param {Chart} chart - the chart to use\n   * @param {ILayoutItem} item - the item to add to be layed out\n   */\n  addBox: function addBox(chart, item) {\n    if (!chart.boxes) {\n      chart.boxes = [];\n    } // initialize item with default values\n\n\n    item.fullWidth = item.fullWidth || false;\n    item.position = item.position || 'top';\n    item.weight = item.weight || 0;\n    chart.boxes.push(item);\n  },\n\n  /**\n   * Remove a layoutItem from a chart\n   * @param {Chart} chart - the chart to remove the box from\n   * @param {Object} layoutItem - the item to remove from the layout\n   */\n  removeBox: function removeBox(chart, layoutItem) {\n    var index = chart.boxes ? chart.boxes.indexOf(layoutItem) : -1;\n\n    if (index !== -1) {\n      chart.boxes.splice(index, 1);\n    }\n  },\n\n  /**\n   * Sets (or updates) options on the given `item`.\n   * @param {Chart} chart - the chart in which the item lives (or will be added to)\n   * @param {Object} item - the item to configure with the given options\n   * @param {Object} options - the new item options.\n   */\n  configure: function configure(chart, item, options) {\n    var props = ['fullWidth', 'position', 'weight'];\n    var ilen = props.length;\n    var i = 0;\n    var prop;\n\n    for (; i < ilen; ++i) {\n      prop = props[i];\n\n      if (options.hasOwnProperty(prop)) {\n        item[prop] = options[prop];\n      }\n    }\n  },\n\n  /**\n   * Fits boxes of the given chart into the given size by having each box measure itself\n   * then running a fitting algorithm\n   * @param {Chart} chart - the chart\n   * @param {Number} width - the width to fit into\n   * @param {Number} height - the height to fit into\n   */\n  update: function update(chart, width, height) {\n    if (!chart) {\n      return;\n    }\n\n    var layoutOptions = chart.options.layout || {};\n    var padding = helpers.options.toPadding(layoutOptions.padding);\n    var leftPadding = padding.left;\n    var rightPadding = padding.right;\n    var topPadding = padding.top;\n    var bottomPadding = padding.bottom;\n    var leftBoxes = filterByPosition(chart.boxes, 'left');\n    var rightBoxes = filterByPosition(chart.boxes, 'right');\n    var topBoxes = filterByPosition(chart.boxes, 'top');\n    var bottomBoxes = filterByPosition(chart.boxes, 'bottom');\n    var chartAreaBoxes = filterByPosition(chart.boxes, 'chartArea'); // Sort boxes by weight. A higher weight is further away from the chart area\n\n    sortByWeight(leftBoxes, true);\n    sortByWeight(rightBoxes, false);\n    sortByWeight(topBoxes, true);\n    sortByWeight(bottomBoxes, false); // Essentially we now have any number of boxes on each of the 4 sides.\n    // Our canvas looks like the following.\n    // The areas L1 and L2 are the left axes. R1 is the right axis, T1 is the top axis and\n    // B1 is the bottom axis\n    // There are also 4 quadrant-like locations (left to right instead of clockwise) reserved for chart overlays\n    // These locations are single-box locations only, when trying to register a chartArea location that is already taken,\n    // an error will be thrown.\n    //\n    // |----------------------------------------------------|\n    // |                  T1 (Full Width)                   |\n    // |----------------------------------------------------|\n    // |    |    |                 T2                  |    |\n    // |    |----|-------------------------------------|----|\n    // |    |    | C1 |                           | C2 |    |\n    // |    |    |----|                           |----|    |\n    // |    |    |                                     |    |\n    // | L1 | L2 |           ChartArea (C0)            | R1 |\n    // |    |    |                                     |    |\n    // |    |    |----|                           |----|    |\n    // |    |    | C3 |                           | C4 |    |\n    // |    |----|-------------------------------------|----|\n    // |    |    |                 B1                  |    |\n    // |----------------------------------------------------|\n    // |                  B2 (Full Width)                   |\n    // |----------------------------------------------------|\n    //\n    // What we do to find the best sizing, we do the following\n    // 1. Determine the minimum size of the chart area.\n    // 2. Split the remaining width equally between each vertical axis\n    // 3. Split the remaining height equally between each horizontal axis\n    // 4. Give each layout the maximum size it can be. The layout will return it's minimum size\n    // 5. Adjust the sizes of each axis based on it's minimum reported size.\n    // 6. Refit each axis\n    // 7. Position each axis in the final location\n    // 8. Tell the chart the final location of the chart area\n    // 9. Tell any axes that overlay the chart area the positions of the chart area\n    // Step 1\n\n    var chartWidth = width - leftPadding - rightPadding;\n    var chartHeight = height - topPadding - bottomPadding;\n    var chartAreaWidth = chartWidth / 2; // min 50%\n\n    var chartAreaHeight = chartHeight / 2; // min 50%\n    // Step 2\n\n    var verticalBoxWidth = (width - chartAreaWidth) / (leftBoxes.length + rightBoxes.length); // Step 3\n\n    var horizontalBoxHeight = (height - chartAreaHeight) / (topBoxes.length + bottomBoxes.length); // Step 4\n\n    var maxChartAreaWidth = chartWidth;\n    var maxChartAreaHeight = chartHeight;\n    var minBoxSizes = [];\n\n    function getMinimumBoxSize(box) {\n      var minSize;\n      var isHorizontal = box.isHorizontal();\n\n      if (isHorizontal) {\n        minSize = box.update(box.fullWidth ? chartWidth : maxChartAreaWidth, horizontalBoxHeight);\n        maxChartAreaHeight -= minSize.height;\n      } else {\n        minSize = box.update(verticalBoxWidth, maxChartAreaHeight);\n        maxChartAreaWidth -= minSize.width;\n      }\n\n      minBoxSizes.push({\n        horizontal: isHorizontal,\n        minSize: minSize,\n        box: box\n      });\n    }\n\n    helpers.each(leftBoxes.concat(rightBoxes, topBoxes, bottomBoxes), getMinimumBoxSize); // If a horizontal box has padding, we move the left boxes over to avoid ugly charts (see issue #2478)\n\n    var maxHorizontalLeftPadding = 0;\n    var maxHorizontalRightPadding = 0;\n    var maxVerticalTopPadding = 0;\n    var maxVerticalBottomPadding = 0;\n    helpers.each(topBoxes.concat(bottomBoxes), function (horizontalBox) {\n      if (horizontalBox.getPadding) {\n        var boxPadding = horizontalBox.getPadding();\n        maxHorizontalLeftPadding = Math.max(maxHorizontalLeftPadding, boxPadding.left);\n        maxHorizontalRightPadding = Math.max(maxHorizontalRightPadding, boxPadding.right);\n      }\n    });\n    helpers.each(leftBoxes.concat(rightBoxes), function (verticalBox) {\n      if (verticalBox.getPadding) {\n        var boxPadding = verticalBox.getPadding();\n        maxVerticalTopPadding = Math.max(maxVerticalTopPadding, boxPadding.top);\n        maxVerticalBottomPadding = Math.max(maxVerticalBottomPadding, boxPadding.bottom);\n      }\n    }); // At this point, maxChartAreaHeight and maxChartAreaWidth are the size the chart area could\n    // be if the axes are drawn at their minimum sizes.\n    // Steps 5 & 6\n\n    var totalLeftBoxesWidth = leftPadding;\n    var totalRightBoxesWidth = rightPadding;\n    var totalTopBoxesHeight = topPadding;\n    var totalBottomBoxesHeight = bottomPadding; // Function to fit a box\n\n    function fitBox(box) {\n      var minBoxSize = helpers.findNextWhere(minBoxSizes, function (minBox) {\n        return minBox.box === box;\n      });\n\n      if (minBoxSize) {\n        if (box.isHorizontal()) {\n          var scaleMargin = {\n            left: Math.max(totalLeftBoxesWidth, maxHorizontalLeftPadding),\n            right: Math.max(totalRightBoxesWidth, maxHorizontalRightPadding),\n            top: 0,\n            bottom: 0\n          }; // Don't use min size here because of label rotation. When the labels are rotated, their rotation highly depends\n          // on the margin. Sometimes they need to increase in size slightly\n\n          box.update(box.fullWidth ? chartWidth : maxChartAreaWidth, chartHeight / 2, scaleMargin);\n        } else {\n          box.update(minBoxSize.minSize.width, maxChartAreaHeight);\n        }\n      }\n    } // Update, and calculate the left and right margins for the horizontal boxes\n\n\n    helpers.each(leftBoxes.concat(rightBoxes), fitBox);\n    helpers.each(leftBoxes, function (box) {\n      totalLeftBoxesWidth += box.width;\n    });\n    helpers.each(rightBoxes, function (box) {\n      totalRightBoxesWidth += box.width;\n    }); // Set the Left and Right margins for the horizontal boxes\n\n    helpers.each(topBoxes.concat(bottomBoxes), fitBox); // Figure out how much margin is on the top and bottom of the vertical boxes\n\n    helpers.each(topBoxes, function (box) {\n      totalTopBoxesHeight += box.height;\n    });\n    helpers.each(bottomBoxes, function (box) {\n      totalBottomBoxesHeight += box.height;\n    });\n\n    function finalFitVerticalBox(box) {\n      var minBoxSize = helpers.findNextWhere(minBoxSizes, function (minSize) {\n        return minSize.box === box;\n      });\n      var scaleMargin = {\n        left: 0,\n        right: 0,\n        top: totalTopBoxesHeight,\n        bottom: totalBottomBoxesHeight\n      };\n\n      if (minBoxSize) {\n        box.update(minBoxSize.minSize.width, maxChartAreaHeight, scaleMargin);\n      }\n    } // Let the left layout know the final margin\n\n\n    helpers.each(leftBoxes.concat(rightBoxes), finalFitVerticalBox); // Recalculate because the size of each layout might have changed slightly due to the margins (label rotation for instance)\n\n    totalLeftBoxesWidth = leftPadding;\n    totalRightBoxesWidth = rightPadding;\n    totalTopBoxesHeight = topPadding;\n    totalBottomBoxesHeight = bottomPadding;\n    helpers.each(leftBoxes, function (box) {\n      totalLeftBoxesWidth += box.width;\n    });\n    helpers.each(rightBoxes, function (box) {\n      totalRightBoxesWidth += box.width;\n    });\n    helpers.each(topBoxes, function (box) {\n      totalTopBoxesHeight += box.height;\n    });\n    helpers.each(bottomBoxes, function (box) {\n      totalBottomBoxesHeight += box.height;\n    }); // We may be adding some padding to account for rotated x axis labels\n\n    var leftPaddingAddition = Math.max(maxHorizontalLeftPadding - totalLeftBoxesWidth, 0);\n    totalLeftBoxesWidth += leftPaddingAddition;\n    totalRightBoxesWidth += Math.max(maxHorizontalRightPadding - totalRightBoxesWidth, 0);\n    var topPaddingAddition = Math.max(maxVerticalTopPadding - totalTopBoxesHeight, 0);\n    totalTopBoxesHeight += topPaddingAddition;\n    totalBottomBoxesHeight += Math.max(maxVerticalBottomPadding - totalBottomBoxesHeight, 0); // Figure out if our chart area changed. This would occur if the dataset layout label rotation\n    // changed due to the application of the margins in step 6. Since we can only get bigger, this is safe to do\n    // without calling `fit` again\n\n    var newMaxChartAreaHeight = height - totalTopBoxesHeight - totalBottomBoxesHeight;\n    var newMaxChartAreaWidth = width - totalLeftBoxesWidth - totalRightBoxesWidth;\n\n    if (newMaxChartAreaWidth !== maxChartAreaWidth || newMaxChartAreaHeight !== maxChartAreaHeight) {\n      helpers.each(leftBoxes, function (box) {\n        box.height = newMaxChartAreaHeight;\n      });\n      helpers.each(rightBoxes, function (box) {\n        box.height = newMaxChartAreaHeight;\n      });\n      helpers.each(topBoxes, function (box) {\n        if (!box.fullWidth) {\n          box.width = newMaxChartAreaWidth;\n        }\n      });\n      helpers.each(bottomBoxes, function (box) {\n        if (!box.fullWidth) {\n          box.width = newMaxChartAreaWidth;\n        }\n      });\n      maxChartAreaHeight = newMaxChartAreaHeight;\n      maxChartAreaWidth = newMaxChartAreaWidth;\n    } // Step 7 - Position the boxes\n\n\n    var left = leftPadding + leftPaddingAddition;\n    var top = topPadding + topPaddingAddition;\n\n    function placeBox(box) {\n      if (box.isHorizontal()) {\n        box.left = box.fullWidth ? leftPadding : totalLeftBoxesWidth;\n        box.right = box.fullWidth ? width - rightPadding : totalLeftBoxesWidth + maxChartAreaWidth;\n        box.top = top;\n        box.bottom = top + box.height; // Move to next point\n\n        top = box.bottom;\n      } else {\n        box.left = left;\n        box.right = left + box.width;\n        box.top = totalTopBoxesHeight;\n        box.bottom = totalTopBoxesHeight + maxChartAreaHeight; // Move to next point\n\n        left = box.right;\n      }\n    }\n\n    helpers.each(leftBoxes.concat(topBoxes), placeBox); // Account for chart width and height\n\n    left += maxChartAreaWidth;\n    top += maxChartAreaHeight;\n    helpers.each(rightBoxes, placeBox);\n    helpers.each(bottomBoxes, placeBox); // Step 8\n\n    chart.chartArea = {\n      left: totalLeftBoxesWidth,\n      top: totalTopBoxesHeight,\n      right: totalLeftBoxesWidth + maxChartAreaWidth,\n      bottom: totalTopBoxesHeight + maxChartAreaHeight\n    }; // Step 9\n\n    helpers.each(chartAreaBoxes, function (box) {\n      box.left = chart.chartArea.left;\n      box.top = chart.chartArea.top;\n      box.right = chart.chartArea.right;\n      box.bottom = chart.chartArea.bottom;\n      box.update(maxChartAreaWidth, maxChartAreaHeight);\n    });\n  }\n};","'use strict';\n\nvar defaults = require('./core.defaults');\n\nvar Element = require('./core.element');\n\nvar helpers = require('../helpers/index');\n\nvar Ticks = require('./core.ticks');\n\ndefaults._set('scale', {\n  display: true,\n  position: 'left',\n  offset: false,\n  // grid line settings\n  gridLines: {\n    display: true,\n    color: 'rgba(0, 0, 0, 0.1)',\n    lineWidth: 1,\n    drawBorder: true,\n    drawOnChartArea: true,\n    drawTicks: true,\n    tickMarkLength: 10,\n    zeroLineWidth: 1,\n    zeroLineColor: 'rgba(0,0,0,0.25)',\n    zeroLineBorderDash: [],\n    zeroLineBorderDashOffset: 0.0,\n    offsetGridLines: false,\n    borderDash: [],\n    borderDashOffset: 0.0\n  },\n  // scale label\n  scaleLabel: {\n    // display property\n    display: false,\n    // actual label\n    labelString: '',\n    // line height\n    lineHeight: 1.2,\n    // top/bottom padding\n    padding: {\n      top: 4,\n      bottom: 4\n    }\n  },\n  // label settings\n  ticks: {\n    beginAtZero: false,\n    minRotation: 0,\n    maxRotation: 50,\n    mirror: false,\n    padding: 0,\n    reverse: false,\n    display: true,\n    autoSkip: true,\n    autoSkipPadding: 0,\n    labelOffset: 0,\n    // We pass through arrays to be rendered as multiline labels, we convert Others to strings here.\n    callback: Ticks.formatters.values,\n    minor: {},\n    major: {}\n  }\n});\n\nfunction labelsFromTicks(ticks) {\n  var labels = [];\n  var i, ilen;\n\n  for (i = 0, ilen = ticks.length; i < ilen; ++i) {\n    labels.push(ticks[i].label);\n  }\n\n  return labels;\n}\n\nfunction getLineValue(scale, index, offsetGridLines) {\n  var lineValue = scale.getPixelForTick(index);\n\n  if (offsetGridLines) {\n    if (index === 0) {\n      lineValue -= (scale.getPixelForTick(1) - lineValue) / 2;\n    } else {\n      lineValue -= (lineValue - scale.getPixelForTick(index - 1)) / 2;\n    }\n  }\n\n  return lineValue;\n}\n\nfunction computeTextSize(context, tick, font) {\n  return helpers.isArray(tick) ? helpers.longestText(context, font, tick) : context.measureText(tick).width;\n}\n\nfunction parseFontOptions(options) {\n  var valueOrDefault = helpers.valueOrDefault;\n  var globalDefaults = defaults.global;\n  var size = valueOrDefault(options.fontSize, globalDefaults.defaultFontSize);\n  var style = valueOrDefault(options.fontStyle, globalDefaults.defaultFontStyle);\n  var family = valueOrDefault(options.fontFamily, globalDefaults.defaultFontFamily);\n  return {\n    size: size,\n    style: style,\n    family: family,\n    font: helpers.fontString(size, style, family)\n  };\n}\n\nfunction parseLineHeight(options) {\n  return helpers.options.toLineHeight(helpers.valueOrDefault(options.lineHeight, 1.2), helpers.valueOrDefault(options.fontSize, defaults.global.defaultFontSize));\n}\n\nmodule.exports = Element.extend({\n  /**\n   * Get the padding needed for the scale\n   * @method getPadding\n   * @private\n   * @returns {Padding} the necessary padding\n   */\n  getPadding: function getPadding() {\n    var me = this;\n    return {\n      left: me.paddingLeft || 0,\n      top: me.paddingTop || 0,\n      right: me.paddingRight || 0,\n      bottom: me.paddingBottom || 0\n    };\n  },\n\n  /**\n   * Returns the scale tick objects ({label, major})\n   * @since 2.7\n   */\n  getTicks: function getTicks() {\n    return this._ticks;\n  },\n  // These methods are ordered by lifecyle. Utilities then follow.\n  // Any function defined here is inherited by all scale types.\n  // Any function can be extended by the scale type\n  mergeTicksOptions: function mergeTicksOptions() {\n    var ticks = this.options.ticks;\n\n    if (ticks.minor === false) {\n      ticks.minor = {\n        display: false\n      };\n    }\n\n    if (ticks.major === false) {\n      ticks.major = {\n        display: false\n      };\n    }\n\n    for (var key in ticks) {\n      if (key !== 'major' && key !== 'minor') {\n        if (typeof ticks.minor[key] === 'undefined') {\n          ticks.minor[key] = ticks[key];\n        }\n\n        if (typeof ticks.major[key] === 'undefined') {\n          ticks.major[key] = ticks[key];\n        }\n      }\n    }\n  },\n  beforeUpdate: function beforeUpdate() {\n    helpers.callback(this.options.beforeUpdate, [this]);\n  },\n  update: function update(maxWidth, maxHeight, margins) {\n    var me = this;\n    var i, ilen, labels, label, ticks, tick; // Update Lifecycle - Probably don't want to ever extend or overwrite this function ;)\n\n    me.beforeUpdate(); // Absorb the master measurements\n\n    me.maxWidth = maxWidth;\n    me.maxHeight = maxHeight;\n    me.margins = helpers.extend({\n      left: 0,\n      right: 0,\n      top: 0,\n      bottom: 0\n    }, margins);\n    me.longestTextCache = me.longestTextCache || {}; // Dimensions\n\n    me.beforeSetDimensions();\n    me.setDimensions();\n    me.afterSetDimensions(); // Data min/max\n\n    me.beforeDataLimits();\n    me.determineDataLimits();\n    me.afterDataLimits(); // Ticks - `this.ticks` is now DEPRECATED!\n    // Internal ticks are now stored as objects in the PRIVATE `this._ticks` member\n    // and must not be accessed directly from outside this class. `this.ticks` being\n    // around for long time and not marked as private, we can't change its structure\n    // without unexpected breaking changes. If you need to access the scale ticks,\n    // use scale.getTicks() instead.\n\n    me.beforeBuildTicks(); // New implementations should return an array of objects but for BACKWARD COMPAT,\n    // we still support no return (`this.ticks` internally set by calling this method).\n\n    ticks = me.buildTicks() || [];\n    me.afterBuildTicks();\n    me.beforeTickToLabelConversion(); // New implementations should return the formatted tick labels but for BACKWARD\n    // COMPAT, we still support no return (`this.ticks` internally changed by calling\n    // this method and supposed to contain only string values).\n\n    labels = me.convertTicksToLabels(ticks) || me.ticks;\n    me.afterTickToLabelConversion();\n    me.ticks = labels; // BACKWARD COMPATIBILITY\n    // IMPORTANT: from this point, we consider that `this.ticks` will NEVER change!\n    // BACKWARD COMPAT: synchronize `_ticks` with labels (so potentially `this.ticks`)\n\n    for (i = 0, ilen = labels.length; i < ilen; ++i) {\n      label = labels[i];\n      tick = ticks[i];\n\n      if (!tick) {\n        ticks.push(tick = {\n          label: label,\n          major: false\n        });\n      } else {\n        tick.label = label;\n      }\n    }\n\n    me._ticks = ticks; // Tick Rotation\n\n    me.beforeCalculateTickRotation();\n    me.calculateTickRotation();\n    me.afterCalculateTickRotation(); // Fit\n\n    me.beforeFit();\n    me.fit();\n    me.afterFit(); //\n\n    me.afterUpdate();\n    return me.minSize;\n  },\n  afterUpdate: function afterUpdate() {\n    helpers.callback(this.options.afterUpdate, [this]);\n  },\n  //\n  beforeSetDimensions: function beforeSetDimensions() {\n    helpers.callback(this.options.beforeSetDimensions, [this]);\n  },\n  setDimensions: function setDimensions() {\n    var me = this; // Set the unconstrained dimension before label rotation\n\n    if (me.isHorizontal()) {\n      // Reset position before calculating rotation\n      me.width = me.maxWidth;\n      me.left = 0;\n      me.right = me.width;\n    } else {\n      me.height = me.maxHeight; // Reset position before calculating rotation\n\n      me.top = 0;\n      me.bottom = me.height;\n    } // Reset padding\n\n\n    me.paddingLeft = 0;\n    me.paddingTop = 0;\n    me.paddingRight = 0;\n    me.paddingBottom = 0;\n  },\n  afterSetDimensions: function afterSetDimensions() {\n    helpers.callback(this.options.afterSetDimensions, [this]);\n  },\n  // Data limits\n  beforeDataLimits: function beforeDataLimits() {\n    helpers.callback(this.options.beforeDataLimits, [this]);\n  },\n  determineDataLimits: helpers.noop,\n  afterDataLimits: function afterDataLimits() {\n    helpers.callback(this.options.afterDataLimits, [this]);\n  },\n  //\n  beforeBuildTicks: function beforeBuildTicks() {\n    helpers.callback(this.options.beforeBuildTicks, [this]);\n  },\n  buildTicks: helpers.noop,\n  afterBuildTicks: function afterBuildTicks() {\n    helpers.callback(this.options.afterBuildTicks, [this]);\n  },\n  beforeTickToLabelConversion: function beforeTickToLabelConversion() {\n    helpers.callback(this.options.beforeTickToLabelConversion, [this]);\n  },\n  convertTicksToLabels: function convertTicksToLabels() {\n    var me = this; // Convert ticks to strings\n\n    var tickOpts = me.options.ticks;\n    me.ticks = me.ticks.map(tickOpts.userCallback || tickOpts.callback, this);\n  },\n  afterTickToLabelConversion: function afterTickToLabelConversion() {\n    helpers.callback(this.options.afterTickToLabelConversion, [this]);\n  },\n  //\n  beforeCalculateTickRotation: function beforeCalculateTickRotation() {\n    helpers.callback(this.options.beforeCalculateTickRotation, [this]);\n  },\n  calculateTickRotation: function calculateTickRotation() {\n    var me = this;\n    var context = me.ctx;\n    var tickOpts = me.options.ticks;\n    var labels = labelsFromTicks(me._ticks); // Get the width of each grid by calculating the difference\n    // between x offsets between 0 and 1.\n\n    var tickFont = parseFontOptions(tickOpts);\n    context.font = tickFont.font;\n    var labelRotation = tickOpts.minRotation || 0;\n\n    if (labels.length && me.options.display && me.isHorizontal()) {\n      var originalLabelWidth = helpers.longestText(context, tickFont.font, labels, me.longestTextCache);\n      var labelWidth = originalLabelWidth;\n      var cosRotation, sinRotation; // Allow 3 pixels x2 padding either side for label readability\n\n      var tickWidth = me.getPixelForTick(1) - me.getPixelForTick(0) - 6; // Max label rotation can be set or default to 90 - also act as a loop counter\n\n      while (labelWidth > tickWidth && labelRotation < tickOpts.maxRotation) {\n        var angleRadians = helpers.toRadians(labelRotation);\n        cosRotation = Math.cos(angleRadians);\n        sinRotation = Math.sin(angleRadians);\n\n        if (sinRotation * originalLabelWidth > me.maxHeight) {\n          // go back one step\n          labelRotation--;\n          break;\n        }\n\n        labelRotation++;\n        labelWidth = cosRotation * originalLabelWidth;\n      }\n    }\n\n    me.labelRotation = labelRotation;\n  },\n  afterCalculateTickRotation: function afterCalculateTickRotation() {\n    helpers.callback(this.options.afterCalculateTickRotation, [this]);\n  },\n  //\n  beforeFit: function beforeFit() {\n    helpers.callback(this.options.beforeFit, [this]);\n  },\n  fit: function fit() {\n    var me = this; // Reset\n\n    var minSize = me.minSize = {\n      width: 0,\n      height: 0\n    };\n    var labels = labelsFromTicks(me._ticks);\n    var opts = me.options;\n    var tickOpts = opts.ticks;\n    var scaleLabelOpts = opts.scaleLabel;\n    var gridLineOpts = opts.gridLines;\n    var display = opts.display;\n    var isHorizontal = me.isHorizontal();\n    var tickFont = parseFontOptions(tickOpts);\n    var tickMarkLength = opts.gridLines.tickMarkLength; // Width\n\n    if (isHorizontal) {\n      // subtract the margins to line up with the chartArea if we are a full width scale\n      minSize.width = me.isFullWidth() ? me.maxWidth - me.margins.left - me.margins.right : me.maxWidth;\n    } else {\n      minSize.width = display && gridLineOpts.drawTicks ? tickMarkLength : 0;\n    } // height\n\n\n    if (isHorizontal) {\n      minSize.height = display && gridLineOpts.drawTicks ? tickMarkLength : 0;\n    } else {\n      minSize.height = me.maxHeight; // fill all the height\n    } // Are we showing a title for the scale?\n\n\n    if (scaleLabelOpts.display && display) {\n      var scaleLabelLineHeight = parseLineHeight(scaleLabelOpts);\n      var scaleLabelPadding = helpers.options.toPadding(scaleLabelOpts.padding);\n      var deltaHeight = scaleLabelLineHeight + scaleLabelPadding.height;\n\n      if (isHorizontal) {\n        minSize.height += deltaHeight;\n      } else {\n        minSize.width += deltaHeight;\n      }\n    } // Don't bother fitting the ticks if we are not showing them\n\n\n    if (tickOpts.display && display) {\n      var largestTextWidth = helpers.longestText(me.ctx, tickFont.font, labels, me.longestTextCache);\n      var tallestLabelHeightInLines = helpers.numberOfLabelLines(labels);\n      var lineSpace = tickFont.size * 0.5;\n      var tickPadding = me.options.ticks.padding;\n\n      if (isHorizontal) {\n        // A horizontal axis is more constrained by the height.\n        me.longestLabelWidth = largestTextWidth;\n        var angleRadians = helpers.toRadians(me.labelRotation);\n        var cosRotation = Math.cos(angleRadians);\n        var sinRotation = Math.sin(angleRadians); // TODO - improve this calculation\n\n        var labelHeight = sinRotation * largestTextWidth + tickFont.size * tallestLabelHeightInLines + lineSpace * (tallestLabelHeightInLines - 1) + lineSpace; // padding\n\n        minSize.height = Math.min(me.maxHeight, minSize.height + labelHeight + tickPadding);\n        me.ctx.font = tickFont.font;\n        var firstLabelWidth = computeTextSize(me.ctx, labels[0], tickFont.font);\n        var lastLabelWidth = computeTextSize(me.ctx, labels[labels.length - 1], tickFont.font); // Ensure that our ticks are always inside the canvas. When rotated, ticks are right aligned\n        // which means that the right padding is dominated by the font height\n\n        if (me.labelRotation !== 0) {\n          me.paddingLeft = opts.position === 'bottom' ? cosRotation * firstLabelWidth + 3 : cosRotation * lineSpace + 3; // add 3 px to move away from canvas edges\n\n          me.paddingRight = opts.position === 'bottom' ? cosRotation * lineSpace + 3 : cosRotation * lastLabelWidth + 3;\n        } else {\n          me.paddingLeft = firstLabelWidth / 2 + 3; // add 3 px to move away from canvas edges\n\n          me.paddingRight = lastLabelWidth / 2 + 3;\n        }\n      } else {\n        // A vertical axis is more constrained by the width. Labels are the\n        // dominant factor here, so get that length first and account for padding\n        if (tickOpts.mirror) {\n          largestTextWidth = 0;\n        } else {\n          // use lineSpace for consistency with horizontal axis\n          // tickPadding is not implemented for horizontal\n          largestTextWidth += tickPadding + lineSpace;\n        }\n\n        minSize.width = Math.min(me.maxWidth, minSize.width + largestTextWidth);\n        me.paddingTop = tickFont.size / 2;\n        me.paddingBottom = tickFont.size / 2;\n      }\n    }\n\n    me.handleMargins();\n    me.width = minSize.width;\n    me.height = minSize.height;\n  },\n\n  /**\n   * Handle margins and padding interactions\n   * @private\n   */\n  handleMargins: function handleMargins() {\n    var me = this;\n\n    if (me.margins) {\n      me.paddingLeft = Math.max(me.paddingLeft - me.margins.left, 0);\n      me.paddingTop = Math.max(me.paddingTop - me.margins.top, 0);\n      me.paddingRight = Math.max(me.paddingRight - me.margins.right, 0);\n      me.paddingBottom = Math.max(me.paddingBottom - me.margins.bottom, 0);\n    }\n  },\n  afterFit: function afterFit() {\n    helpers.callback(this.options.afterFit, [this]);\n  },\n  // Shared Methods\n  isHorizontal: function isHorizontal() {\n    return this.options.position === 'top' || this.options.position === 'bottom';\n  },\n  isFullWidth: function isFullWidth() {\n    return this.options.fullWidth;\n  },\n  // Get the correct value. NaN bad inputs, If the value type is object get the x or y based on whether we are horizontal or not\n  getRightValue: function getRightValue(rawValue) {\n    // Null and undefined values first\n    if (helpers.isNullOrUndef(rawValue)) {\n      return NaN;\n    } // isNaN(object) returns true, so make sure NaN is checking for a number; Discard Infinite values\n\n\n    if (typeof rawValue === 'number' && !isFinite(rawValue)) {\n      return NaN;\n    } // If it is in fact an object, dive in one more level\n\n\n    if (rawValue) {\n      if (this.isHorizontal()) {\n        if (rawValue.x !== undefined) {\n          return this.getRightValue(rawValue.x);\n        }\n      } else if (rawValue.y !== undefined) {\n        return this.getRightValue(rawValue.y);\n      }\n    } // Value is good, return it\n\n\n    return rawValue;\n  },\n\n  /**\n   * Used to get the value to display in the tooltip for the data at the given index\n   * @param index\n   * @param datasetIndex\n   */\n  getLabelForIndex: helpers.noop,\n\n  /**\n   * Returns the location of the given data point. Value can either be an index or a numerical value\n   * The coordinate (0, 0) is at the upper-left corner of the canvas\n   * @param value\n   * @param index\n   * @param datasetIndex\n   */\n  getPixelForValue: helpers.noop,\n\n  /**\n   * Used to get the data value from a given pixel. This is the inverse of getPixelForValue\n   * The coordinate (0, 0) is at the upper-left corner of the canvas\n   * @param pixel\n   */\n  getValueForPixel: helpers.noop,\n\n  /**\n   * Returns the location of the tick at the given index\n   * The coordinate (0, 0) is at the upper-left corner of the canvas\n   */\n  getPixelForTick: function getPixelForTick(index) {\n    var me = this;\n    var offset = me.options.offset;\n\n    if (me.isHorizontal()) {\n      var innerWidth = me.width - (me.paddingLeft + me.paddingRight);\n      var tickWidth = innerWidth / Math.max(me._ticks.length - (offset ? 0 : 1), 1);\n      var pixel = tickWidth * index + me.paddingLeft;\n\n      if (offset) {\n        pixel += tickWidth / 2;\n      }\n\n      var finalVal = me.left + Math.round(pixel);\n      finalVal += me.isFullWidth() ? me.margins.left : 0;\n      return finalVal;\n    }\n\n    var innerHeight = me.height - (me.paddingTop + me.paddingBottom);\n    return me.top + index * (innerHeight / (me._ticks.length - 1));\n  },\n\n  /**\n   * Utility for getting the pixel location of a percentage of scale\n   * The coordinate (0, 0) is at the upper-left corner of the canvas\n   */\n  getPixelForDecimal: function getPixelForDecimal(decimal) {\n    var me = this;\n\n    if (me.isHorizontal()) {\n      var innerWidth = me.width - (me.paddingLeft + me.paddingRight);\n      var valueOffset = innerWidth * decimal + me.paddingLeft;\n      var finalVal = me.left + Math.round(valueOffset);\n      finalVal += me.isFullWidth() ? me.margins.left : 0;\n      return finalVal;\n    }\n\n    return me.top + decimal * me.height;\n  },\n\n  /**\n   * Returns the pixel for the minimum chart value\n   * The coordinate (0, 0) is at the upper-left corner of the canvas\n   */\n  getBasePixel: function getBasePixel() {\n    return this.getPixelForValue(this.getBaseValue());\n  },\n  getBaseValue: function getBaseValue() {\n    var me = this;\n    var min = me.min;\n    var max = me.max;\n    return me.beginAtZero ? 0 : min < 0 && max < 0 ? max : min > 0 && max > 0 ? min : 0;\n  },\n\n  /**\n   * Returns a subset of ticks to be plotted to avoid overlapping labels.\n   * @private\n   */\n  _autoSkip: function _autoSkip(ticks) {\n    var skipRatio;\n    var me = this;\n    var isHorizontal = me.isHorizontal();\n    var optionTicks = me.options.ticks.minor;\n    var tickCount = ticks.length;\n    var labelRotationRadians = helpers.toRadians(me.labelRotation);\n    var cosRotation = Math.cos(labelRotationRadians);\n    var longestRotatedLabel = me.longestLabelWidth * cosRotation;\n    var result = [];\n    var i, tick, shouldSkip; // figure out the maximum number of gridlines to show\n\n    var maxTicks;\n\n    if (optionTicks.maxTicksLimit) {\n      maxTicks = optionTicks.maxTicksLimit;\n    }\n\n    if (isHorizontal) {\n      skipRatio = false;\n\n      if ((longestRotatedLabel + optionTicks.autoSkipPadding) * tickCount > me.width - (me.paddingLeft + me.paddingRight)) {\n        skipRatio = 1 + Math.floor((longestRotatedLabel + optionTicks.autoSkipPadding) * tickCount / (me.width - (me.paddingLeft + me.paddingRight)));\n      } // if they defined a max number of optionTicks,\n      // increase skipRatio until that number is met\n\n\n      if (maxTicks && tickCount > maxTicks) {\n        skipRatio = Math.max(skipRatio, Math.floor(tickCount / maxTicks));\n      }\n    }\n\n    for (i = 0; i < tickCount; i++) {\n      tick = ticks[i]; // Since we always show the last tick,we need may need to hide the last shown one before\n\n      shouldSkip = skipRatio > 1 && i % skipRatio > 0 || i % skipRatio === 0 && i + skipRatio >= tickCount;\n\n      if (shouldSkip && i !== tickCount - 1) {\n        // leave tick in place but make sure it's not displayed (#4635)\n        delete tick.label;\n      }\n\n      result.push(tick);\n    }\n\n    return result;\n  },\n  // Actually draw the scale on the canvas\n  // @param {rectangle} chartArea : the area of the chart to draw full grid lines on\n  draw: function draw(chartArea) {\n    var me = this;\n    var options = me.options;\n\n    if (!options.display) {\n      return;\n    }\n\n    var context = me.ctx;\n    var globalDefaults = defaults.global;\n    var optionTicks = options.ticks.minor;\n    var optionMajorTicks = options.ticks.major || optionTicks;\n    var gridLines = options.gridLines;\n    var scaleLabel = options.scaleLabel;\n    var isRotated = me.labelRotation !== 0;\n    var isHorizontal = me.isHorizontal();\n    var ticks = optionTicks.autoSkip ? me._autoSkip(me.getTicks()) : me.getTicks();\n    var tickFontColor = helpers.valueOrDefault(optionTicks.fontColor, globalDefaults.defaultFontColor);\n    var tickFont = parseFontOptions(optionTicks);\n    var majorTickFontColor = helpers.valueOrDefault(optionMajorTicks.fontColor, globalDefaults.defaultFontColor);\n    var majorTickFont = parseFontOptions(optionMajorTicks);\n    var tl = gridLines.drawTicks ? gridLines.tickMarkLength : 0;\n    var scaleLabelFontColor = helpers.valueOrDefault(scaleLabel.fontColor, globalDefaults.defaultFontColor);\n    var scaleLabelFont = parseFontOptions(scaleLabel);\n    var scaleLabelPadding = helpers.options.toPadding(scaleLabel.padding);\n    var labelRotationRadians = helpers.toRadians(me.labelRotation);\n    var itemsToDraw = [];\n    var axisWidth = me.options.gridLines.lineWidth;\n    var xTickStart = options.position === 'right' ? me.left : me.right - axisWidth - tl;\n    var xTickEnd = options.position === 'right' ? me.left + tl : me.right;\n    var yTickStart = options.position === 'bottom' ? me.top + axisWidth : me.bottom - tl - axisWidth;\n    var yTickEnd = options.position === 'bottom' ? me.top + axisWidth + tl : me.bottom + axisWidth;\n    helpers.each(ticks, function (tick, index) {\n      // autoskipper skipped this tick (#4635)\n      if (helpers.isNullOrUndef(tick.label)) {\n        return;\n      }\n\n      var label = tick.label;\n      var lineWidth, lineColor, borderDash, borderDashOffset;\n\n      if (index === me.zeroLineIndex && options.offset === gridLines.offsetGridLines) {\n        // Draw the first index specially\n        lineWidth = gridLines.zeroLineWidth;\n        lineColor = gridLines.zeroLineColor;\n        borderDash = gridLines.zeroLineBorderDash;\n        borderDashOffset = gridLines.zeroLineBorderDashOffset;\n      } else {\n        lineWidth = helpers.valueAtIndexOrDefault(gridLines.lineWidth, index);\n        lineColor = helpers.valueAtIndexOrDefault(gridLines.color, index);\n        borderDash = helpers.valueOrDefault(gridLines.borderDash, globalDefaults.borderDash);\n        borderDashOffset = helpers.valueOrDefault(gridLines.borderDashOffset, globalDefaults.borderDashOffset);\n      } // Common properties\n\n\n      var tx1, ty1, tx2, ty2, x1, y1, x2, y2, labelX, labelY;\n      var textAlign = 'middle';\n      var textBaseline = 'middle';\n      var tickPadding = optionTicks.padding;\n\n      if (isHorizontal) {\n        var labelYOffset = tl + tickPadding;\n\n        if (options.position === 'bottom') {\n          // bottom\n          textBaseline = !isRotated ? 'top' : 'middle';\n          textAlign = !isRotated ? 'center' : 'right';\n          labelY = me.top + labelYOffset;\n        } else {\n          // top\n          textBaseline = !isRotated ? 'bottom' : 'middle';\n          textAlign = !isRotated ? 'center' : 'left';\n          labelY = me.bottom - labelYOffset;\n        }\n\n        var xLineValue = getLineValue(me, index, gridLines.offsetGridLines && ticks.length > 1);\n\n        if (xLineValue < me.left) {\n          lineColor = 'rgba(0,0,0,0)';\n        }\n\n        xLineValue += helpers.aliasPixel(lineWidth);\n        labelX = me.getPixelForTick(index) + optionTicks.labelOffset; // x values for optionTicks (need to consider offsetLabel option)\n\n        tx1 = tx2 = x1 = x2 = xLineValue;\n        ty1 = yTickStart;\n        ty2 = yTickEnd;\n        y1 = chartArea.top;\n        y2 = chartArea.bottom + axisWidth;\n      } else {\n        var isLeft = options.position === 'left';\n        var labelXOffset;\n\n        if (optionTicks.mirror) {\n          textAlign = isLeft ? 'left' : 'right';\n          labelXOffset = tickPadding;\n        } else {\n          textAlign = isLeft ? 'right' : 'left';\n          labelXOffset = tl + tickPadding;\n        }\n\n        labelX = isLeft ? me.right - labelXOffset : me.left + labelXOffset;\n        var yLineValue = getLineValue(me, index, gridLines.offsetGridLines && ticks.length > 1);\n\n        if (yLineValue < me.top) {\n          lineColor = 'rgba(0,0,0,0)';\n        }\n\n        yLineValue += helpers.aliasPixel(lineWidth);\n        labelY = me.getPixelForTick(index) + optionTicks.labelOffset;\n        tx1 = xTickStart;\n        tx2 = xTickEnd;\n        x1 = chartArea.left;\n        x2 = chartArea.right + axisWidth;\n        ty1 = ty2 = y1 = y2 = yLineValue;\n      }\n\n      itemsToDraw.push({\n        tx1: tx1,\n        ty1: ty1,\n        tx2: tx2,\n        ty2: ty2,\n        x1: x1,\n        y1: y1,\n        x2: x2,\n        y2: y2,\n        labelX: labelX,\n        labelY: labelY,\n        glWidth: lineWidth,\n        glColor: lineColor,\n        glBorderDash: borderDash,\n        glBorderDashOffset: borderDashOffset,\n        rotation: -1 * labelRotationRadians,\n        label: label,\n        major: tick.major,\n        textBaseline: textBaseline,\n        textAlign: textAlign\n      });\n    }); // Draw all of the tick labels, tick marks, and grid lines at the correct places\n\n    helpers.each(itemsToDraw, function (itemToDraw) {\n      if (gridLines.display) {\n        context.save();\n        context.lineWidth = itemToDraw.glWidth;\n        context.strokeStyle = itemToDraw.glColor;\n\n        if (context.setLineDash) {\n          context.setLineDash(itemToDraw.glBorderDash);\n          context.lineDashOffset = itemToDraw.glBorderDashOffset;\n        }\n\n        context.beginPath();\n\n        if (gridLines.drawTicks) {\n          context.moveTo(itemToDraw.tx1, itemToDraw.ty1);\n          context.lineTo(itemToDraw.tx2, itemToDraw.ty2);\n        }\n\n        if (gridLines.drawOnChartArea) {\n          context.moveTo(itemToDraw.x1, itemToDraw.y1);\n          context.lineTo(itemToDraw.x2, itemToDraw.y2);\n        }\n\n        context.stroke();\n        context.restore();\n      }\n\n      if (optionTicks.display) {\n        // Make sure we draw text in the correct color and font\n        context.save();\n        context.translate(itemToDraw.labelX, itemToDraw.labelY);\n        context.rotate(itemToDraw.rotation);\n        context.font = itemToDraw.major ? majorTickFont.font : tickFont.font;\n        context.fillStyle = itemToDraw.major ? majorTickFontColor : tickFontColor;\n        context.textBaseline = itemToDraw.textBaseline;\n        context.textAlign = itemToDraw.textAlign;\n        var label = itemToDraw.label;\n\n        if (helpers.isArray(label)) {\n          var lineCount = label.length;\n          var lineHeight = tickFont.size * 1.5;\n          var y = me.isHorizontal() ? 0 : -lineHeight * (lineCount - 1) / 2;\n\n          for (var i = 0; i < lineCount; ++i) {\n            // We just make sure the multiline element is a string here..\n            context.fillText('' + label[i], 0, y); // apply same lineSpacing as calculated @ L#320\n\n            y += lineHeight;\n          }\n        } else {\n          context.fillText(label, 0, 0);\n        }\n\n        context.restore();\n      }\n    });\n\n    if (scaleLabel.display) {\n      // Draw the scale label\n      var scaleLabelX;\n      var scaleLabelY;\n      var rotation = 0;\n      var halfLineHeight = parseLineHeight(scaleLabel) / 2;\n\n      if (isHorizontal) {\n        scaleLabelX = me.left + (me.right - me.left) / 2; // midpoint of the width\n\n        scaleLabelY = options.position === 'bottom' ? me.bottom - halfLineHeight - scaleLabelPadding.bottom : me.top + halfLineHeight + scaleLabelPadding.top;\n      } else {\n        var isLeft = options.position === 'left';\n        scaleLabelX = isLeft ? me.left + halfLineHeight + scaleLabelPadding.top : me.right - halfLineHeight - scaleLabelPadding.top;\n        scaleLabelY = me.top + (me.bottom - me.top) / 2;\n        rotation = isLeft ? -0.5 * Math.PI : 0.5 * Math.PI;\n      }\n\n      context.save();\n      context.translate(scaleLabelX, scaleLabelY);\n      context.rotate(rotation);\n      context.textAlign = 'center';\n      context.textBaseline = 'middle';\n      context.fillStyle = scaleLabelFontColor; // render in correct colour\n\n      context.font = scaleLabelFont.font;\n      context.fillText(scaleLabel.labelString, 0, 0);\n      context.restore();\n    }\n\n    if (gridLines.drawBorder) {\n      // Draw the line at the edge of the axis\n      context.lineWidth = helpers.valueAtIndexOrDefault(gridLines.lineWidth, 0);\n      context.strokeStyle = helpers.valueAtIndexOrDefault(gridLines.color, 0);\n      var x1 = me.left;\n      var x2 = me.right + axisWidth;\n      var y1 = me.top;\n      var y2 = me.bottom + axisWidth;\n      var aliasPixel = helpers.aliasPixel(context.lineWidth);\n\n      if (isHorizontal) {\n        y1 = y2 = options.position === 'top' ? me.bottom : me.top;\n        y1 += aliasPixel;\n        y2 += aliasPixel;\n      } else {\n        x1 = x2 = options.position === 'left' ? me.right : me.left;\n        x1 += aliasPixel;\n        x2 += aliasPixel;\n      }\n\n      context.beginPath();\n      context.moveTo(x1, y1);\n      context.lineTo(x2, y2);\n      context.stroke();\n    }\n  }\n});","'use strict';\n\nvar helpers = require('../helpers/index');\n/**\n * Namespace to hold static tick generation functions\n * @namespace Chart.Ticks\n */\n\n\nmodule.exports = {\n  /**\n   * Namespace to hold formatters for different types of ticks\n   * @namespace Chart.Ticks.formatters\n   */\n  formatters: {\n    /**\n     * Formatter for value labels\n     * @method Chart.Ticks.formatters.values\n     * @param value the value to display\n     * @return {String|Array} the label to display\n     */\n    values: function values(value) {\n      return helpers.isArray(value) ? value : '' + value;\n    },\n\n    /**\n     * Formatter for linear numeric ticks\n     * @method Chart.Ticks.formatters.linear\n     * @param tickValue {Number} the value to be formatted\n     * @param index {Number} the position of the tickValue parameter in the ticks array\n     * @param ticks {Array<Number>} the list of ticks being converted\n     * @return {String} string representation of the tickValue parameter\n     */\n    linear: function linear(tickValue, index, ticks) {\n      // If we have lots of ticks, don't use the ones\n      var delta = ticks.length > 3 ? ticks[2] - ticks[1] : ticks[1] - ticks[0]; // If we have a number like 2.5 as the delta, figure out how many decimal places we need\n\n      if (Math.abs(delta) > 1) {\n        if (tickValue !== Math.floor(tickValue)) {\n          // not an integer\n          delta = tickValue - Math.floor(tickValue);\n        }\n      }\n\n      var logDelta = helpers.log10(Math.abs(delta));\n      var tickString = '';\n\n      if (tickValue !== 0) {\n        var maxTick = Math.max(Math.abs(ticks[0]), Math.abs(ticks[ticks.length - 1]));\n\n        if (maxTick < 1e-4) {\n          // all ticks are small numbers; use scientific notation\n          var logTick = helpers.log10(Math.abs(tickValue));\n          tickString = tickValue.toExponential(Math.floor(logTick) - Math.floor(logDelta));\n        } else {\n          var numDecimal = -1 * Math.floor(logDelta);\n          numDecimal = Math.max(Math.min(numDecimal, 20), 0); // toFixed has a max of 20 decimal places\n\n          tickString = tickValue.toFixed(numDecimal);\n        }\n      } else {\n        tickString = '0'; // never show decimal places for 0\n      }\n\n      return tickString;\n    },\n    logarithmic: function logarithmic(tickValue, index, ticks) {\n      var remain = tickValue / Math.pow(10, Math.floor(helpers.log10(tickValue)));\n\n      if (tickValue === 0) {\n        return '0';\n      } else if (remain === 1 || remain === 2 || remain === 5 || index === 0 || index === ticks.length - 1) {\n        return tickValue.toExponential();\n      }\n\n      return '';\n    }\n  }\n};","var toFinite = require('./toFinite');\n/**\n * Converts `value` to an integer.\n *\n * **Note:** This method is loosely based on\n * [`ToInteger`](http://www.ecma-international.org/ecma-262/7.0/#sec-tointeger).\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to convert.\n * @returns {number} Returns the converted integer.\n * @example\n *\n * _.toInteger(3.2);\n * // => 3\n *\n * _.toInteger(Number.MIN_VALUE);\n * // => 0\n *\n * _.toInteger(Infinity);\n * // => 1.7976931348623157e+308\n *\n * _.toInteger('3.2');\n * // => 3\n */\n\n\nfunction toInteger(value) {\n  var result = toFinite(value),\n      remainder = result % 1;\n  return result === result ? remainder ? result - remainder : result : 0;\n}\n\nmodule.exports = toInteger;","var toNumber = require('./toNumber');\n/** Used as references for various `Number` constants. */\n\n\nvar INFINITY = 1 / 0,\n    MAX_INTEGER = 1.7976931348623157e+308;\n/**\n * Converts `value` to a finite number.\n *\n * @static\n * @memberOf _\n * @since 4.12.0\n * @category Lang\n * @param {*} value The value to convert.\n * @returns {number} Returns the converted number.\n * @example\n *\n * _.toFinite(3.2);\n * // => 3.2\n *\n * _.toFinite(Number.MIN_VALUE);\n * // => 5e-324\n *\n * _.toFinite(Infinity);\n * // => 1.7976931348623157e+308\n *\n * _.toFinite('3.2');\n * // => 3.2\n */\n\nfunction toFinite(value) {\n  if (!value) {\n    return value === 0 ? value : 0;\n  }\n\n  value = toNumber(value);\n\n  if (value === INFINITY || value === -INFINITY) {\n    var sign = value < 0 ? -1 : 1;\n    return sign * MAX_INTEGER;\n  }\n\n  return value === value ? value : 0;\n}\n\nmodule.exports = toFinite;","'use strict';\n/**\n * @namespace Chart.helpers\n */\n\nvar helpers = {\n  /**\n   * An empty function that can be used, for example, for optional callback.\n   */\n  noop: function noop() {},\n\n  /**\n   * Returns a unique id, sequentially generated from a global variable.\n   * @returns {Number}\n   * @function\n   */\n  uid: function () {\n    var id = 0;\n    return function () {\n      return id++;\n    };\n  }(),\n\n  /**\n   * Returns true if `value` is neither null nor undefined, else returns false.\n   * @param {*} value - The value to test.\n   * @returns {Boolean}\n   * @since 2.7.0\n   */\n  isNullOrUndef: function isNullOrUndef(value) {\n    return value === null || typeof value === 'undefined';\n  },\n\n  /**\n   * Returns true if `value` is an array, else returns false.\n   * @param {*} value - The value to test.\n   * @returns {Boolean}\n   * @function\n   */\n  isArray: Array.isArray ? Array.isArray : function (value) {\n    return Object.prototype.toString.call(value) === '[object Array]';\n  },\n\n  /**\n   * Returns true if `value` is an object (excluding null), else returns false.\n   * @param {*} value - The value to test.\n   * @returns {Boolean}\n   * @since 2.7.0\n   */\n  isObject: function isObject(value) {\n    return value !== null && Object.prototype.toString.call(value) === '[object Object]';\n  },\n\n  /**\n   * Returns `value` if defined, else returns `defaultValue`.\n   * @param {*} value - The value to return if defined.\n   * @param {*} defaultValue - The value to return if `value` is undefined.\n   * @returns {*}\n   */\n  valueOrDefault: function valueOrDefault(value, defaultValue) {\n    return typeof value === 'undefined' ? defaultValue : value;\n  },\n\n  /**\n   * Returns value at the given `index` in array if defined, else returns `defaultValue`.\n   * @param {Array} value - The array to lookup for value at `index`.\n   * @param {Number} index - The index in `value` to lookup for value.\n   * @param {*} defaultValue - The value to return if `value[index]` is undefined.\n   * @returns {*}\n   */\n  valueAtIndexOrDefault: function valueAtIndexOrDefault(value, index, defaultValue) {\n    return helpers.valueOrDefault(helpers.isArray(value) ? value[index] : value, defaultValue);\n  },\n\n  /**\n   * Calls `fn` with the given `args` in the scope defined by `thisArg` and returns the\n   * value returned by `fn`. If `fn` is not a function, this method returns undefined.\n   * @param {Function} fn - The function to call.\n   * @param {Array|undefined|null} args - The arguments with which `fn` should be called.\n   * @param {Object} [thisArg] - The value of `this` provided for the call to `fn`.\n   * @returns {*}\n   */\n  callback: function callback(fn, args, thisArg) {\n    if (fn && typeof fn.call === 'function') {\n      return fn.apply(thisArg, args);\n    }\n  },\n\n  /**\n   * Note(SB) for performance sake, this method should only be used when loopable type\n   * is unknown or in none intensive code (not called often and small loopable). Else\n   * it's preferable to use a regular for() loop and save extra function calls.\n   * @param {Object|Array} loopable - The object or array to be iterated.\n   * @param {Function} fn - The function to call for each item.\n   * @param {Object} [thisArg] - The value of `this` provided for the call to `fn`.\n   * @param {Boolean} [reverse] - If true, iterates backward on the loopable.\n   */\n  each: function each(loopable, fn, thisArg, reverse) {\n    var i, len, keys;\n\n    if (helpers.isArray(loopable)) {\n      len = loopable.length;\n\n      if (reverse) {\n        for (i = len - 1; i >= 0; i--) {\n          fn.call(thisArg, loopable[i], i);\n        }\n      } else {\n        for (i = 0; i < len; i++) {\n          fn.call(thisArg, loopable[i], i);\n        }\n      }\n    } else if (helpers.isObject(loopable)) {\n      keys = Object.keys(loopable);\n      len = keys.length;\n\n      for (i = 0; i < len; i++) {\n        fn.call(thisArg, loopable[keys[i]], keys[i]);\n      }\n    }\n  },\n\n  /**\n   * Returns true if the `a0` and `a1` arrays have the same content, else returns false.\n   * @see http://stackoverflow.com/a/14853974\n   * @param {Array} a0 - The array to compare\n   * @param {Array} a1 - The array to compare\n   * @returns {Boolean}\n   */\n  arrayEquals: function arrayEquals(a0, a1) {\n    var i, ilen, v0, v1;\n\n    if (!a0 || !a1 || a0.length !== a1.length) {\n      return false;\n    }\n\n    for (i = 0, ilen = a0.length; i < ilen; ++i) {\n      v0 = a0[i];\n      v1 = a1[i];\n\n      if (v0 instanceof Array && v1 instanceof Array) {\n        if (!helpers.arrayEquals(v0, v1)) {\n          return false;\n        }\n      } else if (v0 !== v1) {\n        // NOTE: two different object instances will never be equal: {x:20} != {x:20}\n        return false;\n      }\n    }\n\n    return true;\n  },\n\n  /**\n   * Returns a deep copy of `source` without keeping references on objects and arrays.\n   * @param {*} source - The value to clone.\n   * @returns {*}\n   */\n  clone: function clone(source) {\n    if (helpers.isArray(source)) {\n      return source.map(helpers.clone);\n    }\n\n    if (helpers.isObject(source)) {\n      var target = {};\n      var keys = Object.keys(source);\n      var klen = keys.length;\n      var k = 0;\n\n      for (; k < klen; ++k) {\n        target[keys[k]] = helpers.clone(source[keys[k]]);\n      }\n\n      return target;\n    }\n\n    return source;\n  },\n\n  /**\n   * The default merger when Chart.helpers.merge is called without merger option.\n   * Note(SB): this method is also used by configMerge and scaleMerge as fallback.\n   * @private\n   */\n  _merger: function _merger(key, target, source, options) {\n    var tval = target[key];\n    var sval = source[key];\n\n    if (helpers.isObject(tval) && helpers.isObject(sval)) {\n      helpers.merge(tval, sval, options);\n    } else {\n      target[key] = helpers.clone(sval);\n    }\n  },\n\n  /**\n   * Merges source[key] in target[key] only if target[key] is undefined.\n   * @private\n   */\n  _mergerIf: function _mergerIf(key, target, source) {\n    var tval = target[key];\n    var sval = source[key];\n\n    if (helpers.isObject(tval) && helpers.isObject(sval)) {\n      helpers.mergeIf(tval, sval);\n    } else if (!target.hasOwnProperty(key)) {\n      target[key] = helpers.clone(sval);\n    }\n  },\n\n  /**\n   * Recursively deep copies `source` properties into `target` with the given `options`.\n   * IMPORTANT: `target` is not cloned and will be updated with `source` properties.\n   * @param {Object} target - The target object in which all sources are merged into.\n   * @param {Object|Array(Object)} source - Object(s) to merge into `target`.\n   * @param {Object} [options] - Merging options:\n   * @param {Function} [options.merger] - The merge method (key, target, source, options)\n   * @returns {Object} The `target` object.\n   */\n  merge: function merge(target, source, options) {\n    var sources = helpers.isArray(source) ? source : [source];\n    var ilen = sources.length;\n    var merge, i, keys, klen, k;\n\n    if (!helpers.isObject(target)) {\n      return target;\n    }\n\n    options = options || {};\n    merge = options.merger || helpers._merger;\n\n    for (i = 0; i < ilen; ++i) {\n      source = sources[i];\n\n      if (!helpers.isObject(source)) {\n        continue;\n      }\n\n      keys = Object.keys(source);\n\n      for (k = 0, klen = keys.length; k < klen; ++k) {\n        merge(keys[k], target, source, options);\n      }\n    }\n\n    return target;\n  },\n\n  /**\n   * Recursively deep copies `source` properties into `target` *only* if not defined in target.\n   * IMPORTANT: `target` is not cloned and will be updated with `source` properties.\n   * @param {Object} target - The target object in which all sources are merged into.\n   * @param {Object|Array(Object)} source - Object(s) to merge into `target`.\n   * @returns {Object} The `target` object.\n   */\n  mergeIf: function mergeIf(target, source) {\n    return helpers.merge(target, source, {\n      merger: helpers._mergerIf\n    });\n  },\n\n  /**\n   * Applies the contents of two or more objects together into the first object.\n   * @param {Object} target - The target object in which all objects are merged into.\n   * @param {Object} arg1 - Object containing additional properties to merge in target.\n   * @param {Object} argN - Additional objects containing properties to merge in target.\n   * @returns {Object} The `target` object.\n   */\n  extend: function extend(target) {\n    var setFn = function setFn(value, key) {\n      target[key] = value;\n    };\n\n    for (var i = 1, ilen = arguments.length; i < ilen; ++i) {\n      helpers.each(arguments[i], setFn);\n    }\n\n    return target;\n  },\n\n  /**\n   * Basic javascript inheritance based on the model created in Backbone.js\n   */\n  inherits: function inherits(extensions) {\n    var me = this;\n    var ChartElement = extensions && extensions.hasOwnProperty('constructor') ? extensions.constructor : function () {\n      return me.apply(this, arguments);\n    };\n\n    var Surrogate = function Surrogate() {\n      this.constructor = ChartElement;\n    };\n\n    Surrogate.prototype = me.prototype;\n    ChartElement.prototype = new Surrogate();\n    ChartElement.extend = helpers.inherits;\n\n    if (extensions) {\n      helpers.extend(ChartElement.prototype, extensions);\n    }\n\n    ChartElement.__super__ = me.prototype;\n    return ChartElement;\n  }\n};\nmodule.exports = helpers; // DEPRECATIONS\n\n/**\n * Provided for backward compatibility, use Chart.helpers.callback instead.\n * @function Chart.helpers.callCallback\n * @deprecated since version 2.6.0\n * @todo remove at version 3\n * @private\n */\n\nhelpers.callCallback = helpers.callback;\n/**\n * Provided for backward compatibility, use Array.prototype.indexOf instead.\n * Array.prototype.indexOf compatibility: Chrome, Opera, Safari, FF1.5+, IE9+\n * @function Chart.helpers.indexOf\n * @deprecated since version 2.7.0\n * @todo remove at version 3\n * @private\n */\n\nhelpers.indexOf = function (array, item, fromIndex) {\n  return Array.prototype.indexOf.call(array, item, fromIndex);\n};\n/**\n * Provided for backward compatibility, use Chart.helpers.valueOrDefault instead.\n * @function Chart.helpers.getValueOrDefault\n * @deprecated since version 2.7.0\n * @todo remove at version 3\n * @private\n */\n\n\nhelpers.getValueOrDefault = helpers.valueOrDefault;\n/**\n * Provided for backward compatibility, use Chart.helpers.valueAtIndexOrDefault instead.\n * @function Chart.helpers.getValueAtIndexOrDefault\n * @deprecated since version 2.7.0\n * @todo remove at version 3\n * @private\n */\n\nhelpers.getValueAtIndexOrDefault = helpers.valueAtIndexOrDefault;","var isObject = require('./isObject'),\n    isSymbol = require('./isSymbol');\n/** Used as references for various `Number` constants. */\n\n\nvar NAN = 0 / 0;\n/** Used to match leading and trailing whitespace. */\n\nvar reTrim = /^\\s+|\\s+$/g;\n/** Used to detect bad signed hexadecimal string values. */\n\nvar reIsBadHex = /^[-+]0x[0-9a-f]+$/i;\n/** Used to detect binary string values. */\n\nvar reIsBinary = /^0b[01]+$/i;\n/** Used to detect octal string values. */\n\nvar reIsOctal = /^0o[0-7]+$/i;\n/** Built-in method references without a dependency on `root`. */\n\nvar freeParseInt = parseInt;\n/**\n * Converts `value` to a number.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to process.\n * @returns {number} Returns the number.\n * @example\n *\n * _.toNumber(3.2);\n * // => 3.2\n *\n * _.toNumber(Number.MIN_VALUE);\n * // => 5e-324\n *\n * _.toNumber(Infinity);\n * // => Infinity\n *\n * _.toNumber('3.2');\n * // => 3.2\n */\n\nfunction toNumber(value) {\n  if (typeof value == 'number') {\n    return value;\n  }\n\n  if (isSymbol(value)) {\n    return NAN;\n  }\n\n  if (isObject(value)) {\n    var other = typeof value.valueOf == 'function' ? value.valueOf() : value;\n    value = isObject(other) ? other + '' : other;\n  }\n\n  if (typeof value != 'string') {\n    return value === 0 ? value : +value;\n  }\n\n  value = value.replace(reTrim, '');\n  var isBinary = reIsBinary.test(value);\n  return isBinary || reIsOctal.test(value) ? freeParseInt(value.slice(2), isBinary ? 2 : 8) : reIsBadHex.test(value) ? NAN : +value;\n}\n\nmodule.exports = toNumber;","var baseFindIndex = require('./_baseFindIndex'),\n    baseIteratee = require('./_baseIteratee'),\n    toInteger = require('./toInteger');\n/* Built-in method references for those with the same name as other `lodash` methods. */\n\n\nvar nativeMax = Math.max;\n/**\n * This method is like `_.find` except that it returns the index of the first\n * element `predicate` returns truthy for instead of the element itself.\n *\n * @static\n * @memberOf _\n * @since 1.1.0\n * @category Array\n * @param {Array} array The array to inspect.\n * @param {Function} [predicate=_.identity] The function invoked per iteration.\n * @param {number} [fromIndex=0] The index to search from.\n * @returns {number} Returns the index of the found element, else `-1`.\n * @example\n *\n * var users = [\n *   { 'user': 'barney',  'active': false },\n *   { 'user': 'fred',    'active': false },\n *   { 'user': 'pebbles', 'active': true }\n * ];\n *\n * _.findIndex(users, function(o) { return o.user == 'barney'; });\n * // => 0\n *\n * // The `_.matches` iteratee shorthand.\n * _.findIndex(users, { 'user': 'fred', 'active': false });\n * // => 1\n *\n * // The `_.matchesProperty` iteratee shorthand.\n * _.findIndex(users, ['active', false]);\n * // => 0\n *\n * // The `_.property` iteratee shorthand.\n * _.findIndex(users, 'active');\n * // => 2\n */\n\nfunction findIndex(array, predicate, fromIndex) {\n  var length = array == null ? 0 : array.length;\n\n  if (!length) {\n    return -1;\n  }\n\n  var index = fromIndex == null ? 0 : toInteger(fromIndex);\n\n  if (index < 0) {\n    index = nativeMax(length + index, 0);\n  }\n\n  return baseFindIndex(array, baseIteratee(predicate, 3), index);\n}\n\nmodule.exports = findIndex;","/**\n * The base implementation of `_.findIndex` and `_.findLastIndex` without\n * support for iteratee shorthands.\n *\n * @private\n * @param {Array} array The array to inspect.\n * @param {Function} predicate The function invoked per iteration.\n * @param {number} fromIndex The index to search from.\n * @param {boolean} [fromRight] Specify iterating from right to left.\n * @returns {number} Returns the index of the matched value, else `-1`.\n */\nfunction baseFindIndex(array, predicate, fromIndex, fromRight) {\n  var length = array.length,\n      index = fromIndex + (fromRight ? 1 : -1);\n\n  while (fromRight ? index-- : ++index < length) {\n    if (predicate(array[index], index, array)) {\n      return index;\n    }\n  }\n\n  return -1;\n}\n\nmodule.exports = baseFindIndex;","var baseForOwn = require('./_baseForOwn'),\n    createBaseEach = require('./_createBaseEach');\n/**\n * The base implementation of `_.forEach` without support for iteratee shorthands.\n *\n * @private\n * @param {Array|Object} collection The collection to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @returns {Array|Object} Returns `collection`.\n */\n\n\nvar baseEach = createBaseEach(baseForOwn);\nmodule.exports = baseEach;","var isArrayLike = require('./isArrayLike');\n/**\n * Creates a `baseEach` or `baseEachRight` function.\n *\n * @private\n * @param {Function} eachFunc The function to iterate over a collection.\n * @param {boolean} [fromRight] Specify iterating from right to left.\n * @returns {Function} Returns the new base function.\n */\n\n\nfunction createBaseEach(eachFunc, fromRight) {\n  return function (collection, iteratee) {\n    if (collection == null) {\n      return collection;\n    }\n\n    if (!isArrayLike(collection)) {\n      return eachFunc(collection, iteratee);\n    }\n\n    var length = collection.length,\n        index = fromRight ? length : -1,\n        iterable = Object(collection);\n\n    while (fromRight ? index-- : ++index < length) {\n      if (iteratee(iterable[index], index, iterable) === false) {\n        break;\n      }\n    }\n\n    return collection;\n  };\n}\n\nmodule.exports = createBaseEach;","'use strict';\n\nmodule.exports = {\n  \"aliceblue\": [240, 248, 255],\n  \"antiquewhite\": [250, 235, 215],\n  \"aqua\": [0, 255, 255],\n  \"aquamarine\": [127, 255, 212],\n  \"azure\": [240, 255, 255],\n  \"beige\": [245, 245, 220],\n  \"bisque\": [255, 228, 196],\n  \"black\": [0, 0, 0],\n  \"blanchedalmond\": [255, 235, 205],\n  \"blue\": [0, 0, 255],\n  \"blueviolet\": [138, 43, 226],\n  \"brown\": [165, 42, 42],\n  \"burlywood\": [222, 184, 135],\n  \"cadetblue\": [95, 158, 160],\n  \"chartreuse\": [127, 255, 0],\n  \"chocolate\": [210, 105, 30],\n  \"coral\": [255, 127, 80],\n  \"cornflowerblue\": [100, 149, 237],\n  \"cornsilk\": [255, 248, 220],\n  \"crimson\": [220, 20, 60],\n  \"cyan\": [0, 255, 255],\n  \"darkblue\": [0, 0, 139],\n  \"darkcyan\": [0, 139, 139],\n  \"darkgoldenrod\": [184, 134, 11],\n  \"darkgray\": [169, 169, 169],\n  \"darkgreen\": [0, 100, 0],\n  \"darkgrey\": [169, 169, 169],\n  \"darkkhaki\": [189, 183, 107],\n  \"darkmagenta\": [139, 0, 139],\n  \"darkolivegreen\": [85, 107, 47],\n  \"darkorange\": [255, 140, 0],\n  \"darkorchid\": [153, 50, 204],\n  \"darkred\": [139, 0, 0],\n  \"darksalmon\": [233, 150, 122],\n  \"darkseagreen\": [143, 188, 143],\n  \"darkslateblue\": [72, 61, 139],\n  \"darkslategray\": [47, 79, 79],\n  \"darkslategrey\": [47, 79, 79],\n  \"darkturquoise\": [0, 206, 209],\n  \"darkviolet\": [148, 0, 211],\n  \"deeppink\": [255, 20, 147],\n  \"deepskyblue\": [0, 191, 255],\n  \"dimgray\": [105, 105, 105],\n  \"dimgrey\": [105, 105, 105],\n  \"dodgerblue\": [30, 144, 255],\n  \"firebrick\": [178, 34, 34],\n  \"floralwhite\": [255, 250, 240],\n  \"forestgreen\": [34, 139, 34],\n  \"fuchsia\": [255, 0, 255],\n  \"gainsboro\": [220, 220, 220],\n  \"ghostwhite\": [248, 248, 255],\n  \"gold\": [255, 215, 0],\n  \"goldenrod\": [218, 165, 32],\n  \"gray\": [128, 128, 128],\n  \"green\": [0, 128, 0],\n  \"greenyellow\": [173, 255, 47],\n  \"grey\": [128, 128, 128],\n  \"honeydew\": [240, 255, 240],\n  \"hotpink\": [255, 105, 180],\n  \"indianred\": [205, 92, 92],\n  \"indigo\": [75, 0, 130],\n  \"ivory\": [255, 255, 240],\n  \"khaki\": [240, 230, 140],\n  \"lavender\": [230, 230, 250],\n  \"lavenderblush\": [255, 240, 245],\n  \"lawngreen\": [124, 252, 0],\n  \"lemonchiffon\": [255, 250, 205],\n  \"lightblue\": [173, 216, 230],\n  \"lightcoral\": [240, 128, 128],\n  \"lightcyan\": [224, 255, 255],\n  \"lightgoldenrodyellow\": [250, 250, 210],\n  \"lightgray\": [211, 211, 211],\n  \"lightgreen\": [144, 238, 144],\n  \"lightgrey\": [211, 211, 211],\n  \"lightpink\": [255, 182, 193],\n  \"lightsalmon\": [255, 160, 122],\n  \"lightseagreen\": [32, 178, 170],\n  \"lightskyblue\": [135, 206, 250],\n  \"lightslategray\": [119, 136, 153],\n  \"lightslategrey\": [119, 136, 153],\n  \"lightsteelblue\": [176, 196, 222],\n  \"lightyellow\": [255, 255, 224],\n  \"lime\": [0, 255, 0],\n  \"limegreen\": [50, 205, 50],\n  \"linen\": [250, 240, 230],\n  \"magenta\": [255, 0, 255],\n  \"maroon\": [128, 0, 0],\n  \"mediumaquamarine\": [102, 205, 170],\n  \"mediumblue\": [0, 0, 205],\n  \"mediumorchid\": [186, 85, 211],\n  \"mediumpurple\": [147, 112, 219],\n  \"mediumseagreen\": [60, 179, 113],\n  \"mediumslateblue\": [123, 104, 238],\n  \"mediumspringgreen\": [0, 250, 154],\n  \"mediumturquoise\": [72, 209, 204],\n  \"mediumvioletred\": [199, 21, 133],\n  \"midnightblue\": [25, 25, 112],\n  \"mintcream\": [245, 255, 250],\n  \"mistyrose\": [255, 228, 225],\n  \"moccasin\": [255, 228, 181],\n  \"navajowhite\": [255, 222, 173],\n  \"navy\": [0, 0, 128],\n  \"oldlace\": [253, 245, 230],\n  \"olive\": [128, 128, 0],\n  \"olivedrab\": [107, 142, 35],\n  \"orange\": [255, 165, 0],\n  \"orangered\": [255, 69, 0],\n  \"orchid\": [218, 112, 214],\n  \"palegoldenrod\": [238, 232, 170],\n  \"palegreen\": [152, 251, 152],\n  \"paleturquoise\": [175, 238, 238],\n  \"palevioletred\": [219, 112, 147],\n  \"papayawhip\": [255, 239, 213],\n  \"peachpuff\": [255, 218, 185],\n  \"peru\": [205, 133, 63],\n  \"pink\": [255, 192, 203],\n  \"plum\": [221, 160, 221],\n  \"powderblue\": [176, 224, 230],\n  \"purple\": [128, 0, 128],\n  \"rebeccapurple\": [102, 51, 153],\n  \"red\": [255, 0, 0],\n  \"rosybrown\": [188, 143, 143],\n  \"royalblue\": [65, 105, 225],\n  \"saddlebrown\": [139, 69, 19],\n  \"salmon\": [250, 128, 114],\n  \"sandybrown\": [244, 164, 96],\n  \"seagreen\": [46, 139, 87],\n  \"seashell\": [255, 245, 238],\n  \"sienna\": [160, 82, 45],\n  \"silver\": [192, 192, 192],\n  \"skyblue\": [135, 206, 235],\n  \"slateblue\": [106, 90, 205],\n  \"slategray\": [112, 128, 144],\n  \"slategrey\": [112, 128, 144],\n  \"snow\": [255, 250, 250],\n  \"springgreen\": [0, 255, 127],\n  \"steelblue\": [70, 130, 180],\n  \"tan\": [210, 180, 140],\n  \"teal\": [0, 128, 128],\n  \"thistle\": [216, 191, 216],\n  \"tomato\": [255, 99, 71],\n  \"turquoise\": [64, 224, 208],\n  \"violet\": [238, 130, 238],\n  \"wheat\": [245, 222, 179],\n  \"white\": [255, 255, 255],\n  \"whitesmoke\": [245, 245, 245],\n  \"yellow\": [255, 255, 0],\n  \"yellowgreen\": [154, 205, 50]\n};","/**\n * @namespace Chart\n */\nvar Chart = require('./core/core')();\n\nChart.helpers = require('./helpers/index'); // @todo dispatch these helpers into appropriated helpers/helpers.* file and write unit tests!\n\nrequire('./core/core.helpers')(Chart);\n\nChart.Animation = require('./core/core.animation');\nChart.animationService = require('./core/core.animations');\nChart.defaults = require('./core/core.defaults');\nChart.Element = require('./core/core.element');\nChart.elements = require('./elements/index');\nChart.Interaction = require('./core/core.interaction');\nChart.layouts = require('./core/core.layouts');\nChart.platform = require('./platforms/platform');\nChart.plugins = require('./core/core.plugins');\nChart.Scale = require('./core/core.scale');\nChart.scaleService = require('./core/core.scaleService');\nChart.Ticks = require('./core/core.ticks');\nChart.Tooltip = require('./core/core.tooltip');\n\nrequire('./core/core.controller')(Chart);\n\nrequire('./core/core.datasetController')(Chart);\n\nrequire('./scales/scale.linearbase')(Chart);\n\nrequire('./scales/scale.category')(Chart);\n\nrequire('./scales/scale.linear')(Chart);\n\nrequire('./scales/scale.logarithmic')(Chart);\n\nrequire('./scales/scale.radialLinear')(Chart);\n\nrequire('./scales/scale.time')(Chart); // Controllers must be loaded after elements\n// See Chart.core.datasetController.dataElementType\n\n\nrequire('./controllers/controller.bar')(Chart);\n\nrequire('./controllers/controller.bubble')(Chart);\n\nrequire('./controllers/controller.doughnut')(Chart);\n\nrequire('./controllers/controller.line')(Chart);\n\nrequire('./controllers/controller.polarArea')(Chart);\n\nrequire('./controllers/controller.radar')(Chart);\n\nrequire('./controllers/controller.scatter')(Chart);\n\nrequire('./charts/Chart.Bar')(Chart);\n\nrequire('./charts/Chart.Bubble')(Chart);\n\nrequire('./charts/Chart.Doughnut')(Chart);\n\nrequire('./charts/Chart.Line')(Chart);\n\nrequire('./charts/Chart.PolarArea')(Chart);\n\nrequire('./charts/Chart.Radar')(Chart);\n\nrequire('./charts/Chart.Scatter')(Chart); // Loading built-in plugins\n\n\nvar plugins = require('./plugins');\n\nfor (var k in plugins) {\n  if (plugins.hasOwnProperty(k)) {\n    Chart.plugins.register(plugins[k]);\n  }\n}\n\nChart.platform.initialize();\nmodule.exports = Chart;\n\nif (typeof window !== 'undefined') {\n  window.Chart = Chart;\n} // DEPRECATIONS\n\n/**\n * Provided for backward compatibility, not available anymore\n * @namespace Chart.Legend\n * @deprecated since version 2.1.5\n * @todo remove at version 3\n * @private\n */\n\n\nChart.Legend = plugins.legend._element;\n/**\n * Provided for backward compatibility, not available anymore\n * @namespace Chart.Title\n * @deprecated since version 2.1.5\n * @todo remove at version 3\n * @private\n */\n\nChart.Title = plugins.title._element;\n/**\n * Provided for backward compatibility, use Chart.plugins instead\n * @namespace Chart.pluginService\n * @deprecated since version 2.1.5\n * @todo remove at version 3\n * @private\n */\n\nChart.pluginService = Chart.plugins;\n/**\n * Provided for backward compatibility, inheriting from Chart.PlugingBase has no\n * effect, instead simply create/register plugins via plain JavaScript objects.\n * @interface Chart.PluginBase\n * @deprecated since version 2.5.0\n * @todo remove at version 3\n * @private\n */\n\nChart.PluginBase = Chart.Element.extend({});\n/**\n * Provided for backward compatibility, use Chart.helpers.canvas instead.\n * @namespace Chart.canvasHelpers\n * @deprecated since version 2.6.0\n * @todo remove at version 3\n * @private\n */\n\nChart.canvasHelpers = Chart.helpers.canvas;\n/**\n * Provided for backward compatibility, use Chart.layouts instead.\n * @namespace Chart.layoutService\n * @deprecated since version 2.8.0\n * @todo remove at version 3\n * @private\n */\n\nChart.layoutService = Chart.layouts;","/* MIT license */\nvar convert = require('color-convert');\n\nvar string = require('chartjs-color-string');\n\nvar Color = function Color(obj) {\n  if (obj instanceof Color) {\n    return obj;\n  }\n\n  if (!(this instanceof Color)) {\n    return new Color(obj);\n  }\n\n  this.valid = false;\n  this.values = {\n    rgb: [0, 0, 0],\n    hsl: [0, 0, 0],\n    hsv: [0, 0, 0],\n    hwb: [0, 0, 0],\n    cmyk: [0, 0, 0, 0],\n    alpha: 1\n  }; // parse Color() argument\n\n  var vals;\n\n  if (typeof obj === 'string') {\n    vals = string.getRgba(obj);\n\n    if (vals) {\n      this.setValues('rgb', vals);\n    } else if (vals = string.getHsla(obj)) {\n      this.setValues('hsl', vals);\n    } else if (vals = string.getHwb(obj)) {\n      this.setValues('hwb', vals);\n    }\n  } else if (typeof obj === 'object') {\n    vals = obj;\n\n    if (vals.r !== undefined || vals.red !== undefined) {\n      this.setValues('rgb', vals);\n    } else if (vals.l !== undefined || vals.lightness !== undefined) {\n      this.setValues('hsl', vals);\n    } else if (vals.v !== undefined || vals.value !== undefined) {\n      this.setValues('hsv', vals);\n    } else if (vals.w !== undefined || vals.whiteness !== undefined) {\n      this.setValues('hwb', vals);\n    } else if (vals.c !== undefined || vals.cyan !== undefined) {\n      this.setValues('cmyk', vals);\n    }\n  }\n};\n\nColor.prototype = {\n  isValid: function isValid() {\n    return this.valid;\n  },\n  rgb: function rgb() {\n    return this.setSpace('rgb', arguments);\n  },\n  hsl: function hsl() {\n    return this.setSpace('hsl', arguments);\n  },\n  hsv: function hsv() {\n    return this.setSpace('hsv', arguments);\n  },\n  hwb: function hwb() {\n    return this.setSpace('hwb', arguments);\n  },\n  cmyk: function cmyk() {\n    return this.setSpace('cmyk', arguments);\n  },\n  rgbArray: function rgbArray() {\n    return this.values.rgb;\n  },\n  hslArray: function hslArray() {\n    return this.values.hsl;\n  },\n  hsvArray: function hsvArray() {\n    return this.values.hsv;\n  },\n  hwbArray: function hwbArray() {\n    var values = this.values;\n\n    if (values.alpha !== 1) {\n      return values.hwb.concat([values.alpha]);\n    }\n\n    return values.hwb;\n  },\n  cmykArray: function cmykArray() {\n    return this.values.cmyk;\n  },\n  rgbaArray: function rgbaArray() {\n    var values = this.values;\n    return values.rgb.concat([values.alpha]);\n  },\n  hslaArray: function hslaArray() {\n    var values = this.values;\n    return values.hsl.concat([values.alpha]);\n  },\n  alpha: function alpha(val) {\n    if (val === undefined) {\n      return this.values.alpha;\n    }\n\n    this.setValues('alpha', val);\n    return this;\n  },\n  red: function red(val) {\n    return this.setChannel('rgb', 0, val);\n  },\n  green: function green(val) {\n    return this.setChannel('rgb', 1, val);\n  },\n  blue: function blue(val) {\n    return this.setChannel('rgb', 2, val);\n  },\n  hue: function hue(val) {\n    if (val) {\n      val %= 360;\n      val = val < 0 ? 360 + val : val;\n    }\n\n    return this.setChannel('hsl', 0, val);\n  },\n  saturation: function saturation(val) {\n    return this.setChannel('hsl', 1, val);\n  },\n  lightness: function lightness(val) {\n    return this.setChannel('hsl', 2, val);\n  },\n  saturationv: function saturationv(val) {\n    return this.setChannel('hsv', 1, val);\n  },\n  whiteness: function whiteness(val) {\n    return this.setChannel('hwb', 1, val);\n  },\n  blackness: function blackness(val) {\n    return this.setChannel('hwb', 2, val);\n  },\n  value: function value(val) {\n    return this.setChannel('hsv', 2, val);\n  },\n  cyan: function cyan(val) {\n    return this.setChannel('cmyk', 0, val);\n  },\n  magenta: function magenta(val) {\n    return this.setChannel('cmyk', 1, val);\n  },\n  yellow: function yellow(val) {\n    return this.setChannel('cmyk', 2, val);\n  },\n  black: function black(val) {\n    return this.setChannel('cmyk', 3, val);\n  },\n  hexString: function hexString() {\n    return string.hexString(this.values.rgb);\n  },\n  rgbString: function rgbString() {\n    return string.rgbString(this.values.rgb, this.values.alpha);\n  },\n  rgbaString: function rgbaString() {\n    return string.rgbaString(this.values.rgb, this.values.alpha);\n  },\n  percentString: function percentString() {\n    return string.percentString(this.values.rgb, this.values.alpha);\n  },\n  hslString: function hslString() {\n    return string.hslString(this.values.hsl, this.values.alpha);\n  },\n  hslaString: function hslaString() {\n    return string.hslaString(this.values.hsl, this.values.alpha);\n  },\n  hwbString: function hwbString() {\n    return string.hwbString(this.values.hwb, this.values.alpha);\n  },\n  keyword: function keyword() {\n    return string.keyword(this.values.rgb, this.values.alpha);\n  },\n  rgbNumber: function rgbNumber() {\n    var rgb = this.values.rgb;\n    return rgb[0] << 16 | rgb[1] << 8 | rgb[2];\n  },\n  luminosity: function luminosity() {\n    // http://www.w3.org/TR/WCAG20/#relativeluminancedef\n    var rgb = this.values.rgb;\n    var lum = [];\n\n    for (var i = 0; i < rgb.length; i++) {\n      var chan = rgb[i] / 255;\n      lum[i] = chan <= 0.03928 ? chan / 12.92 : Math.pow((chan + 0.055) / 1.055, 2.4);\n    }\n\n    return 0.2126 * lum[0] + 0.7152 * lum[1] + 0.0722 * lum[2];\n  },\n  contrast: function contrast(color2) {\n    // http://www.w3.org/TR/WCAG20/#contrast-ratiodef\n    var lum1 = this.luminosity();\n    var lum2 = color2.luminosity();\n\n    if (lum1 > lum2) {\n      return (lum1 + 0.05) / (lum2 + 0.05);\n    }\n\n    return (lum2 + 0.05) / (lum1 + 0.05);\n  },\n  level: function level(color2) {\n    var contrastRatio = this.contrast(color2);\n\n    if (contrastRatio >= 7.1) {\n      return 'AAA';\n    }\n\n    return contrastRatio >= 4.5 ? 'AA' : '';\n  },\n  dark: function dark() {\n    // YIQ equation from http://24ways.org/2010/calculating-color-contrast\n    var rgb = this.values.rgb;\n    var yiq = (rgb[0] * 299 + rgb[1] * 587 + rgb[2] * 114) / 1000;\n    return yiq < 128;\n  },\n  light: function light() {\n    return !this.dark();\n  },\n  negate: function negate() {\n    var rgb = [];\n\n    for (var i = 0; i < 3; i++) {\n      rgb[i] = 255 - this.values.rgb[i];\n    }\n\n    this.setValues('rgb', rgb);\n    return this;\n  },\n  lighten: function lighten(ratio) {\n    var hsl = this.values.hsl;\n    hsl[2] += hsl[2] * ratio;\n    this.setValues('hsl', hsl);\n    return this;\n  },\n  darken: function darken(ratio) {\n    var hsl = this.values.hsl;\n    hsl[2] -= hsl[2] * ratio;\n    this.setValues('hsl', hsl);\n    return this;\n  },\n  saturate: function saturate(ratio) {\n    var hsl = this.values.hsl;\n    hsl[1] += hsl[1] * ratio;\n    this.setValues('hsl', hsl);\n    return this;\n  },\n  desaturate: function desaturate(ratio) {\n    var hsl = this.values.hsl;\n    hsl[1] -= hsl[1] * ratio;\n    this.setValues('hsl', hsl);\n    return this;\n  },\n  whiten: function whiten(ratio) {\n    var hwb = this.values.hwb;\n    hwb[1] += hwb[1] * ratio;\n    this.setValues('hwb', hwb);\n    return this;\n  },\n  blacken: function blacken(ratio) {\n    var hwb = this.values.hwb;\n    hwb[2] += hwb[2] * ratio;\n    this.setValues('hwb', hwb);\n    return this;\n  },\n  greyscale: function greyscale() {\n    var rgb = this.values.rgb; // http://en.wikipedia.org/wiki/Grayscale#Converting_color_to_grayscale\n\n    var val = rgb[0] * 0.3 + rgb[1] * 0.59 + rgb[2] * 0.11;\n    this.setValues('rgb', [val, val, val]);\n    return this;\n  },\n  clearer: function clearer(ratio) {\n    var alpha = this.values.alpha;\n    this.setValues('alpha', alpha - alpha * ratio);\n    return this;\n  },\n  opaquer: function opaquer(ratio) {\n    var alpha = this.values.alpha;\n    this.setValues('alpha', alpha + alpha * ratio);\n    return this;\n  },\n  rotate: function rotate(degrees) {\n    var hsl = this.values.hsl;\n    var hue = (hsl[0] + degrees) % 360;\n    hsl[0] = hue < 0 ? 360 + hue : hue;\n    this.setValues('hsl', hsl);\n    return this;\n  },\n\n  /**\n   * Ported from sass implementation in C\n   * https://github.com/sass/libsass/blob/0e6b4a2850092356aa3ece07c6b249f0221caced/functions.cpp#L209\n   */\n  mix: function mix(mixinColor, weight) {\n    var color1 = this;\n    var color2 = mixinColor;\n    var p = weight === undefined ? 0.5 : weight;\n    var w = 2 * p - 1;\n    var a = color1.alpha() - color2.alpha();\n    var w1 = ((w * a === -1 ? w : (w + a) / (1 + w * a)) + 1) / 2.0;\n    var w2 = 1 - w1;\n    return this.rgb(w1 * color1.red() + w2 * color2.red(), w1 * color1.green() + w2 * color2.green(), w1 * color1.blue() + w2 * color2.blue()).alpha(color1.alpha() * p + color2.alpha() * (1 - p));\n  },\n  toJSON: function toJSON() {\n    return this.rgb();\n  },\n  clone: function clone() {\n    // NOTE(SB): using node-clone creates a dependency to Buffer when using browserify,\n    // making the final build way to big to embed in Chart.js. So let's do it manually,\n    // assuming that values to clone are 1 dimension arrays containing only numbers,\n    // except 'alpha' which is a number.\n    var result = new Color();\n    var source = this.values;\n    var target = result.values;\n    var value, type;\n\n    for (var prop in source) {\n      if (source.hasOwnProperty(prop)) {\n        value = source[prop];\n        type = {}.toString.call(value);\n\n        if (type === '[object Array]') {\n          target[prop] = value.slice(0);\n        } else if (type === '[object Number]') {\n          target[prop] = value;\n        } else {\n          console.error('unexpected color value:', value);\n        }\n      }\n    }\n\n    return result;\n  }\n};\nColor.prototype.spaces = {\n  rgb: ['red', 'green', 'blue'],\n  hsl: ['hue', 'saturation', 'lightness'],\n  hsv: ['hue', 'saturation', 'value'],\n  hwb: ['hue', 'whiteness', 'blackness'],\n  cmyk: ['cyan', 'magenta', 'yellow', 'black']\n};\nColor.prototype.maxes = {\n  rgb: [255, 255, 255],\n  hsl: [360, 100, 100],\n  hsv: [360, 100, 100],\n  hwb: [360, 100, 100],\n  cmyk: [100, 100, 100, 100]\n};\n\nColor.prototype.getValues = function (space) {\n  var values = this.values;\n  var vals = {};\n\n  for (var i = 0; i < space.length; i++) {\n    vals[space.charAt(i)] = values[space][i];\n  }\n\n  if (values.alpha !== 1) {\n    vals.a = values.alpha;\n  } // {r: 255, g: 255, b: 255, a: 0.4}\n\n\n  return vals;\n};\n\nColor.prototype.setValues = function (space, vals) {\n  var values = this.values;\n  var spaces = this.spaces;\n  var maxes = this.maxes;\n  var alpha = 1;\n  var i;\n  this.valid = true;\n\n  if (space === 'alpha') {\n    alpha = vals;\n  } else if (vals.length) {\n    // [10, 10, 10]\n    values[space] = vals.slice(0, space.length);\n    alpha = vals[space.length];\n  } else if (vals[space.charAt(0)] !== undefined) {\n    // {r: 10, g: 10, b: 10}\n    for (i = 0; i < space.length; i++) {\n      values[space][i] = vals[space.charAt(i)];\n    }\n\n    alpha = vals.a;\n  } else if (vals[spaces[space][0]] !== undefined) {\n    // {red: 10, green: 10, blue: 10}\n    var chans = spaces[space];\n\n    for (i = 0; i < space.length; i++) {\n      values[space][i] = vals[chans[i]];\n    }\n\n    alpha = vals.alpha;\n  }\n\n  values.alpha = Math.max(0, Math.min(1, alpha === undefined ? values.alpha : alpha));\n\n  if (space === 'alpha') {\n    return false;\n  }\n\n  var capped; // cap values of the space prior converting all values\n\n  for (i = 0; i < space.length; i++) {\n    capped = Math.max(0, Math.min(maxes[space][i], values[space][i]));\n    values[space][i] = Math.round(capped);\n  } // convert to all the other color spaces\n\n\n  for (var sname in spaces) {\n    if (sname !== space) {\n      values[sname] = convert[space][sname](values[space]);\n    }\n  }\n\n  return true;\n};\n\nColor.prototype.setSpace = function (space, args) {\n  var vals = args[0];\n\n  if (vals === undefined) {\n    // color.rgb()\n    return this.getValues(space);\n  } // color.rgb(10, 10, 10)\n\n\n  if (typeof vals === 'number') {\n    vals = Array.prototype.slice.call(args);\n  }\n\n  this.setValues(space, vals);\n  return this;\n};\n\nColor.prototype.setChannel = function (space, index, val) {\n  var svalues = this.values[space];\n\n  if (val === undefined) {\n    // color.red()\n    return svalues[index];\n  } else if (val === svalues[index]) {\n    // color.red(color.red())\n    return this;\n  } // color.red(100)\n\n\n  svalues[index] = val;\n  this.setValues(space, svalues);\n  return this;\n};\n\nif (typeof window !== 'undefined') {\n  window.Color = Color;\n}\n\nmodule.exports = Color;","'use strict';\n\nvar Element = require('./core.element');\n\nvar exports = module.exports = Element.extend({\n  chart: null,\n  // the animation associated chart instance\n  currentStep: 0,\n  // the current animation step\n  numSteps: 60,\n  // default number of steps\n  easing: '',\n  // the easing to use for this animation\n  render: null,\n  // render function used by the animation service\n  onAnimationProgress: null,\n  // user specified callback to fire on each step of the animation\n  onAnimationComplete: null // user specified callback to fire when the animation finishes\n\n}); // DEPRECATIONS\n\n/**\n * Provided for backward compatibility, use Chart.Animation instead\n * @prop Chart.Animation#animationObject\n * @deprecated since version 2.6.0\n * @todo remove at version 3\n */\n\nObject.defineProperty(exports.prototype, 'animationObject', {\n  get: function get() {\n    return this;\n  }\n});\n/**\n * Provided for backward compatibility, use Chart.Animation#chart instead\n * @prop Chart.Animation#chartInstance\n * @deprecated since version 2.6.0\n * @todo remove at version 3\n */\n\nObject.defineProperty(exports.prototype, 'chartInstance', {\n  get: function get() {\n    return this.chart;\n  },\n  set: function set(value) {\n    this.chart = value;\n  }\n});","/* global window: false */\n'use strict';\n\nvar defaults = require('./core.defaults');\n\nvar helpers = require('../helpers/index');\n\ndefaults._set('global', {\n  animation: {\n    duration: 1000,\n    easing: 'easeOutQuart',\n    onProgress: helpers.noop,\n    onComplete: helpers.noop\n  }\n});\n\nmodule.exports = {\n  frameDuration: 17,\n  animations: [],\n  dropFrames: 0,\n  request: null,\n\n  /**\n   * @param {Chart} chart - The chart to animate.\n   * @param {Chart.Animation} animation - The animation that we will animate.\n   * @param {Number} duration - The animation duration in ms.\n   * @param {Boolean} lazy - if true, the chart is not marked as animating to enable more responsive interactions\n   */\n  addAnimation: function addAnimation(chart, animation, duration, lazy) {\n    var animations = this.animations;\n    var i, ilen;\n    animation.chart = chart;\n\n    if (!lazy) {\n      chart.animating = true;\n    }\n\n    for (i = 0, ilen = animations.length; i < ilen; ++i) {\n      if (animations[i].chart === chart) {\n        animations[i] = animation;\n        return;\n      }\n    }\n\n    animations.push(animation); // If there are no animations queued, manually kickstart a digest, for lack of a better word\n\n    if (animations.length === 1) {\n      this.requestAnimationFrame();\n    }\n  },\n  cancelAnimation: function cancelAnimation(chart) {\n    var index = helpers.findIndex(this.animations, function (animation) {\n      return animation.chart === chart;\n    });\n\n    if (index !== -1) {\n      this.animations.splice(index, 1);\n      chart.animating = false;\n    }\n  },\n  requestAnimationFrame: function requestAnimationFrame() {\n    var me = this;\n\n    if (me.request === null) {\n      // Skip animation frame requests until the active one is executed.\n      // This can happen when processing mouse events, e.g. 'mousemove'\n      // and 'mouseout' events will trigger multiple renders.\n      me.request = helpers.requestAnimFrame.call(window, function () {\n        me.request = null;\n        me.startDigest();\n      });\n    }\n  },\n\n  /**\n   * @private\n   */\n  startDigest: function startDigest() {\n    var me = this;\n    var startTime = Date.now();\n    var framesToDrop = 0;\n\n    if (me.dropFrames > 1) {\n      framesToDrop = Math.floor(me.dropFrames);\n      me.dropFrames = me.dropFrames % 1;\n    }\n\n    me.advance(1 + framesToDrop);\n    var endTime = Date.now();\n    me.dropFrames += (endTime - startTime) / me.frameDuration; // Do we have more stuff to animate?\n\n    if (me.animations.length > 0) {\n      me.requestAnimationFrame();\n    }\n  },\n\n  /**\n   * @private\n   */\n  advance: function advance(count) {\n    var animations = this.animations;\n    var animation, chart;\n    var i = 0;\n\n    while (i < animations.length) {\n      animation = animations[i];\n      chart = animation.chart;\n      animation.currentStep = (animation.currentStep || 0) + count;\n      animation.currentStep = Math.min(animation.currentStep, animation.numSteps);\n      helpers.callback(animation.render, [chart, animation], chart);\n      helpers.callback(animation.onAnimationProgress, [animation], chart);\n\n      if (animation.currentStep >= animation.numSteps) {\n        helpers.callback(animation.onAnimationComplete, [animation], chart);\n        chart.animating = false;\n        animations.splice(i, 1);\n      } else {\n        ++i;\n      }\n    }\n  }\n};","'use strict';\n\nvar helpers = require('../helpers/index');\n/**\n * Helper function to get relative position for an event\n * @param {Event|IEvent} event - The event to get the position for\n * @param {Chart} chart - The chart\n * @returns {Point} the event position\n */\n\n\nfunction getRelativePosition(e, chart) {\n  if (e.native) {\n    return {\n      x: e.x,\n      y: e.y\n    };\n  }\n\n  return helpers.getRelativePosition(e, chart);\n}\n/**\n * Helper function to traverse all of the visible elements in the chart\n * @param chart {chart} the chart\n * @param handler {Function} the callback to execute for each visible item\n */\n\n\nfunction parseVisibleItems(chart, handler) {\n  var datasets = chart.data.datasets;\n  var meta, i, j, ilen, jlen;\n\n  for (i = 0, ilen = datasets.length; i < ilen; ++i) {\n    if (!chart.isDatasetVisible(i)) {\n      continue;\n    }\n\n    meta = chart.getDatasetMeta(i);\n\n    for (j = 0, jlen = meta.data.length; j < jlen; ++j) {\n      var element = meta.data[j];\n\n      if (!element._view.skip) {\n        handler(element);\n      }\n    }\n  }\n}\n/**\n * Helper function to get the items that intersect the event position\n * @param items {ChartElement[]} elements to filter\n * @param position {Point} the point to be nearest to\n * @return {ChartElement[]} the nearest items\n */\n\n\nfunction getIntersectItems(chart, position) {\n  var elements = [];\n  parseVisibleItems(chart, function (element) {\n    if (element.inRange(position.x, position.y)) {\n      elements.push(element);\n    }\n  });\n  return elements;\n}\n/**\n * Helper function to get the items nearest to the event position considering all visible items in teh chart\n * @param chart {Chart} the chart to look at elements from\n * @param position {Point} the point to be nearest to\n * @param intersect {Boolean} if true, only consider items that intersect the position\n * @param distanceMetric {Function} function to provide the distance between points\n * @return {ChartElement[]} the nearest items\n */\n\n\nfunction getNearestItems(chart, position, intersect, distanceMetric) {\n  var minDistance = Number.POSITIVE_INFINITY;\n  var nearestItems = [];\n  parseVisibleItems(chart, function (element) {\n    if (intersect && !element.inRange(position.x, position.y)) {\n      return;\n    }\n\n    var center = element.getCenterPoint();\n    var distance = distanceMetric(position, center);\n\n    if (distance < minDistance) {\n      nearestItems = [element];\n      minDistance = distance;\n    } else if (distance === minDistance) {\n      // Can have multiple items at the same distance in which case we sort by size\n      nearestItems.push(element);\n    }\n  });\n  return nearestItems;\n}\n/**\n * Get a distance metric function for two points based on the\n * axis mode setting\n * @param {String} axis the axis mode. x|y|xy\n */\n\n\nfunction getDistanceMetricForAxis(axis) {\n  var useX = axis.indexOf('x') !== -1;\n  var useY = axis.indexOf('y') !== -1;\n  return function (pt1, pt2) {\n    var deltaX = useX ? Math.abs(pt1.x - pt2.x) : 0;\n    var deltaY = useY ? Math.abs(pt1.y - pt2.y) : 0;\n    return Math.sqrt(Math.pow(deltaX, 2) + Math.pow(deltaY, 2));\n  };\n}\n\nfunction indexMode(chart, e, options) {\n  var position = getRelativePosition(e, chart); // Default axis for index mode is 'x' to match old behaviour\n\n  options.axis = options.axis || 'x';\n  var distanceMetric = getDistanceMetricForAxis(options.axis);\n  var items = options.intersect ? getIntersectItems(chart, position) : getNearestItems(chart, position, false, distanceMetric);\n  var elements = [];\n\n  if (!items.length) {\n    return [];\n  }\n\n  chart.data.datasets.forEach(function (dataset, datasetIndex) {\n    if (chart.isDatasetVisible(datasetIndex)) {\n      var meta = chart.getDatasetMeta(datasetIndex);\n      var element = meta.data[items[0]._index]; // don't count items that are skipped (null data)\n\n      if (element && !element._view.skip) {\n        elements.push(element);\n      }\n    }\n  });\n  return elements;\n}\n/**\n * @interface IInteractionOptions\n */\n\n/**\n * If true, only consider items that intersect the point\n * @name IInterfaceOptions#boolean\n * @type Boolean\n */\n\n/**\n * Contains interaction related functions\n * @namespace Chart.Interaction\n */\n\n\nmodule.exports = {\n  // Helper function for different modes\n  modes: {\n    single: function single(chart, e) {\n      var position = getRelativePosition(e, chart);\n      var elements = [];\n      parseVisibleItems(chart, function (element) {\n        if (element.inRange(position.x, position.y)) {\n          elements.push(element);\n          return elements;\n        }\n      });\n      return elements.slice(0, 1);\n    },\n\n    /**\n     * @function Chart.Interaction.modes.label\n     * @deprecated since version 2.4.0\n     * @todo remove at version 3\n     * @private\n     */\n    label: indexMode,\n\n    /**\n     * Returns items at the same index. If the options.intersect parameter is true, we only return items if we intersect something\n     * If the options.intersect mode is false, we find the nearest item and return the items at the same index as that item\n     * @function Chart.Interaction.modes.index\n     * @since v2.4.0\n     * @param chart {chart} the chart we are returning items from\n     * @param e {Event} the event we are find things at\n     * @param options {IInteractionOptions} options to use during interaction\n     * @return {Chart.Element[]} Array of elements that are under the point. If none are found, an empty array is returned\n     */\n    index: indexMode,\n\n    /**\n     * Returns items in the same dataset. If the options.intersect parameter is true, we only return items if we intersect something\n     * If the options.intersect is false, we find the nearest item and return the items in that dataset\n     * @function Chart.Interaction.modes.dataset\n     * @param chart {chart} the chart we are returning items from\n     * @param e {Event} the event we are find things at\n     * @param options {IInteractionOptions} options to use during interaction\n     * @return {Chart.Element[]} Array of elements that are under the point. If none are found, an empty array is returned\n     */\n    dataset: function dataset(chart, e, options) {\n      var position = getRelativePosition(e, chart);\n      options.axis = options.axis || 'xy';\n      var distanceMetric = getDistanceMetricForAxis(options.axis);\n      var items = options.intersect ? getIntersectItems(chart, position) : getNearestItems(chart, position, false, distanceMetric);\n\n      if (items.length > 0) {\n        items = chart.getDatasetMeta(items[0]._datasetIndex).data;\n      }\n\n      return items;\n    },\n\n    /**\n     * @function Chart.Interaction.modes.x-axis\n     * @deprecated since version 2.4.0. Use index mode and intersect == true\n     * @todo remove at version 3\n     * @private\n     */\n    'x-axis': function xAxis(chart, e) {\n      return indexMode(chart, e, {\n        intersect: false\n      });\n    },\n\n    /**\n     * Point mode returns all elements that hit test based on the event position\n     * of the event\n     * @function Chart.Interaction.modes.intersect\n     * @param chart {chart} the chart we are returning items from\n     * @param e {Event} the event we are find things at\n     * @return {Chart.Element[]} Array of elements that are under the point. If none are found, an empty array is returned\n     */\n    point: function point(chart, e) {\n      var position = getRelativePosition(e, chart);\n      return getIntersectItems(chart, position);\n    },\n\n    /**\n     * nearest mode returns the element closest to the point\n     * @function Chart.Interaction.modes.intersect\n     * @param chart {chart} the chart we are returning items from\n     * @param e {Event} the event we are find things at\n     * @param options {IInteractionOptions} options to use\n     * @return {Chart.Element[]} Array of elements that are under the point. If none are found, an empty array is returned\n     */\n    nearest: function nearest(chart, e, options) {\n      var position = getRelativePosition(e, chart);\n      options.axis = options.axis || 'xy';\n      var distanceMetric = getDistanceMetricForAxis(options.axis);\n      var nearestItems = getNearestItems(chart, position, options.intersect, distanceMetric); // We have multiple items at the same distance from the event. Now sort by smallest\n\n      if (nearestItems.length > 1) {\n        nearestItems.sort(function (a, b) {\n          var sizeA = a.getArea();\n          var sizeB = b.getArea();\n          var ret = sizeA - sizeB;\n\n          if (ret === 0) {\n            // if equal sort by dataset index\n            ret = a._datasetIndex - b._datasetIndex;\n          }\n\n          return ret;\n        });\n      } // Return only 1 item\n\n\n      return nearestItems.slice(0, 1);\n    },\n\n    /**\n     * x mode returns the elements that hit-test at the current x coordinate\n     * @function Chart.Interaction.modes.x\n     * @param chart {chart} the chart we are returning items from\n     * @param e {Event} the event we are find things at\n     * @param options {IInteractionOptions} options to use\n     * @return {Chart.Element[]} Array of elements that are under the point. If none are found, an empty array is returned\n     */\n    x: function x(chart, e, options) {\n      var position = getRelativePosition(e, chart);\n      var items = [];\n      var intersectsItem = false;\n      parseVisibleItems(chart, function (element) {\n        if (element.inXRange(position.x)) {\n          items.push(element);\n        }\n\n        if (element.inRange(position.x, position.y)) {\n          intersectsItem = true;\n        }\n      }); // If we want to trigger on an intersect and we don't have any items\n      // that intersect the position, return nothing\n\n      if (options.intersect && !intersectsItem) {\n        items = [];\n      }\n\n      return items;\n    },\n\n    /**\n     * y mode returns the elements that hit-test at the current y coordinate\n     * @function Chart.Interaction.modes.y\n     * @param chart {chart} the chart we are returning items from\n     * @param e {Event} the event we are find things at\n     * @param options {IInteractionOptions} options to use\n     * @return {Chart.Element[]} Array of elements that are under the point. If none are found, an empty array is returned\n     */\n    y: function y(chart, e, options) {\n      var position = getRelativePosition(e, chart);\n      var items = [];\n      var intersectsItem = false;\n      parseVisibleItems(chart, function (element) {\n        if (element.inYRange(position.y)) {\n          items.push(element);\n        }\n\n        if (element.inRange(position.x, position.y)) {\n          intersectsItem = true;\n        }\n      }); // If we want to trigger on an intersect and we don't have any items\n      // that intersect the position, return nothing\n\n      if (options.intersect && !intersectsItem) {\n        items = [];\n      }\n\n      return items;\n    }\n  }\n};","'use strict';\n\nvar helpers = require('../helpers/index');\n\nvar basic = require('./platform.basic');\n\nvar dom = require('./platform.dom'); // @TODO Make possible to select another platform at build time.\n\n\nvar implementation = dom._enabled ? dom : basic;\n/**\n * @namespace Chart.platform\n * @see https://chartjs.gitbooks.io/proposals/content/Platform.html\n * @since 2.4.0\n */\n\nmodule.exports = helpers.extend({\n  /**\n   * @since 2.7.0\n   */\n  initialize: function initialize() {},\n\n  /**\n   * Called at chart construction time, returns a context2d instance implementing\n   * the [W3C Canvas 2D Context API standard]{@link https://www.w3.org/TR/2dcontext/}.\n   * @param {*} item - The native item from which to acquire context (platform specific)\n   * @param {Object} options - The chart options\n   * @returns {CanvasRenderingContext2D} context2d instance\n   */\n  acquireContext: function acquireContext() {},\n\n  /**\n   * Called at chart destruction time, releases any resources associated to the context\n   * previously returned by the acquireContext() method.\n   * @param {CanvasRenderingContext2D} context - The context2d instance\n   * @returns {Boolean} true if the method succeeded, else false\n   */\n  releaseContext: function releaseContext() {},\n\n  /**\n   * Registers the specified listener on the given chart.\n   * @param {Chart} chart - Chart from which to listen for event\n   * @param {String} type - The ({@link IEvent}) type to listen for\n   * @param {Function} listener - Receives a notification (an object that implements\n   * the {@link IEvent} interface) when an event of the specified type occurs.\n   */\n  addEventListener: function addEventListener() {},\n\n  /**\n   * Removes the specified listener previously registered with addEventListener.\n   * @param {Chart} chart -Chart from which to remove the listener\n   * @param {String} type - The ({@link IEvent}) type to remove\n   * @param {Function} listener - The listener function to remove from the event target.\n   */\n  removeEventListener: function removeEventListener() {}\n}, implementation);\n/**\n * @interface IPlatform\n * Allows abstracting platform dependencies away from the chart\n * @borrows Chart.platform.acquireContext as acquireContext\n * @borrows Chart.platform.releaseContext as releaseContext\n * @borrows Chart.platform.addEventListener as addEventListener\n * @borrows Chart.platform.removeEventListener as removeEventListener\n */\n\n/**\n * @interface IEvent\n * @prop {String} type - The event type name, possible values are:\n * 'contextmenu', 'mouseenter', 'mousedown', 'mousemove', 'mouseup', 'mouseout',\n * 'click', 'dblclick', 'keydown', 'keypress', 'keyup' and 'resize'\n * @prop {*} native - The original native event (null for emulated events, e.g. 'resize')\n * @prop {Number} x - The mouse x position, relative to the canvas (null for incompatible events)\n * @prop {Number} y - The mouse y position, relative to the canvas (null for incompatible events)\n */","'use strict';\n\nvar defaults = require('./core.defaults');\n\nvar helpers = require('../helpers/index');\n\ndefaults._set('global', {\n  plugins: {}\n});\n/**\n * The plugin service singleton\n * @namespace Chart.plugins\n * @since 2.1.0\n */\n\n\nmodule.exports = {\n  /**\n   * Globally registered plugins.\n   * @private\n   */\n  _plugins: [],\n\n  /**\n   * This identifier is used to invalidate the descriptors cache attached to each chart\n   * when a global plugin is registered or unregistered. In this case, the cache ID is\n   * incremented and descriptors are regenerated during following API calls.\n   * @private\n   */\n  _cacheId: 0,\n\n  /**\n   * Registers the given plugin(s) if not already registered.\n   * @param {Array|Object} plugins plugin instance(s).\n   */\n  register: function register(plugins) {\n    var p = this._plugins;\n    [].concat(plugins).forEach(function (plugin) {\n      if (p.indexOf(plugin) === -1) {\n        p.push(plugin);\n      }\n    });\n    this._cacheId++;\n  },\n\n  /**\n   * Unregisters the given plugin(s) only if registered.\n   * @param {Array|Object} plugins plugin instance(s).\n   */\n  unregister: function unregister(plugins) {\n    var p = this._plugins;\n    [].concat(plugins).forEach(function (plugin) {\n      var idx = p.indexOf(plugin);\n\n      if (idx !== -1) {\n        p.splice(idx, 1);\n      }\n    });\n    this._cacheId++;\n  },\n\n  /**\n   * Remove all registered plugins.\n   * @since 2.1.5\n   */\n  clear: function clear() {\n    this._plugins = [];\n    this._cacheId++;\n  },\n\n  /**\n   * Returns the number of registered plugins?\n   * @returns {Number}\n   * @since 2.1.5\n   */\n  count: function count() {\n    return this._plugins.length;\n  },\n\n  /**\n   * Returns all registered plugin instances.\n   * @returns {Array} array of plugin objects.\n   * @since 2.1.5\n   */\n  getAll: function getAll() {\n    return this._plugins;\n  },\n\n  /**\n   * Calls enabled plugins for `chart` on the specified hook and with the given args.\n   * This method immediately returns as soon as a plugin explicitly returns false. The\n   * returned value can be used, for instance, to interrupt the current action.\n   * @param {Object} chart - The chart instance for which plugins should be called.\n   * @param {String} hook - The name of the plugin method to call (e.g. 'beforeUpdate').\n   * @param {Array} [args] - Extra arguments to apply to the hook call.\n   * @returns {Boolean} false if any of the plugins return false, else returns true.\n   */\n  notify: function notify(chart, hook, args) {\n    var descriptors = this.descriptors(chart);\n    var ilen = descriptors.length;\n    var i, descriptor, plugin, params, method;\n\n    for (i = 0; i < ilen; ++i) {\n      descriptor = descriptors[i];\n      plugin = descriptor.plugin;\n      method = plugin[hook];\n\n      if (typeof method === 'function') {\n        params = [chart].concat(args || []);\n        params.push(descriptor.options);\n\n        if (method.apply(plugin, params) === false) {\n          return false;\n        }\n      }\n    }\n\n    return true;\n  },\n\n  /**\n   * Returns descriptors of enabled plugins for the given chart.\n   * @returns {Array} [{ plugin, options }]\n   * @private\n   */\n  descriptors: function descriptors(chart) {\n    var cache = chart.$plugins || (chart.$plugins = {});\n\n    if (cache.id === this._cacheId) {\n      return cache.descriptors;\n    }\n\n    var plugins = [];\n    var descriptors = [];\n    var config = chart && chart.config || {};\n    var options = config.options && config.options.plugins || {};\n\n    this._plugins.concat(config.plugins || []).forEach(function (plugin) {\n      var idx = plugins.indexOf(plugin);\n\n      if (idx !== -1) {\n        return;\n      }\n\n      var id = plugin.id;\n      var opts = options[id];\n\n      if (opts === false) {\n        return;\n      }\n\n      if (opts === true) {\n        opts = helpers.clone(defaults.global.plugins[id]);\n      }\n\n      plugins.push(plugin);\n      descriptors.push({\n        plugin: plugin,\n        options: opts || {}\n      });\n    });\n\n    cache.descriptors = descriptors;\n    cache.id = this._cacheId;\n    return descriptors;\n  },\n\n  /**\n   * Invalidates cache for the given chart: descriptors hold a reference on plugin option,\n   * but in some cases, this reference can be changed by the user when updating options.\n   * https://github.com/chartjs/Chart.js/issues/5111#issuecomment-355934167\n   * @private\n   */\n  _invalidate: function _invalidate(chart) {\n    delete chart.$plugins;\n  }\n};\n/**\n * Plugin extension hooks.\n * @interface IPlugin\n * @since 2.1.0\n */\n\n/**\n * @method IPlugin#beforeInit\n * @desc Called before initializing `chart`.\n * @param {Chart.Controller} chart - The chart instance.\n * @param {Object} options - The plugin options.\n */\n\n/**\n * @method IPlugin#afterInit\n * @desc Called after `chart` has been initialized and before the first update.\n * @param {Chart.Controller} chart - The chart instance.\n * @param {Object} options - The plugin options.\n */\n\n/**\n * @method IPlugin#beforeUpdate\n * @desc Called before updating `chart`. If any plugin returns `false`, the update\n * is cancelled (and thus subsequent render(s)) until another `update` is triggered.\n * @param {Chart.Controller} chart - The chart instance.\n * @param {Object} options - The plugin options.\n * @returns {Boolean} `false` to cancel the chart update.\n */\n\n/**\n * @method IPlugin#afterUpdate\n * @desc Called after `chart` has been updated and before rendering. Note that this\n * hook will not be called if the chart update has been previously cancelled.\n * @param {Chart.Controller} chart - The chart instance.\n * @param {Object} options - The plugin options.\n */\n\n/**\n * @method IPlugin#beforeDatasetsUpdate\n * @desc Called before updating the `chart` datasets. If any plugin returns `false`,\n * the datasets update is cancelled until another `update` is triggered.\n * @param {Chart.Controller} chart - The chart instance.\n * @param {Object} options - The plugin options.\n * @returns {Boolean} false to cancel the datasets update.\n * @since version 2.1.5\n*/\n\n/**\n * @method IPlugin#afterDatasetsUpdate\n * @desc Called after the `chart` datasets have been updated. Note that this hook\n * will not be called if the datasets update has been previously cancelled.\n * @param {Chart.Controller} chart - The chart instance.\n * @param {Object} options - The plugin options.\n * @since version 2.1.5\n */\n\n/**\n * @method IPlugin#beforeDatasetUpdate\n * @desc Called before updating the `chart` dataset at the given `args.index`. If any plugin\n * returns `false`, the datasets update is cancelled until another `update` is triggered.\n * @param {Chart} chart - The chart instance.\n * @param {Object} args - The call arguments.\n * @param {Number} args.index - The dataset index.\n * @param {Object} args.meta - The dataset metadata.\n * @param {Object} options - The plugin options.\n * @returns {Boolean} `false` to cancel the chart datasets drawing.\n */\n\n/**\n * @method IPlugin#afterDatasetUpdate\n * @desc Called after the `chart` datasets at the given `args.index` has been updated. Note\n * that this hook will not be called if the datasets update has been previously cancelled.\n * @param {Chart} chart - The chart instance.\n * @param {Object} args - The call arguments.\n * @param {Number} args.index - The dataset index.\n * @param {Object} args.meta - The dataset metadata.\n * @param {Object} options - The plugin options.\n */\n\n/**\n * @method IPlugin#beforeLayout\n * @desc Called before laying out `chart`. If any plugin returns `false`,\n * the layout update is cancelled until another `update` is triggered.\n * @param {Chart.Controller} chart - The chart instance.\n * @param {Object} options - The plugin options.\n * @returns {Boolean} `false` to cancel the chart layout.\n */\n\n/**\n * @method IPlugin#afterLayout\n * @desc Called after the `chart` has been layed out. Note that this hook will not\n * be called if the layout update has been previously cancelled.\n * @param {Chart.Controller} chart - The chart instance.\n * @param {Object} options - The plugin options.\n */\n\n/**\n * @method IPlugin#beforeRender\n * @desc Called before rendering `chart`. If any plugin returns `false`,\n * the rendering is cancelled until another `render` is triggered.\n * @param {Chart.Controller} chart - The chart instance.\n * @param {Object} options - The plugin options.\n * @returns {Boolean} `false` to cancel the chart rendering.\n */\n\n/**\n * @method IPlugin#afterRender\n * @desc Called after the `chart` has been fully rendered (and animation completed). Note\n * that this hook will not be called if the rendering has been previously cancelled.\n * @param {Chart.Controller} chart - The chart instance.\n * @param {Object} options - The plugin options.\n */\n\n/**\n * @method IPlugin#beforeDraw\n * @desc Called before drawing `chart` at every animation frame specified by the given\n * easing value. If any plugin returns `false`, the frame drawing is cancelled until\n * another `render` is triggered.\n * @param {Chart.Controller} chart - The chart instance.\n * @param {Number} easingValue - The current animation value, between 0.0 and 1.0.\n * @param {Object} options - The plugin options.\n * @returns {Boolean} `false` to cancel the chart drawing.\n */\n\n/**\n * @method IPlugin#afterDraw\n * @desc Called after the `chart` has been drawn for the specific easing value. Note\n * that this hook will not be called if the drawing has been previously cancelled.\n * @param {Chart.Controller} chart - The chart instance.\n * @param {Number} easingValue - The current animation value, between 0.0 and 1.0.\n * @param {Object} options - The plugin options.\n */\n\n/**\n * @method IPlugin#beforeDatasetsDraw\n * @desc Called before drawing the `chart` datasets. If any plugin returns `false`,\n * the datasets drawing is cancelled until another `render` is triggered.\n * @param {Chart.Controller} chart - The chart instance.\n * @param {Number} easingValue - The current animation value, between 0.0 and 1.0.\n * @param {Object} options - The plugin options.\n * @returns {Boolean} `false` to cancel the chart datasets drawing.\n */\n\n/**\n * @method IPlugin#afterDatasetsDraw\n * @desc Called after the `chart` datasets have been drawn. Note that this hook\n * will not be called if the datasets drawing has been previously cancelled.\n * @param {Chart.Controller} chart - The chart instance.\n * @param {Number} easingValue - The current animation value, between 0.0 and 1.0.\n * @param {Object} options - The plugin options.\n */\n\n/**\n * @method IPlugin#beforeDatasetDraw\n * @desc Called before drawing the `chart` dataset at the given `args.index` (datasets\n * are drawn in the reverse order). If any plugin returns `false`, the datasets drawing\n * is cancelled until another `render` is triggered.\n * @param {Chart} chart - The chart instance.\n * @param {Object} args - The call arguments.\n * @param {Number} args.index - The dataset index.\n * @param {Object} args.meta - The dataset metadata.\n * @param {Number} args.easingValue - The current animation value, between 0.0 and 1.0.\n * @param {Object} options - The plugin options.\n * @returns {Boolean} `false` to cancel the chart datasets drawing.\n */\n\n/**\n * @method IPlugin#afterDatasetDraw\n * @desc Called after the `chart` datasets at the given `args.index` have been drawn\n * (datasets are drawn in the reverse order). Note that this hook will not be called\n * if the datasets drawing has been previously cancelled.\n * @param {Chart} chart - The chart instance.\n * @param {Object} args - The call arguments.\n * @param {Number} args.index - The dataset index.\n * @param {Object} args.meta - The dataset metadata.\n * @param {Number} args.easingValue - The current animation value, between 0.0 and 1.0.\n * @param {Object} options - The plugin options.\n */\n\n/**\n * @method IPlugin#beforeTooltipDraw\n * @desc Called before drawing the `tooltip`. If any plugin returns `false`,\n * the tooltip drawing is cancelled until another `render` is triggered.\n * @param {Chart} chart - The chart instance.\n * @param {Object} args - The call arguments.\n * @param {Object} args.tooltip - The tooltip.\n * @param {Number} args.easingValue - The current animation value, between 0.0 and 1.0.\n * @param {Object} options - The plugin options.\n * @returns {Boolean} `false` to cancel the chart tooltip drawing.\n */\n\n/**\n * @method IPlugin#afterTooltipDraw\n * @desc Called after drawing the `tooltip`. Note that this hook will not\n * be called if the tooltip drawing has been previously cancelled.\n * @param {Chart} chart - The chart instance.\n * @param {Object} args - The call arguments.\n * @param {Object} args.tooltip - The tooltip.\n * @param {Number} args.easingValue - The current animation value, between 0.0 and 1.0.\n * @param {Object} options - The plugin options.\n */\n\n/**\n * @method IPlugin#beforeEvent\n * @desc Called before processing the specified `event`. If any plugin returns `false`,\n * the event will be discarded.\n * @param {Chart.Controller} chart - The chart instance.\n * @param {IEvent} event - The event object.\n * @param {Object} options - The plugin options.\n */\n\n/**\n * @method IPlugin#afterEvent\n * @desc Called after the `event` has been consumed. Note that this hook\n * will not be called if the `event` has been previously discarded.\n * @param {Chart.Controller} chart - The chart instance.\n * @param {IEvent} event - The event object.\n * @param {Object} options - The plugin options.\n */\n\n/**\n * @method IPlugin#resize\n * @desc Called after the chart as been resized.\n * @param {Chart.Controller} chart - The chart instance.\n * @param {Number} size - The new canvas display size (eq. canvas.style width & height).\n * @param {Object} options - The plugin options.\n */\n\n/**\n * @method IPlugin#destroy\n * @desc Called after the chart as been destroyed.\n * @param {Chart.Controller} chart - The chart instance.\n * @param {Object} options - The plugin options.\n */","'use strict';\n\nvar defaults = require('./core.defaults');\n\nvar Element = require('./core.element');\n\nvar helpers = require('../helpers/index');\n\ndefaults._set('global', {\n  tooltips: {\n    enabled: true,\n    custom: null,\n    mode: 'nearest',\n    position: 'average',\n    intersect: true,\n    backgroundColor: 'rgba(0,0,0,0.8)',\n    titleFontStyle: 'bold',\n    titleSpacing: 2,\n    titleMarginBottom: 6,\n    titleFontColor: '#fff',\n    titleAlign: 'left',\n    bodySpacing: 2,\n    bodyFontColor: '#fff',\n    bodyAlign: 'left',\n    footerFontStyle: 'bold',\n    footerSpacing: 2,\n    footerMarginTop: 6,\n    footerFontColor: '#fff',\n    footerAlign: 'left',\n    yPadding: 6,\n    xPadding: 6,\n    caretPadding: 2,\n    caretSize: 5,\n    cornerRadius: 6,\n    multiKeyBackground: '#fff',\n    displayColors: true,\n    borderColor: 'rgba(0,0,0,0)',\n    borderWidth: 0,\n    callbacks: {\n      // Args are: (tooltipItems, data)\n      beforeTitle: helpers.noop,\n      title: function title(tooltipItems, data) {\n        // Pick first xLabel for now\n        var title = '';\n        var labels = data.labels;\n        var labelCount = labels ? labels.length : 0;\n\n        if (tooltipItems.length > 0) {\n          var item = tooltipItems[0];\n\n          if (item.xLabel) {\n            title = item.xLabel;\n          } else if (labelCount > 0 && item.index < labelCount) {\n            title = labels[item.index];\n          }\n        }\n\n        return title;\n      },\n      afterTitle: helpers.noop,\n      // Args are: (tooltipItems, data)\n      beforeBody: helpers.noop,\n      // Args are: (tooltipItem, data)\n      beforeLabel: helpers.noop,\n      label: function label(tooltipItem, data) {\n        var label = data.datasets[tooltipItem.datasetIndex].label || '';\n\n        if (label) {\n          label += ': ';\n        }\n\n        label += tooltipItem.yLabel;\n        return label;\n      },\n      labelColor: function labelColor(tooltipItem, chart) {\n        var meta = chart.getDatasetMeta(tooltipItem.datasetIndex);\n        var activeElement = meta.data[tooltipItem.index];\n        var view = activeElement._view;\n        return {\n          borderColor: view.borderColor,\n          backgroundColor: view.backgroundColor\n        };\n      },\n      labelTextColor: function labelTextColor() {\n        return this._options.bodyFontColor;\n      },\n      afterLabel: helpers.noop,\n      // Args are: (tooltipItems, data)\n      afterBody: helpers.noop,\n      // Args are: (tooltipItems, data)\n      beforeFooter: helpers.noop,\n      footer: helpers.noop,\n      afterFooter: helpers.noop\n    }\n  }\n});\n\nvar positioners = {\n  /**\n   * Average mode places the tooltip at the average position of the elements shown\n   * @function Chart.Tooltip.positioners.average\n   * @param elements {ChartElement[]} the elements being displayed in the tooltip\n   * @returns {Point} tooltip position\n   */\n  average: function average(elements) {\n    if (!elements.length) {\n      return false;\n    }\n\n    var i, len;\n    var x = 0;\n    var y = 0;\n    var count = 0;\n\n    for (i = 0, len = elements.length; i < len; ++i) {\n      var el = elements[i];\n\n      if (el && el.hasValue()) {\n        var pos = el.tooltipPosition();\n        x += pos.x;\n        y += pos.y;\n        ++count;\n      }\n    }\n\n    return {\n      x: Math.round(x / count),\n      y: Math.round(y / count)\n    };\n  },\n\n  /**\n   * Gets the tooltip position nearest of the item nearest to the event position\n   * @function Chart.Tooltip.positioners.nearest\n   * @param elements {Chart.Element[]} the tooltip elements\n   * @param eventPosition {Point} the position of the event in canvas coordinates\n   * @returns {Point} the tooltip position\n   */\n  nearest: function nearest(elements, eventPosition) {\n    var x = eventPosition.x;\n    var y = eventPosition.y;\n    var minDistance = Number.POSITIVE_INFINITY;\n    var i, len, nearestElement;\n\n    for (i = 0, len = elements.length; i < len; ++i) {\n      var el = elements[i];\n\n      if (el && el.hasValue()) {\n        var center = el.getCenterPoint();\n        var d = helpers.distanceBetweenPoints(eventPosition, center);\n\n        if (d < minDistance) {\n          minDistance = d;\n          nearestElement = el;\n        }\n      }\n    }\n\n    if (nearestElement) {\n      var tp = nearestElement.tooltipPosition();\n      x = tp.x;\n      y = tp.y;\n    }\n\n    return {\n      x: x,\n      y: y\n    };\n  }\n};\n/**\n * Helper method to merge the opacity into a color\n */\n\nfunction mergeOpacity(colorString, opacity) {\n  var color = helpers.color(colorString);\n  return color.alpha(opacity * color.alpha()).rgbaString();\n} // Helper to push or concat based on if the 2nd parameter is an array or not\n\n\nfunction pushOrConcat(base, toPush) {\n  if (toPush) {\n    if (helpers.isArray(toPush)) {\n      // base = base.concat(toPush);\n      Array.prototype.push.apply(base, toPush);\n    } else {\n      base.push(toPush);\n    }\n  }\n\n  return base;\n}\n/**\n * Returns array of strings split by newline\n * @param {String} value - The value to split by newline.\n * @returns {Array} value if newline present - Returned from String split() method\n * @function\n */\n\n\nfunction splitNewlines(str) {\n  if ((typeof str === 'string' || str instanceof String) && str.indexOf('\\n') > -1) {\n    return str.split('\\n');\n  }\n\n  return str;\n} // Private helper to create a tooltip item model\n// @param element : the chart element (point, arc, bar) to create the tooltip item for\n// @return : new tooltip item\n\n\nfunction createTooltipItem(element) {\n  var xScale = element._xScale;\n  var yScale = element._yScale || element._scale; // handle radar || polarArea charts\n\n  var index = element._index;\n  var datasetIndex = element._datasetIndex;\n  return {\n    xLabel: xScale ? xScale.getLabelForIndex(index, datasetIndex) : '',\n    yLabel: yScale ? yScale.getLabelForIndex(index, datasetIndex) : '',\n    index: index,\n    datasetIndex: datasetIndex,\n    x: element._model.x,\n    y: element._model.y\n  };\n}\n/**\n * Helper to get the reset model for the tooltip\n * @param tooltipOpts {Object} the tooltip options\n */\n\n\nfunction getBaseModel(tooltipOpts) {\n  var globalDefaults = defaults.global;\n  var valueOrDefault = helpers.valueOrDefault;\n  return {\n    // Positioning\n    xPadding: tooltipOpts.xPadding,\n    yPadding: tooltipOpts.yPadding,\n    xAlign: tooltipOpts.xAlign,\n    yAlign: tooltipOpts.yAlign,\n    // Body\n    bodyFontColor: tooltipOpts.bodyFontColor,\n    _bodyFontFamily: valueOrDefault(tooltipOpts.bodyFontFamily, globalDefaults.defaultFontFamily),\n    _bodyFontStyle: valueOrDefault(tooltipOpts.bodyFontStyle, globalDefaults.defaultFontStyle),\n    _bodyAlign: tooltipOpts.bodyAlign,\n    bodyFontSize: valueOrDefault(tooltipOpts.bodyFontSize, globalDefaults.defaultFontSize),\n    bodySpacing: tooltipOpts.bodySpacing,\n    // Title\n    titleFontColor: tooltipOpts.titleFontColor,\n    _titleFontFamily: valueOrDefault(tooltipOpts.titleFontFamily, globalDefaults.defaultFontFamily),\n    _titleFontStyle: valueOrDefault(tooltipOpts.titleFontStyle, globalDefaults.defaultFontStyle),\n    titleFontSize: valueOrDefault(tooltipOpts.titleFontSize, globalDefaults.defaultFontSize),\n    _titleAlign: tooltipOpts.titleAlign,\n    titleSpacing: tooltipOpts.titleSpacing,\n    titleMarginBottom: tooltipOpts.titleMarginBottom,\n    // Footer\n    footerFontColor: tooltipOpts.footerFontColor,\n    _footerFontFamily: valueOrDefault(tooltipOpts.footerFontFamily, globalDefaults.defaultFontFamily),\n    _footerFontStyle: valueOrDefault(tooltipOpts.footerFontStyle, globalDefaults.defaultFontStyle),\n    footerFontSize: valueOrDefault(tooltipOpts.footerFontSize, globalDefaults.defaultFontSize),\n    _footerAlign: tooltipOpts.footerAlign,\n    footerSpacing: tooltipOpts.footerSpacing,\n    footerMarginTop: tooltipOpts.footerMarginTop,\n    // Appearance\n    caretSize: tooltipOpts.caretSize,\n    cornerRadius: tooltipOpts.cornerRadius,\n    backgroundColor: tooltipOpts.backgroundColor,\n    opacity: 0,\n    legendColorBackground: tooltipOpts.multiKeyBackground,\n    displayColors: tooltipOpts.displayColors,\n    borderColor: tooltipOpts.borderColor,\n    borderWidth: tooltipOpts.borderWidth\n  };\n}\n/**\n * Get the size of the tooltip\n */\n\n\nfunction getTooltipSize(tooltip, model) {\n  var ctx = tooltip._chart.ctx;\n  var height = model.yPadding * 2; // Tooltip Padding\n\n  var width = 0; // Count of all lines in the body\n\n  var body = model.body;\n  var combinedBodyLength = body.reduce(function (count, bodyItem) {\n    return count + bodyItem.before.length + bodyItem.lines.length + bodyItem.after.length;\n  }, 0);\n  combinedBodyLength += model.beforeBody.length + model.afterBody.length;\n  var titleLineCount = model.title.length;\n  var footerLineCount = model.footer.length;\n  var titleFontSize = model.titleFontSize;\n  var bodyFontSize = model.bodyFontSize;\n  var footerFontSize = model.footerFontSize;\n  height += titleLineCount * titleFontSize; // Title Lines\n\n  height += titleLineCount ? (titleLineCount - 1) * model.titleSpacing : 0; // Title Line Spacing\n\n  height += titleLineCount ? model.titleMarginBottom : 0; // Title's bottom Margin\n\n  height += combinedBodyLength * bodyFontSize; // Body Lines\n\n  height += combinedBodyLength ? (combinedBodyLength - 1) * model.bodySpacing : 0; // Body Line Spacing\n\n  height += footerLineCount ? model.footerMarginTop : 0; // Footer Margin\n\n  height += footerLineCount * footerFontSize; // Footer Lines\n\n  height += footerLineCount ? (footerLineCount - 1) * model.footerSpacing : 0; // Footer Line Spacing\n  // Title width\n\n  var widthPadding = 0;\n\n  var maxLineWidth = function maxLineWidth(line) {\n    width = Math.max(width, ctx.measureText(line).width + widthPadding);\n  };\n\n  ctx.font = helpers.fontString(titleFontSize, model._titleFontStyle, model._titleFontFamily);\n  helpers.each(model.title, maxLineWidth); // Body width\n\n  ctx.font = helpers.fontString(bodyFontSize, model._bodyFontStyle, model._bodyFontFamily);\n  helpers.each(model.beforeBody.concat(model.afterBody), maxLineWidth); // Body lines may include some extra width due to the color box\n\n  widthPadding = model.displayColors ? bodyFontSize + 2 : 0;\n  helpers.each(body, function (bodyItem) {\n    helpers.each(bodyItem.before, maxLineWidth);\n    helpers.each(bodyItem.lines, maxLineWidth);\n    helpers.each(bodyItem.after, maxLineWidth);\n  }); // Reset back to 0\n\n  widthPadding = 0; // Footer width\n\n  ctx.font = helpers.fontString(footerFontSize, model._footerFontStyle, model._footerFontFamily);\n  helpers.each(model.footer, maxLineWidth); // Add padding\n\n  width += 2 * model.xPadding;\n  return {\n    width: width,\n    height: height\n  };\n}\n/**\n * Helper to get the alignment of a tooltip given the size\n */\n\n\nfunction determineAlignment(tooltip, size) {\n  var model = tooltip._model;\n  var chart = tooltip._chart;\n  var chartArea = tooltip._chart.chartArea;\n  var xAlign = 'center';\n  var yAlign = 'center';\n\n  if (model.y < size.height) {\n    yAlign = 'top';\n  } else if (model.y > chart.height - size.height) {\n    yAlign = 'bottom';\n  }\n\n  var lf, rf; // functions to determine left, right alignment\n\n  var olf, orf; // functions to determine if left/right alignment causes tooltip to go outside chart\n\n  var yf; // function to get the y alignment if the tooltip goes outside of the left or right edges\n\n  var midX = (chartArea.left + chartArea.right) / 2;\n  var midY = (chartArea.top + chartArea.bottom) / 2;\n\n  if (yAlign === 'center') {\n    lf = function lf(x) {\n      return x <= midX;\n    };\n\n    rf = function rf(x) {\n      return x > midX;\n    };\n  } else {\n    lf = function lf(x) {\n      return x <= size.width / 2;\n    };\n\n    rf = function rf(x) {\n      return x >= chart.width - size.width / 2;\n    };\n  }\n\n  olf = function olf(x) {\n    return x + size.width + model.caretSize + model.caretPadding > chart.width;\n  };\n\n  orf = function orf(x) {\n    return x - size.width - model.caretSize - model.caretPadding < 0;\n  };\n\n  yf = function yf(y) {\n    return y <= midY ? 'top' : 'bottom';\n  };\n\n  if (lf(model.x)) {\n    xAlign = 'left'; // Is tooltip too wide and goes over the right side of the chart.?\n\n    if (olf(model.x)) {\n      xAlign = 'center';\n      yAlign = yf(model.y);\n    }\n  } else if (rf(model.x)) {\n    xAlign = 'right'; // Is tooltip too wide and goes outside left edge of canvas?\n\n    if (orf(model.x)) {\n      xAlign = 'center';\n      yAlign = yf(model.y);\n    }\n  }\n\n  var opts = tooltip._options;\n  return {\n    xAlign: opts.xAlign ? opts.xAlign : xAlign,\n    yAlign: opts.yAlign ? opts.yAlign : yAlign\n  };\n}\n/**\n * Helper to get the location a tooltip needs to be placed at given the initial position (via the vm) and the size and alignment\n */\n\n\nfunction getBackgroundPoint(vm, size, alignment, chart) {\n  // Background Position\n  var x = vm.x;\n  var y = vm.y;\n  var caretSize = vm.caretSize;\n  var caretPadding = vm.caretPadding;\n  var cornerRadius = vm.cornerRadius;\n  var xAlign = alignment.xAlign;\n  var yAlign = alignment.yAlign;\n  var paddingAndSize = caretSize + caretPadding;\n  var radiusAndPadding = cornerRadius + caretPadding;\n\n  if (xAlign === 'right') {\n    x -= size.width;\n  } else if (xAlign === 'center') {\n    x -= size.width / 2;\n\n    if (x + size.width > chart.width) {\n      x = chart.width - size.width;\n    }\n\n    if (x < 0) {\n      x = 0;\n    }\n  }\n\n  if (yAlign === 'top') {\n    y += paddingAndSize;\n  } else if (yAlign === 'bottom') {\n    y -= size.height + paddingAndSize;\n  } else {\n    y -= size.height / 2;\n  }\n\n  if (yAlign === 'center') {\n    if (xAlign === 'left') {\n      x += paddingAndSize;\n    } else if (xAlign === 'right') {\n      x -= paddingAndSize;\n    }\n  } else if (xAlign === 'left') {\n    x -= radiusAndPadding;\n  } else if (xAlign === 'right') {\n    x += radiusAndPadding;\n  }\n\n  return {\n    x: x,\n    y: y\n  };\n}\n/**\n * Helper to build before and after body lines\n */\n\n\nfunction getBeforeAfterBodyLines(callback) {\n  return pushOrConcat([], splitNewlines(callback));\n}\n\nvar exports = module.exports = Element.extend({\n  initialize: function initialize() {\n    this._model = getBaseModel(this._options);\n    this._lastActive = [];\n  },\n  // Get the title\n  // Args are: (tooltipItem, data)\n  getTitle: function getTitle() {\n    var me = this;\n    var opts = me._options;\n    var callbacks = opts.callbacks;\n    var beforeTitle = callbacks.beforeTitle.apply(me, arguments);\n    var title = callbacks.title.apply(me, arguments);\n    var afterTitle = callbacks.afterTitle.apply(me, arguments);\n    var lines = [];\n    lines = pushOrConcat(lines, splitNewlines(beforeTitle));\n    lines = pushOrConcat(lines, splitNewlines(title));\n    lines = pushOrConcat(lines, splitNewlines(afterTitle));\n    return lines;\n  },\n  // Args are: (tooltipItem, data)\n  getBeforeBody: function getBeforeBody() {\n    return getBeforeAfterBodyLines(this._options.callbacks.beforeBody.apply(this, arguments));\n  },\n  // Args are: (tooltipItem, data)\n  getBody: function getBody(tooltipItems, data) {\n    var me = this;\n    var callbacks = me._options.callbacks;\n    var bodyItems = [];\n    helpers.each(tooltipItems, function (tooltipItem) {\n      var bodyItem = {\n        before: [],\n        lines: [],\n        after: []\n      };\n      pushOrConcat(bodyItem.before, splitNewlines(callbacks.beforeLabel.call(me, tooltipItem, data)));\n      pushOrConcat(bodyItem.lines, callbacks.label.call(me, tooltipItem, data));\n      pushOrConcat(bodyItem.after, splitNewlines(callbacks.afterLabel.call(me, tooltipItem, data)));\n      bodyItems.push(bodyItem);\n    });\n    return bodyItems;\n  },\n  // Args are: (tooltipItem, data)\n  getAfterBody: function getAfterBody() {\n    return getBeforeAfterBodyLines(this._options.callbacks.afterBody.apply(this, arguments));\n  },\n  // Get the footer and beforeFooter and afterFooter lines\n  // Args are: (tooltipItem, data)\n  getFooter: function getFooter() {\n    var me = this;\n    var callbacks = me._options.callbacks;\n    var beforeFooter = callbacks.beforeFooter.apply(me, arguments);\n    var footer = callbacks.footer.apply(me, arguments);\n    var afterFooter = callbacks.afterFooter.apply(me, arguments);\n    var lines = [];\n    lines = pushOrConcat(lines, splitNewlines(beforeFooter));\n    lines = pushOrConcat(lines, splitNewlines(footer));\n    lines = pushOrConcat(lines, splitNewlines(afterFooter));\n    return lines;\n  },\n  update: function update(changed) {\n    var me = this;\n    var opts = me._options; // Need to regenerate the model because its faster than using extend and it is necessary due to the optimization in Chart.Element.transition\n    // that does _view = _model if ease === 1. This causes the 2nd tooltip update to set properties in both the view and model at the same time\n    // which breaks any animations.\n\n    var existingModel = me._model;\n    var model = me._model = getBaseModel(opts);\n    var active = me._active;\n    var data = me._data; // In the case where active.length === 0 we need to keep these at existing values for good animations\n\n    var alignment = {\n      xAlign: existingModel.xAlign,\n      yAlign: existingModel.yAlign\n    };\n    var backgroundPoint = {\n      x: existingModel.x,\n      y: existingModel.y\n    };\n    var tooltipSize = {\n      width: existingModel.width,\n      height: existingModel.height\n    };\n    var tooltipPosition = {\n      x: existingModel.caretX,\n      y: existingModel.caretY\n    };\n    var i, len;\n\n    if (active.length) {\n      model.opacity = 1;\n      var labelColors = [];\n      var labelTextColors = [];\n      tooltipPosition = positioners[opts.position].call(me, active, me._eventPosition);\n      var tooltipItems = [];\n\n      for (i = 0, len = active.length; i < len; ++i) {\n        tooltipItems.push(createTooltipItem(active[i]));\n      } // If the user provided a filter function, use it to modify the tooltip items\n\n\n      if (opts.filter) {\n        tooltipItems = tooltipItems.filter(function (a) {\n          return opts.filter(a, data);\n        });\n      } // If the user provided a sorting function, use it to modify the tooltip items\n\n\n      if (opts.itemSort) {\n        tooltipItems = tooltipItems.sort(function (a, b) {\n          return opts.itemSort(a, b, data);\n        });\n      } // Determine colors for boxes\n\n\n      helpers.each(tooltipItems, function (tooltipItem) {\n        labelColors.push(opts.callbacks.labelColor.call(me, tooltipItem, me._chart));\n        labelTextColors.push(opts.callbacks.labelTextColor.call(me, tooltipItem, me._chart));\n      }); // Build the Text Lines\n\n      model.title = me.getTitle(tooltipItems, data);\n      model.beforeBody = me.getBeforeBody(tooltipItems, data);\n      model.body = me.getBody(tooltipItems, data);\n      model.afterBody = me.getAfterBody(tooltipItems, data);\n      model.footer = me.getFooter(tooltipItems, data); // Initial positioning and colors\n\n      model.x = Math.round(tooltipPosition.x);\n      model.y = Math.round(tooltipPosition.y);\n      model.caretPadding = opts.caretPadding;\n      model.labelColors = labelColors;\n      model.labelTextColors = labelTextColors; // data points\n\n      model.dataPoints = tooltipItems; // We need to determine alignment of the tooltip\n\n      tooltipSize = getTooltipSize(this, model);\n      alignment = determineAlignment(this, tooltipSize); // Final Size and Position\n\n      backgroundPoint = getBackgroundPoint(model, tooltipSize, alignment, me._chart);\n    } else {\n      model.opacity = 0;\n    }\n\n    model.xAlign = alignment.xAlign;\n    model.yAlign = alignment.yAlign;\n    model.x = backgroundPoint.x;\n    model.y = backgroundPoint.y;\n    model.width = tooltipSize.width;\n    model.height = tooltipSize.height; // Point where the caret on the tooltip points to\n\n    model.caretX = tooltipPosition.x;\n    model.caretY = tooltipPosition.y;\n    me._model = model;\n\n    if (changed && opts.custom) {\n      opts.custom.call(me, model);\n    }\n\n    return me;\n  },\n  drawCaret: function drawCaret(tooltipPoint, size) {\n    var ctx = this._chart.ctx;\n    var vm = this._view;\n    var caretPosition = this.getCaretPosition(tooltipPoint, size, vm);\n    ctx.lineTo(caretPosition.x1, caretPosition.y1);\n    ctx.lineTo(caretPosition.x2, caretPosition.y2);\n    ctx.lineTo(caretPosition.x3, caretPosition.y3);\n  },\n  getCaretPosition: function getCaretPosition(tooltipPoint, size, vm) {\n    var x1, x2, x3, y1, y2, y3;\n    var caretSize = vm.caretSize;\n    var cornerRadius = vm.cornerRadius;\n    var xAlign = vm.xAlign;\n    var yAlign = vm.yAlign;\n    var ptX = tooltipPoint.x;\n    var ptY = tooltipPoint.y;\n    var width = size.width;\n    var height = size.height;\n\n    if (yAlign === 'center') {\n      y2 = ptY + height / 2;\n\n      if (xAlign === 'left') {\n        x1 = ptX;\n        x2 = x1 - caretSize;\n        x3 = x1;\n        y1 = y2 + caretSize;\n        y3 = y2 - caretSize;\n      } else {\n        x1 = ptX + width;\n        x2 = x1 + caretSize;\n        x3 = x1;\n        y1 = y2 - caretSize;\n        y3 = y2 + caretSize;\n      }\n    } else {\n      if (xAlign === 'left') {\n        x2 = ptX + cornerRadius + caretSize;\n        x1 = x2 - caretSize;\n        x3 = x2 + caretSize;\n      } else if (xAlign === 'right') {\n        x2 = ptX + width - cornerRadius - caretSize;\n        x1 = x2 - caretSize;\n        x3 = x2 + caretSize;\n      } else {\n        x2 = vm.caretX;\n        x1 = x2 - caretSize;\n        x3 = x2 + caretSize;\n      }\n\n      if (yAlign === 'top') {\n        y1 = ptY;\n        y2 = y1 - caretSize;\n        y3 = y1;\n      } else {\n        y1 = ptY + height;\n        y2 = y1 + caretSize;\n        y3 = y1; // invert drawing order\n\n        var tmp = x3;\n        x3 = x1;\n        x1 = tmp;\n      }\n    }\n\n    return {\n      x1: x1,\n      x2: x2,\n      x3: x3,\n      y1: y1,\n      y2: y2,\n      y3: y3\n    };\n  },\n  drawTitle: function drawTitle(pt, vm, ctx, opacity) {\n    var title = vm.title;\n\n    if (title.length) {\n      ctx.textAlign = vm._titleAlign;\n      ctx.textBaseline = 'top';\n      var titleFontSize = vm.titleFontSize;\n      var titleSpacing = vm.titleSpacing;\n      ctx.fillStyle = mergeOpacity(vm.titleFontColor, opacity);\n      ctx.font = helpers.fontString(titleFontSize, vm._titleFontStyle, vm._titleFontFamily);\n      var i, len;\n\n      for (i = 0, len = title.length; i < len; ++i) {\n        ctx.fillText(title[i], pt.x, pt.y);\n        pt.y += titleFontSize + titleSpacing; // Line Height and spacing\n\n        if (i + 1 === title.length) {\n          pt.y += vm.titleMarginBottom - titleSpacing; // If Last, add margin, remove spacing\n        }\n      }\n    }\n  },\n  drawBody: function drawBody(pt, vm, ctx, opacity) {\n    var bodyFontSize = vm.bodyFontSize;\n    var bodySpacing = vm.bodySpacing;\n    var body = vm.body;\n    ctx.textAlign = vm._bodyAlign;\n    ctx.textBaseline = 'top';\n    ctx.font = helpers.fontString(bodyFontSize, vm._bodyFontStyle, vm._bodyFontFamily); // Before Body\n\n    var xLinePadding = 0;\n\n    var fillLineOfText = function fillLineOfText(line) {\n      ctx.fillText(line, pt.x + xLinePadding, pt.y);\n      pt.y += bodyFontSize + bodySpacing;\n    }; // Before body lines\n\n\n    ctx.fillStyle = mergeOpacity(vm.bodyFontColor, opacity);\n    helpers.each(vm.beforeBody, fillLineOfText);\n    var drawColorBoxes = vm.displayColors;\n    xLinePadding = drawColorBoxes ? bodyFontSize + 2 : 0; // Draw body lines now\n\n    helpers.each(body, function (bodyItem, i) {\n      var textColor = mergeOpacity(vm.labelTextColors[i], opacity);\n      ctx.fillStyle = textColor;\n      helpers.each(bodyItem.before, fillLineOfText);\n      helpers.each(bodyItem.lines, function (line) {\n        // Draw Legend-like boxes if needed\n        if (drawColorBoxes) {\n          // Fill a white rect so that colours merge nicely if the opacity is < 1\n          ctx.fillStyle = mergeOpacity(vm.legendColorBackground, opacity);\n          ctx.fillRect(pt.x, pt.y, bodyFontSize, bodyFontSize); // Border\n\n          ctx.lineWidth = 1;\n          ctx.strokeStyle = mergeOpacity(vm.labelColors[i].borderColor, opacity);\n          ctx.strokeRect(pt.x, pt.y, bodyFontSize, bodyFontSize); // Inner square\n\n          ctx.fillStyle = mergeOpacity(vm.labelColors[i].backgroundColor, opacity);\n          ctx.fillRect(pt.x + 1, pt.y + 1, bodyFontSize - 2, bodyFontSize - 2);\n          ctx.fillStyle = textColor;\n        }\n\n        fillLineOfText(line);\n      });\n      helpers.each(bodyItem.after, fillLineOfText);\n    }); // Reset back to 0 for after body\n\n    xLinePadding = 0; // After body lines\n\n    helpers.each(vm.afterBody, fillLineOfText);\n    pt.y -= bodySpacing; // Remove last body spacing\n  },\n  drawFooter: function drawFooter(pt, vm, ctx, opacity) {\n    var footer = vm.footer;\n\n    if (footer.length) {\n      pt.y += vm.footerMarginTop;\n      ctx.textAlign = vm._footerAlign;\n      ctx.textBaseline = 'top';\n      ctx.fillStyle = mergeOpacity(vm.footerFontColor, opacity);\n      ctx.font = helpers.fontString(vm.footerFontSize, vm._footerFontStyle, vm._footerFontFamily);\n      helpers.each(footer, function (line) {\n        ctx.fillText(line, pt.x, pt.y);\n        pt.y += vm.footerFontSize + vm.footerSpacing;\n      });\n    }\n  },\n  drawBackground: function drawBackground(pt, vm, ctx, tooltipSize, opacity) {\n    ctx.fillStyle = mergeOpacity(vm.backgroundColor, opacity);\n    ctx.strokeStyle = mergeOpacity(vm.borderColor, opacity);\n    ctx.lineWidth = vm.borderWidth;\n    var xAlign = vm.xAlign;\n    var yAlign = vm.yAlign;\n    var x = pt.x;\n    var y = pt.y;\n    var width = tooltipSize.width;\n    var height = tooltipSize.height;\n    var radius = vm.cornerRadius;\n    ctx.beginPath();\n    ctx.moveTo(x + radius, y);\n\n    if (yAlign === 'top') {\n      this.drawCaret(pt, tooltipSize);\n    }\n\n    ctx.lineTo(x + width - radius, y);\n    ctx.quadraticCurveTo(x + width, y, x + width, y + radius);\n\n    if (yAlign === 'center' && xAlign === 'right') {\n      this.drawCaret(pt, tooltipSize);\n    }\n\n    ctx.lineTo(x + width, y + height - radius);\n    ctx.quadraticCurveTo(x + width, y + height, x + width - radius, y + height);\n\n    if (yAlign === 'bottom') {\n      this.drawCaret(pt, tooltipSize);\n    }\n\n    ctx.lineTo(x + radius, y + height);\n    ctx.quadraticCurveTo(x, y + height, x, y + height - radius);\n\n    if (yAlign === 'center' && xAlign === 'left') {\n      this.drawCaret(pt, tooltipSize);\n    }\n\n    ctx.lineTo(x, y + radius);\n    ctx.quadraticCurveTo(x, y, x + radius, y);\n    ctx.closePath();\n    ctx.fill();\n\n    if (vm.borderWidth > 0) {\n      ctx.stroke();\n    }\n  },\n  draw: function draw() {\n    var ctx = this._chart.ctx;\n    var vm = this._view;\n\n    if (vm.opacity === 0) {\n      return;\n    }\n\n    var tooltipSize = {\n      width: vm.width,\n      height: vm.height\n    };\n    var pt = {\n      x: vm.x,\n      y: vm.y\n    }; // IE11/Edge does not like very small opacities, so snap to 0\n\n    var opacity = Math.abs(vm.opacity < 1e-3) ? 0 : vm.opacity; // Truthy/falsey value for empty tooltip\n\n    var hasTooltipContent = vm.title.length || vm.beforeBody.length || vm.body.length || vm.afterBody.length || vm.footer.length;\n\n    if (this._options.enabled && hasTooltipContent) {\n      // Draw Background\n      this.drawBackground(pt, vm, ctx, tooltipSize, opacity); // Draw Title, Body, and Footer\n\n      pt.x += vm.xPadding;\n      pt.y += vm.yPadding; // Titles\n\n      this.drawTitle(pt, vm, ctx, opacity); // Body\n\n      this.drawBody(pt, vm, ctx, opacity); // Footer\n\n      this.drawFooter(pt, vm, ctx, opacity);\n    }\n  },\n\n  /**\n   * Handle an event\n   * @private\n   * @param {IEvent} event - The event to handle\n   * @returns {Boolean} true if the tooltip changed\n   */\n  handleEvent: function handleEvent(e) {\n    var me = this;\n    var options = me._options;\n    var changed = false;\n    me._lastActive = me._lastActive || []; // Find Active Elements for tooltips\n\n    if (e.type === 'mouseout') {\n      me._active = [];\n    } else {\n      me._active = me._chart.getElementsAtEventForMode(e, options.mode, options);\n    } // Remember Last Actives\n\n\n    changed = !helpers.arrayEquals(me._active, me._lastActive); // Only handle target event on tooltip change\n\n    if (changed) {\n      me._lastActive = me._active;\n\n      if (options.enabled || options.custom) {\n        me._eventPosition = {\n          x: e.x,\n          y: e.y\n        };\n        me.update(true);\n        me.pivot();\n      }\n    }\n\n    return changed;\n  }\n});\n/**\n * @namespace Chart.Tooltip.positioners\n */\n\nexports.positioners = positioners;","'use strict';\n\nmodule.exports = require('./helpers.core');\nmodule.exports.easing = require('./helpers.easing');\nmodule.exports.canvas = require('./helpers.canvas');\nmodule.exports.options = require('./helpers.options');"],"sourceRoot":""}