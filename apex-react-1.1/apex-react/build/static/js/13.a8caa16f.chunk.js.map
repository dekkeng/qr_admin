{"version":3,"sources":["views/cards/staticCardData.js","views/qr/qrComp.js","views/qr/qrDashboard.js","components/cards/minimalStatisticsWithChart2Card.js","components/cards/fitnessStatisticsWithChartCard.js","assets/img/t3.png"],"names":["__webpack_require__","d","__webpack_exports__","StaticCardData","ChartistData","labels","series","ChartistData2","DonutChartData1","name","className","value","DonutChartData2","DonutChartData3","QRComp","react_default","a","createElement","style","box_1","box_left","src","this","props","data","c_code","width","alt","pic","box_center","c_data","d_create","box_right","box_rightest","margin","Link","to","pathname","state","qr_id","Button_default","variant","Component","border","background","display","flexDirection","backgroundColor","alignItems","justifyContent","QRDashboard","_this","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","qr_list","_this2","localStorage","getItem","console","log","fetch_string","fetch","then","response","json","setState","Redirect","react","reactstrap_es","color","map","q","containner","qrComp","MinimalStatisticsChart2","iconLeft","iconRight","textDirection","iconSide","children","react__WEBPACK_IMPORTED_MODULE_5___default","reactstrap__WEBPACK_IMPORTED_MODULE_6__","classnames","cardBgColor","body","statisticsColor","statistics","text","react_chartist__WEBPACK_IMPORTED_MODULE_8___default","chartData","type","options","height","axisX","showGrid","showLabel","offset","axisY","low","fullWidth","PureComponent","FitnessStatisticsCardWithChart","reactstrap__WEBPACK_IMPORTED_MODULE_7__","textColor","textTop","statisticsTop","statisticsTopUnit","dountChartClass","donutChartData","donut","donutWidth","startAngle","chartPadding","total","labelInterpolationFnc","listener","draw","element","remove","statisticsBottom","textBottom","module","exports","p"],"mappings":"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","file":"static/js/13.a8caa16f.chunk.js","sourcesContent":["const StaticCardData = {\n   ChartistData: {\n      labels: [\"1\", \"2\", \"3\", \"4\", \"5\", \"6\", \"7\", \"8\", \"9\", \"10\", \"11\", \"12\", \"13\"],\n      series: [[50, 45, 60, 55, 70, 55, 60, 55, 65, 57, 60, 53, 53]]\n   },\n   ChartistData2: {\n      labels: [\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"June\", \"July\", \"Aug\"],\n      series: [[55, 60, 50, 55, 50, 60, 55, 57]]\n   },\n   DonutChartData1: {\n      series: [\n         {\n            name: \"done\",\n            className: \"ct-done\",\n            value: 10\n         },\n         {\n            name: \"outstanding\",\n            className: \"ct-outstanding\",\n            value: 3\n         }\n      ]\n   },\n   DonutChartData2: {\n      series: [\n         {\n            name: \"done\",\n            className: \"ct-done\",\n            value: 10\n         },\n         {\n            name: \"outstanding\",\n            className: \"ct-outstanding\",\n            value: 3\n         }\n      ]\n   },\n   DonutChartData3: {\n      series: [\n         {\n            name: \"done\",\n            className: \"ct-done\",\n            value: 10\n         },\n         {\n            name: \"outstanding\",\n            className: \"ct-outstanding\",\n            value: 3\n         }\n      ]\n   },\n  \n};\n\nexport { StaticCardData };\n","import React,{Component} from \"react\"\r\nimport pic_1 from \"../../assets/img/t3.png\"\r\nimport Button from '@material-ui/core/Button';\r\nimport { BrowserRouter as Router, Route, Link } from \"react-router-dom\";\r\nclass QRComp extends Component{\r\n\r\n  render(){\r\n    return(\r\n      <div style = {box_1}>\r\n        <div style = {box_left}>\r\n          <img src={\"https://yourqr.today/api/v1/qr.show/\"+this.props.data.c_code} width=\"190\" alt=\"Card cap 01\" className=\"\"style ={pic} />\r\n        </div>\r\n\r\n        <div style = {box_center}>\r\n          <p>Name QR :{this.props.data&&this.props.data.c_code} </p>\r\n          <p>URL :{this.props.data&&this.props.data.c_data}</p>\r\n          <p>Created at :{this.props.data&&this.props.data.d_create}</p>\r\n        </div>\r\n\r\n        <div style = {box_right}>\r\n          <p>จำนวนคนสแกน</p>\r\n\r\n        </div>\r\n\r\n        <div style = {box_rightest}>\r\n          <div style ={{margin:'auto'}}>\r\n          <Link to ={{pathname:'/qrstat',state:{qr_id:this.props.data.qr_id} }}>\r\n          <Button variant=\"outlined\">\r\n\r\n              Statisics\r\n\r\n          </Button>\r\n          </Link>\r\n          </div>\r\n          <div style ={{margin:'auto'}}>\r\n          <Button variant=\"outlined\" >\r\n            Download\r\n          </Button>\r\n          </div>\r\n          <div style ={{margin:'auto'}}>\r\n          <Button variant=\"outlined\" >\r\n            Who Scans me!\r\n          </Button>\r\n        </div>\r\n\r\n        </div>\r\n\r\n      </div>\r\n    )\r\n  }\r\n\r\n}\r\n\r\nconst containner = {\r\n  height:\"100vh\",\r\n};\r\n\r\nconst pic ={\r\nborder: '1px solid #000000'\r\n}\r\n\r\nconst box_1 ={\r\n  // display:'flex',\r\n  width:\"100%\",\r\n  background:'white',\r\n  margin:5,\r\n  display:'flex',\r\n  flexDirection:'row'\r\n}\r\n\r\nconst box_left = {\r\n\r\n}\r\n\r\nconst box_center = {\r\n  width: '50%'\r\n}\r\n\r\nconst box_right = {\r\n  width: '20%',\r\n\r\n}\r\n\r\nconst box_rightest = {\r\n  display: 'flex',\r\n  flexDirection:'column',\r\n  backgroundColor:'skyblue',\r\n  width:'15%',\r\n    alignItems: 'center',\r\n    justifyContent :'center',\r\n\r\n}\r\n\r\n\r\n\r\n\r\nexport default QRComp;\r\n","import React, { Component, Fragment } from \"react\";\nimport { Row, Col } from \"reactstrap\";\nimport QRComp from \"./qrComp.js\"\nimport * as Icon from \"react-feather\";\nimport { StaticCardData } from \"../cards/staticCardData\";\nimport { AdvancedCardData } from \"../cards/advancedCardData\";\n\nimport MinimalStatisticsChart2 from \"../../components/cards/minimalStatisticsWithChart2Card\";\n\nimport DiscoverPeopleListCard from \"../../components/cards/discoverPeopleListCard\";\nimport SalesAnalysisChartCarda from \"../../components/cards/salesAnalysisChartCard\";\n\nimport FitnessStatisticsChart from \"../../components/cards/fitnessStatisticsWithChartCard\";\n\nimport SalesPerVisitChartCard from \"../../components/cards/salesPerVisitChartCard\";\nimport DailyDietListCard from \"../../components/cards/dailyDietListCard\";\n\nimport UserStatisticsChartCard from \"../../components/cards/userStatisticsChartCard\";\nimport CarouselSliderCard from \"../../components/cards/carouselSliderCard\";\nimport EarningStatisticsChartCard from \"../../components/cards/earningStatisticsChartCard\";\nimport pic_1 from \"../../assets/img/t3.png\"\nimport { Card, CardBody, CardTitle, CardFooter, CardLink, CardText, Button, Badge } from \"reactstrap\";\nimport { Link ,Redirect} from \"react-router-dom\";\n\nclass QRDashboard extends Component {\n\n  constructor(props) {\n    super(props)\n    this.state = {\n      qr_list :[]\n    }\n  }\n\n  componentDidMount(){\n    if(!(localStorage.getItem('user_id')=='null' || localStorage.getItem(\"user_id\") === 'undefined')){\n      console.log(localStorage.getItem('user_id'))\n\n      let fetch_string = \"https://yourqr.today/api/v1/report.qr_list?user_id=\"+localStorage.getItem('user_id')\n        fetch(fetch_string)\n          .then((response) => response.json())\n          .then(data => {\n                     this.setState({qr_list:data.c_data})\n                     console.log(this.state.qr_list)\n                   }\n                  )\n                }\n  }\n\n   render() {\n     if(localStorage.getItem('user_id')=='null' || localStorage.getItem(\"user_id\") === 'undefined')\n      return (<Redirect to ={{pathname:'../pages/login'\n                            }}\n                                                        />\n              )\n      else\n      return (\n         <Fragment>\n          <h1>{localStorage.getItem('user_id')}</h1>\n          <h1>{localStorage.getItem('uuid')}</h1>\n          <Link to = '/qrcreate'>\n          <Button color=\"warning\">CreateQR</Button>\n          </Link>\n\n\n        {this.state.qr_list.map(q =>\n          <div style ={containner}>\n            <QRComp data = {q} />\n          </div>\n        )\n        }\n\n         </Fragment>\n      );\n   }\n}\n\nconst containner = {\n  backgroundColor:'skyblue',\n\n};\n\nexport default QRDashboard;\n","import React, { PureComponent } from \"react\";\nimport { Card, CardBody, Media } from \"reactstrap\";\nimport PropTypes from \"prop-types\";\nimport classnames from \"classnames\";\n\n//Chsrtis JS \nimport ChartistGraph from \"react-chartist\";\n//Chsrtis CSS\nimport \"chartist/dist/chartist.min.css\";\n//Component specific chart CSS\nimport \"../../assets/scss/components/cards/minimalStatisticsCardWithChart.scss\";\n\nclass MinimalStatisticsChart2 extends PureComponent {\n   render() {\n      let iconLeft;\n      let iconRight;\n      let textDirection;\n\n      if (this.props.iconSide === \"right\") {\n         iconRight = this.props.children;\n      } else {\n         iconLeft = this.props.children;\n         textDirection = \"text-right\";\n      }\n      return (\n         <Card className={classnames(this.props.cardBgColor)}>\n            <CardBody className=\"pt-2 pb-0\">\n               <Media>\n                  {iconLeft}\n                  <Media body className={classnames(\"white\", textDirection)}>\n                     <h3 className={classnames(\"font-large-1 mb-1\", this.props.statisticsColor)}>{this.props.statistics}</h3>\n                     <span>{this.props.text}</span>\n                  </Media>\n                  {iconRight}\n               </Media>\n            </CardBody>\n            <ChartistGraph\n               className=\"WidgetlineChart WidgetlineChartshadow mb-3\"\n               data={this.props.chartData}\n               type=\"Line\"\n               options={{\n                  height: \"55px\",\n                  axisX: {\n                     showGrid: false,\n                     showLabel: false,\n                     offset: 0\n                  },\n                  axisY: {\n                     showGrid: false,\n                     low: 50,\n                     showLabel: false,\n                     offset: 0\n                  },\n                  fullWidth: true\n               }}\n            />\n         </Card>\n      );\n   }\n}\n\nMinimalStatisticsChart2.propTypes = {\n   iconSide: PropTypes.string,   \n   statisticsColor: PropTypes.string,\n   statistics: PropTypes.string,\n   cardBgColor: PropTypes.string,\n   text: PropTypes.string,\n   chartData: PropTypes.object\n};\n\nexport default MinimalStatisticsChart2;\n","import React, { PureComponent } from \"react\";\nimport PropTypes from \"prop-types\";\nimport classnames from \"classnames\";\n// reactstrap core  components\nimport { Card, CardBody } from \"reactstrap\";\n//Chsrtis JS\nimport ChartistGraph from \"react-chartist\";\n//Chsrtis CSS\nimport \"chartist/dist/chartist.min.css\";\n//Component specific chart CSS\nimport \"../../assets/scss/components/cards/fitnessStatisticsCardWithChart.scss\";\n\nclass FitnessStatisticsCardWithChart extends PureComponent {\n   render() {\n      return (\n         <Card>\n            <CardBody className=\"px-3 py-3\">\n               <div className=\"text-center pb-0\">\n                  <span\n                     className={classnames(\n                        \"font-medium-2\",\n                        this.props.textColor\n                     )}\n                  >\n                     {this.props.textTop}\n                  </span>\n                  <h3 className=\"font-large-2 mt-1\">\n                     {this.props.statisticsTop}\n                     <span className=\"font-medium-1 grey darken-1 text-bold-400\">\n                        {this.props.statisticsTopUnit}\n                     </span>\n                  </h3>\n               </div>\n               <ChartistGraph\n                  className={classnames(\n                     \"height-250\",\n                     this.props.dountChartClass\n                  )}\n                  data={this.props.donutChartData}\n                  type=\"Pie\"\n                  options={{\n                     donut: true,\n                     donutWidth: 3,\n                     startAngle: 0,\n                     chartPadding: 25,\n                     total: 13,\n                     labelInterpolationFnc: value => {\n                        return \"\\ue9c9\";\n                     }\n                  }}\n                  listener={{\n                     draw: data => {\n                        if (data.type === \"label\") {\n                           data.element.remove();\n                        }\n                     }\n                  }}\n               />\n               <div className=\"text-center\">\n                  <span className=\"font-large-1 d-block mb-1\">\n                     {this.props.statisticsBottom}\n                  </span>\n                  <span\n                     className={classnames(\n                        \"primary font-medium-1\",\n                        this.props.textColor\n                     )}\n                  >\n                     {this.props.textBottom}\n                  </span>\n               </div>\n            </CardBody>\n         </Card>\n      );\n   }\n}\n\nFitnessStatisticsCardWithChart.propTypes = {\n   donutChartData: PropTypes.object,\n   textTop: PropTypes.string,\n   statisticsTopUnit: PropTypes.string,\n   statisticsTop: PropTypes.string,\n   textBottom: PropTypes.string,\n   statisticsBottom: PropTypes.string,\n   textColor: PropTypes.string\n};\n\nexport default FitnessStatisticsCardWithChart;\n","module.exports = __webpack_public_path__ + \"static/media/t3.0b5710ad.png\";"],"sourceRoot":""}