{"version":3,"sources":["views/pages/register.js","../node_modules/react-router/es/generatePath.js","../node_modules/react-router/es/Redirect.js","../node_modules/react-router-dom/es/Redirect.js"],"names":["Register","state","isChecked","email","username","passwd","redirect","c_data","handleChecked","e","_this","setState","prevState","emailChange","target","value","usernameChange","passwdChange","postData","console","log","fetch","method","headers","Headers","body","JSON","stringify","c_email","c_username","c_passwd","c_fname","then","res","json","data","success","msg","catch","err","this","react__WEBPACK_IMPORTED_MODULE_5___default","a","createElement","react_router_dom__WEBPACK_IMPORTED_MODULE_6__","to","pathname","className","reactstrap__WEBPACK_IMPORTED_MODULE_8__","xs","md","type","name","placeholder","onChange","required","checked","id","for","color","block","onClick","react_router_dom__WEBPACK_IMPORTED_MODULE_7__","Component","patternCache","cacheCount","es_generatePath","pattern","arguments","length","undefined","params","cacheKey","cache","compiledGenerator","path_to_regexp_default","compile","generatePath_compileGenerator","generator","pretty","_extends","Object","assign","i","source","key","prototype","hasOwnProperty","call","Redirect_Redirect","_React$Component","Redirect","instance","Constructor","TypeError","_classCallCheck","self","ReferenceError","_possibleConstructorReturn","apply","subClass","superClass","create","constructor","enumerable","writable","configurable","setPrototypeOf","__proto__","_inherits","isStatic","context","router","staticContext","componentWillMount","browser_default","perform","componentDidMount","componentDidUpdate","prevProps","prevTo","es","nextTo","props","warning_default","search","computeTo","_ref","computedMatch","history","push","replace","render","react_default","propTypes","prop_types_default","object","bool","from","string","oneOfType","isRequired","defaultProps","contextTypes","shape","func","es_Redirect","__webpack_exports__"],"mappings":"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","file":"static/js/85.87ae3624.chunk.js","sourcesContent":["// import external modules\nimport React, { Component } from \"react\";\nimport { NavLink,Redirect } from \"react-router-dom\";\nimport {\n   Row,\n   Col,\n   Input,\n   Form,\n   FormGroup,\n   Button,\n   Label,\n   Card,\n   CardBody,\n   CardFooter\n} from \"reactstrap\";\n\nclass Register extends Component {\n   state = {\n      isChecked: true,\n      email: '',\n      username :'',\n      passwd:'',\n      redirect:false,\n      c_data:''\n   };\n   handleChecked = e => {\n      this.setState(prevState => ({\n         isChecked: !prevState.isChecked\n      }));\n   };\n   emailChange = e =>{\n     this.setState({email:e.target.value})\n   }\n\n   usernameChange = e =>{\n     this.setState({username:e.target.value})\n   }\n\n   passwdChange = e =>{\n     this.setState({passwd:e.target.value})\n   }\n\n  postData =() => {\n            console.log(\"AA\")\n            fetch('https://yourqr.today/api/v1/user.nonce', {\n                method: 'POST',\n                headers : new Headers(),\n                body:JSON.stringify({c_email:this.state.email\n                                    ,c_username:this.state.username\n                                    ,c_passwd:this.state.passwd\n                                    ,c_fname:'pawut'\n                                    })\n            }).then((res) => res.json())\n            .then((data) =>  {console.log(data)\n                              if(data.success == false)\n                              this.setState({'c_data':data.c_data})\n                              else\n                                this.setState({'c_data':data.c_data.msg})\n\n\n\n                              } \n            )\n            .catch((err)=>console.log(err))\n        }\n\n\n   render() {\n     if(this.state.redirect)\n      return (<Redirect to ={{pathname:'/pages/login'}}/>\n              )\n      else\n      return (\n         <div className=\"container\">\n            <Row className=\"full-height-vh\">\n               <Col xs=\"12\" className=\"d-flex align-items-center justify-content-center\">\n                  <Card className=\"gradient-indigo-purple text-center width-400\">\n                     <CardBody>\n                        <h2 className=\"white py-4\">Register</h2>\n                        <h3>{this.state.c_data}</h3>\n                        <Form className=\"pt-2\">\n                           <FormGroup>\n                              <Col md=\"12\">\n                                 <Input\n                                    type='email'\n                                    name=\"inputName\"\n                                    placeholder=\"Email\"\n                                    value ={this.state.email}\n                                    onChange = {this.emailChange}\n                                    required\n                                 />\n                              </Col>\n                           </FormGroup>\n                           <FormGroup>\n                              <Col md=\"12\">\n                                 <Input\n                                    type='text'\n                                    className=\"form-control\"\n                                    placeholder=\"Username\"\n                                    value ={this.state.username}\n                                    onChange = {this.usernameChange}\n                                    required\n                                 />\n                              </Col>\n                           </FormGroup>\n\n                           <FormGroup>\n                              <Col md=\"12\">\n                                 <Input\n                                    type=\"password\"\n                                    className=\"form-control\"\n                                    value ={this.state.passwd}\n                                    onChange = {this.passwdChange}\n                                    placeholder=\"passwd\"\n                                    required\n                                 />\n                              </Col>\n                           </FormGroup>\n\n                           <FormGroup>\n                              <Row>\n                                 <Col md=\"12\">\n                                    <div className=\"custom-control custom-checkbox mb-2 mr-sm-2 mb-sm-0 ml-3\">\n                                       <Input\n                                          type=\"checkbox\"\n                                          className=\"custom-control-input\"\n                                          checked={this.state.isChecked}\n                                          onChange={this.handleChecked}\n                                          id=\"rememberme\"\n                                       />\n                                       <Label className=\"custom-control-label float-left white\" for=\"rememberme\">\n                                          I agree terms and conditions.\n                                       </Label>\n                                    </div>\n                                 </Col>\n                              </Row>\n                           </FormGroup>\n                           <FormGroup>\n                              <Col md=\"12\">\n                                   <Button type=\"button\" color=\"danger\" block className=\"btn-pink btn-raised\" onClick = { this.postData}>\n                                    Submit\n                                 </Button>\n                                 <Button type=\"button\" color=\"secondary\" block className=\"btn-raised\">\n                                    Cancel\n                                 </Button>\n                              </Col>\n                           </FormGroup>\n                        </Form>\n                     </CardBody>\n                     <CardFooter>\n                        <div className=\"float-left\">\n                           <NavLink to=\"/pages/forgot-password\" className=\"text-white\">\n                              Forgot Password?\n                           </NavLink>\n                        </div>\n                        <div className=\"float-right\">\n                           <NavLink to=\"/pages/login\" className=\"text-white\">\n                              Login\n                           </NavLink>\n                        </div>\n                     </CardFooter>\n                  </Card>\n               </Col>\n            </Row>\n         </div>\n      );\n   }\n}\n\nexport default Register;\n","import pathToRegexp from \"path-to-regexp\";\nvar patternCache = {};\nvar cacheLimit = 10000;\nvar cacheCount = 0;\n\nvar compileGenerator = function compileGenerator(pattern) {\n  var cacheKey = pattern;\n  var cache = patternCache[cacheKey] || (patternCache[cacheKey] = {});\n  if (cache[pattern]) return cache[pattern];\n  var compiledGenerator = pathToRegexp.compile(pattern);\n\n  if (cacheCount < cacheLimit) {\n    cache[pattern] = compiledGenerator;\n    cacheCount++;\n  }\n\n  return compiledGenerator;\n};\n/**\n * Public API for generating a URL pathname from a pattern and parameters.\n */\n\n\nvar generatePath = function generatePath() {\n  var pattern = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : \"/\";\n  var params = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n  if (pattern === \"/\") {\n    return pattern;\n  }\n\n  var generator = compileGenerator(pattern);\n  return generator(params, {\n    pretty: true\n  });\n};\n\nexport default generatePath;","var _extends = Object.assign || function (target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i];\n\n    for (var key in source) {\n      if (Object.prototype.hasOwnProperty.call(source, key)) {\n        target[key] = source[key];\n      }\n    }\n  }\n\n  return target;\n};\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (!self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\nimport warning from \"warning\";\nimport invariant from \"invariant\";\nimport { createLocation, locationsAreEqual } from \"history\";\nimport generatePath from \"./generatePath\";\n/**\n * The public API for updating the location programmatically\n * with a component.\n */\n\nvar Redirect = function (_React$Component) {\n  _inherits(Redirect, _React$Component);\n\n  function Redirect() {\n    _classCallCheck(this, Redirect);\n\n    return _possibleConstructorReturn(this, _React$Component.apply(this, arguments));\n  }\n\n  Redirect.prototype.isStatic = function isStatic() {\n    return this.context.router && this.context.router.staticContext;\n  };\n\n  Redirect.prototype.componentWillMount = function componentWillMount() {\n    invariant(this.context.router, \"You should not use <Redirect> outside a <Router>\");\n    if (this.isStatic()) this.perform();\n  };\n\n  Redirect.prototype.componentDidMount = function componentDidMount() {\n    if (!this.isStatic()) this.perform();\n  };\n\n  Redirect.prototype.componentDidUpdate = function componentDidUpdate(prevProps) {\n    var prevTo = createLocation(prevProps.to);\n    var nextTo = createLocation(this.props.to);\n\n    if (locationsAreEqual(prevTo, nextTo)) {\n      warning(false, \"You tried to redirect to the same route you're currently on: \" + (\"\\\"\" + nextTo.pathname + nextTo.search + \"\\\"\"));\n      return;\n    }\n\n    this.perform();\n  };\n\n  Redirect.prototype.computeTo = function computeTo(_ref) {\n    var computedMatch = _ref.computedMatch,\n        to = _ref.to;\n\n    if (computedMatch) {\n      if (typeof to === \"string\") {\n        return generatePath(to, computedMatch.params);\n      } else {\n        return _extends({}, to, {\n          pathname: generatePath(to.pathname, computedMatch.params)\n        });\n      }\n    }\n\n    return to;\n  };\n\n  Redirect.prototype.perform = function perform() {\n    var history = this.context.router.history;\n    var push = this.props.push;\n    var to = this.computeTo(this.props);\n\n    if (push) {\n      history.push(to);\n    } else {\n      history.replace(to);\n    }\n  };\n\n  Redirect.prototype.render = function render() {\n    return null;\n  };\n\n  return Redirect;\n}(React.Component);\n\nRedirect.propTypes = {\n  computedMatch: PropTypes.object,\n  // private, from <Switch>\n  push: PropTypes.bool,\n  from: PropTypes.string,\n  to: PropTypes.oneOfType([PropTypes.string, PropTypes.object]).isRequired\n};\nRedirect.defaultProps = {\n  push: false\n};\nRedirect.contextTypes = {\n  router: PropTypes.shape({\n    history: PropTypes.shape({\n      push: PropTypes.func.isRequired,\n      replace: PropTypes.func.isRequired\n    }).isRequired,\n    staticContext: PropTypes.object\n  }).isRequired\n};\nexport default Redirect;","// Written in this round about way for babel-transform-imports\nimport Redirect from \"react-router/es/Redirect\";\nexport default Redirect;"],"sourceRoot":""}